name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  verify-release:
    runs-on: ubuntu-latest
    outputs:
      is_on_main: ${{ steps.verify.outputs.is_on_main }}
    steps:
      - uses: actions/checkout@v4
      - name: Verify tag commit is on main
        id: verify
        run: |
          # Fetch origin/main and check whether the tagged commit is contained in main
          git fetch origin main --depth=1
          if git merge-base --is-ancestor $GITHUB_SHA origin/main; then
            echo "is_on_main=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_on_main=false" >> "$GITHUB_OUTPUT"
          fi

  build-package-and-publish:
    needs: verify-release
    if: ${{ needs.verify-release.outputs.is_on_main == 'true' }}
    runs-on: ubuntu-latest
    env:
      VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Build webview
        run: npm run webview:build
      - name: Build extension
        run: npm run build
      - name: Create VSIX
        run: npm run package:vsix
      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}

            See [CHANGELOG.md](https://github.com/plures/azuredevops-integration-extension/blob/main/CHANGELOG.md) for details.
          files: azuredevops-integration-extension-${{ steps.version.outputs.version }}.vsix
          draft: false
          prerelease: false
      - name: Publish to Marketplace
        if: ${{ env.VSCE_TOKEN != '' }}
        run: |
          npm install -g @vscode/vsce
          vsce publish --packagePath azuredevops-integration-extension-${{ steps.version.outputs.version }}.vsix --pat ${{ env.VSCE_TOKEN }}

{
  "version": 3,
  "sources": ["../../node_modules/svelte/src/runtime/internal/utils.js", "../../node_modules/svelte/src/runtime/internal/globals.js", "../../node_modules/svelte/src/runtime/internal/ResizeObserverSingleton.js", "../../node_modules/svelte/src/runtime/internal/dom.js", "../../node_modules/svelte/src/runtime/internal/lifecycle.js", "../../node_modules/svelte/src/runtime/internal/scheduler.js", "../../node_modules/svelte/src/runtime/internal/transitions.js", "../../node_modules/svelte/src/runtime/internal/each.js", "../../node_modules/svelte/src/shared/boolean_attributes.js", "../../node_modules/svelte/src/runtime/internal/Component.js", "../../node_modules/svelte/src/shared/version.js", "../../node_modules/svelte/src/runtime/internal/disclose-version/index.js", "../../node_modules/svelte/src/runtime/store/index.js", "../../src/webview/toastStore.ts", "../../src/webview/Toasts.svelte", "../../src/webview/App.svelte", "../../src/webview/svelte-main.ts"],
  "sourcesContent": ["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n", "/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n", "import { globals } from './globals.js';\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nexport class ResizeObserverSingleton {\n\t/**\n\t * @private\n\t * @readonly\n\t * @type {WeakMap<Element, import('./private.js').Listener>}\n\t */\n\t_listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n\t/**\n\t * @private\n\t * @type {ResizeObserver}\n\t */\n\t_observer = undefined;\n\n\t/** @type {ResizeObserverOptions} */\n\toptions;\n\n\t/** @param {ResizeObserverOptions} options */\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {Element} element\n\t * @param {import('./private.js').Listener} listener\n\t * @returns {() => void}\n\t */\n\tobserve(element, listener) {\n\t\tthis._listeners.set(element, listener);\n\t\tthis._getObserver().observe(element, this.options);\n\t\treturn () => {\n\t\t\tthis._listeners.delete(element);\n\t\t\tthis._observer.unobserve(element); // this line can probably be removed\n\t\t};\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_getObserver() {\n\t\treturn (\n\t\t\tthis._observer ??\n\t\t\t(this._observer = new ResizeObserver((entries) => {\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tResizeObserverSingleton.entries.set(entry.target, entry);\n\t\t\t\t\tthis._listeners.get(entry.target)?.(entry);\n\t\t\t\t}\n\t\t\t}))\n\t\t);\n\t}\n}\n\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n", "import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n", "import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n", "import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n", "import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro \u2014 restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro \u2014 we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro \u2014 needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n", "import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n", "const _boolean_attributes = /** @type {const} */ ([\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected'\n]);\n\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n *\n * @type {Set<string>}\n */\nexport const boolean_attributes = new Set([..._boolean_attributes]);\n\n/** @typedef {typeof _boolean_attributes[number]} BooleanAttributes */\n", "import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n", "// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n", "import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n", "import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n", "import { writable } from 'svelte/store';\n\nexport interface Toast {\n  id: number;\n  message: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  timeout: number; // ms (0 => persistent)\n}\n\nlet counter = 0;\nconst store = writable<Toast[]>([]);\nexport const toasts = store;\n\nexport function addToast(message: string, opts: Partial<Pick<Toast, 'type' | 'timeout'>> = {}) {\n  const id = ++counter;\n  const toast: Toast = {\n    id,\n    message,\n    type: opts.type || 'info',\n    timeout: typeof opts.timeout === 'number' ? opts.timeout : opts.type === 'error' ? 8000 : 4000,\n  };\n  store.update((list) => [...list, toast]);\n  if (toast.timeout > 0) {\n    setTimeout(() => removeToast(id), toast.timeout);\n  }\n  return id;\n}\n\nexport function removeToast(id: number) {\n  store.update((list) => list.filter((t) => t.id !== id));\n}\n\nexport function clearToasts() {\n  store.set([]);\n}\n", "<script>\r\n  import { toasts, removeToast } from './toastStore';\r\n  export let ariaLabel = 'Notifications';\r\n</script>\r\n\r\n<div class=\"toast-region\" role=\"region\" aria-live=\"polite\" aria-label={ariaLabel}>\r\n  {#each $toasts as t (t.id)}\r\n    <div class=\"toast {t.type}\" role=\"status\">\r\n      <div class=\"msg\">{t.message}</div>\r\n      <button\r\n        class=\"close\"\r\n        title=\"Dismiss\"\r\n        aria-label=\"Dismiss notification\"\r\n        on:click={() => removeToast(t.id)}>&times;</button\r\n      >\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .toast-region {\r\n    position: fixed;\r\n    bottom: 12px;\r\n    right: 12px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n    z-index: 1000;\r\n    max-width: 360px;\r\n    pointer-events: none; /* allow clicks to underlying except inside toast */\r\n  }\r\n  .toast {\r\n    background: var(--vscode-editorWidget-background);\r\n    border: 1px solid var(--vscode-editorWidget-border);\r\n    padding: 10px 12px 10px 14px;\r\n    border-left: 4px solid var(--vscode-editorWidget-border);\r\n    border-radius: 6px;\r\n    color: var(--vscode-editor-foreground);\r\n    font-size: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n    pointer-events: auto;\r\n    animation: fadeIn 160ms ease;\r\n  }\r\n  .toast.info {\r\n    border-left-color: var(--ado-blue);\r\n  }\r\n  .toast.success {\r\n    border-left-color: var(--state-resolved);\r\n  }\r\n  .toast.warning {\r\n    border-left-color: var(--ado-orange);\r\n  }\r\n  .toast.error {\r\n    border-left-color: var(--ado-red);\r\n  }\r\n  .toast .msg {\r\n    flex: 1;\r\n    line-height: 1.3;\r\n  }\r\n  .toast button.close {\r\n    border: none;\r\n    background: transparent;\r\n    color: var(--vscode-editor-foreground);\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    padding: 0 4px;\r\n    line-height: 1;\r\n    border-radius: 3px;\r\n  }\r\n  .toast button.close:hover {\r\n    background: var(--vscode-toolbar-hoverBackground);\r\n  }\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(4px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n</style>\r\n", "<script>\n  import { createEventDispatcher } from 'svelte';\n  import Toasts from './Toasts.svelte';\n  const dispatch = createEventDispatcher();\n  export let workItemCount = 0;\n  // Optional subtitle (removed legacy 'Svelte flag on' marker)\n  export let subtitle = '';\n  export let hasItems = false;\n  export let timerActive = false;\n  export let timerRunning = false;\n  export let timerElapsedLabel = '';\n  export let activeId = 0; // 0 means none\n  export let activeTitle = '';\n  export let items = [];\n  export let kanbanView = false;\n  export let loading = false;\n  export let initializing = false;\n  export let errorMsg = '';\n  // Filters / sort\n  export let filterText = '';\n  export let typeFilter = '';\n  export let stateFilter = 'all'; // one of 'all', columnDefs keys\n  export let sortKey = 'updated-desc'; // 'updated-desc' | 'id-desc' | 'id-asc' | 'title-asc'\n  export let availableStates = []; // dynamic list of normalized state keys\n  export let availableTypes = [];\n  // Query selector\n  export let selectedQuery = 'My Activity';\n  export let queryDescription = '';\n  export let summaryDraft = '';\n  export let summaryStatus = '';\n  export let summaryProvider = 'builtin';\n  export let summaryBusy = false;\n  export let summaryTargetId = 0;\n  export let summaryWorkItemId = 0;\n\n  // Keyboard navigation state\n  let focusedIndex = 0;\n  let selectedItems = new Set();\n  let keyboardNavigationEnabled = true;\n  // Connections\n  export let connections = [];\n  /** @type {string | undefined} */\n  export let activeConnectionId = undefined;\n  /** @type {Array<{ connectionId: string; label: string; message: string; detail?: string }>} */\n  export let authReminders = [];\n\n  // Multi-select mode\n  let multiSelectMode = false;\n\n  function toggleItemSelection(id) {\n    if (selectedItems.has(id)) {\n      selectedItems.delete(id);\n    } else {\n      selectedItems.add(id);\n    }\n    selectedItems = new Set(selectedItems); // Trigger reactivity\n    dispatch('selectionChanged', { selectedIds: Array.from(selectedItems) });\n  }\n\n  function clearSelection() {\n    selectedItems.clear();\n    selectedItems = new Set(); // Trigger reactivity\n    dispatch('selectionChanged', { selectedIds: [] });\n  }\n\n  function selectAll() {\n    items.forEach((item) => {\n      const id = Number(item.id || item.fields?.['System.Id']);\n      if (id) selectedItems.add(id);\n    });\n    selectedItems = new Set(selectedItems); // Trigger reactivity\n    dispatch('selectionChanged', { selectedIds: Array.from(selectedItems) });\n  }\n\n  function onRefresh() {\n    dispatch('refresh');\n  }\n  function onOpenFirst() {\n    if (hasItems) dispatch('openFirst');\n  }\n  function onStartTimer() {\n    if (hasItems && !timerActive) dispatch('startTimer');\n  }\n  function onStopTimer() {\n    if (timerActive) dispatch('stopTimer');\n  }\n  function onOpenActive() {\n    if (timerActive && activeId) dispatch('openActive', { id: activeId });\n  }\n  function onCreate() {\n    dispatch('createWorkItem');\n  }\n  function onToggleKanban() {\n    dispatch('toggleKanban');\n  }\n  function onReminderSignIn(connectionId) {\n    dispatch('authReminderAction', { connectionId, action: 'signIn' });\n  }\n  function onReminderDismiss(connectionId) {\n    dispatch('authReminderAction', { connectionId, action: 'dismiss' });\n  }\n  function onFilterInput(e) {\n    dispatch('filtersChanged', {\n      filterText: e.target.value,\n      typeFilter,\n      stateFilter,\n      sortKey,\n    });\n  }\n  function onStateFilterChange(e) {\n    dispatch('filtersChanged', {\n      filterText,\n      typeFilter,\n      stateFilter: e.target.value,\n      sortKey,\n    });\n  }\n  function onTypeFilterChange(e) {\n    dispatch('filtersChanged', {\n      filterText,\n      typeFilter: e.target.value,\n      stateFilter,\n      sortKey,\n    });\n  }\n  function onSortChange(e) {\n    dispatch('filtersChanged', {\n      filterText,\n      typeFilter,\n      stateFilter,\n      sortKey: e.target.value,\n    });\n  }\n  function onSummaryInput(e) {\n    dispatch('summaryDraftChanged', { value: e.target.value });\n  }\n  function onSummaryBlur(e) {\n    dispatch('summaryDraftBlur', { value: e.target.value });\n  }\n  function onGenerateSummary() {\n    dispatch('generateSummary');\n  }\n  function onStopAndApplySummary() {\n    dispatch('stopAndApplySummary');\n  }\n  function onCancelSummary() {\n    dispatch('cancelSummary');\n  }\n  function onQueryChange(e) {\n    dispatch('queryChanged', { query: e.target.value });\n  }\n  function onConnectionChange(e) {\n    dispatch('connectionChanged', { connectionId: e.target.value });\n  }\n\n  // Query options\n  const queryOptions = [\n    {\n      value: 'My Activity',\n      label: 'My Activity',\n      description: \"Work items I've created, assigned to, or recently changed\",\n    },\n    {\n      value: 'My Work Items',\n      label: 'My Work Items',\n      description: 'Work items currently assigned to me',\n    },\n    {\n      value: 'Assigned to me',\n      label: 'Assigned to me',\n      description: 'Work items currently assigned to me',\n    },\n    {\n      value: 'Current Sprint',\n      label: 'Current Sprint',\n      description: 'Work items in the current iteration',\n    },\n    {\n      value: 'All Active',\n      label: 'All Active',\n      description: 'All active work items in the project',\n    },\n    {\n      value: 'Recently Updated',\n      label: 'Recently Updated',\n      description: 'Work items updated in the last 14 days',\n    },\n    { value: 'Following', label: 'Following', description: \"Work items I'm following\" },\n    { value: 'Mentioned', label: 'Mentioned', description: \"Work items where I've been mentioned\" },\n  ];\n\n  // Keyboard navigation handlers\n  function handleKeydown(event) {\n    if (!keyboardNavigationEnabled) return;\n\n    const { key, ctrlKey, metaKey, shiftKey } = event;\n    const isModifier = ctrlKey || metaKey;\n\n    switch (key) {\n      case 'j':\n      case 'ArrowDown':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateDown();\n        }\n        break;\n      case 'k':\n      case 'ArrowUp':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateUp();\n        }\n        break;\n      case 'h':\n      case 'ArrowLeft':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateLeft();\n        }\n        break;\n      case 'l':\n      case 'ArrowRight':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateRight();\n        }\n        break;\n      case 'Home':\n        event.preventDefault();\n        navigateToTop();\n        break;\n      case 'End':\n        event.preventDefault();\n        navigateToBottom();\n        break;\n      case 'Enter':\n        if (!isModifier) {\n          event.preventDefault();\n          openFocusedItem();\n        }\n        break;\n      case ' ':\n        if (!isModifier) {\n          event.preventDefault();\n          toggleSelection();\n        }\n        break;\n      case 'Escape':\n        event.preventDefault();\n        clearSelection();\n        break;\n      case 'a':\n        if (isModifier) {\n          event.preventDefault();\n          selectAll();\n        }\n        break;\n      case 'r':\n        if (!isModifier) {\n          event.preventDefault();\n          onRefresh();\n        }\n        break;\n      case 'v':\n        if (!isModifier) {\n          event.preventDefault();\n          dispatch('toggleKanbanView');\n        }\n        break;\n      case 'f':\n        if (!isModifier) {\n          event.preventDefault();\n          focusSearch();\n        }\n        break;\n    }\n  }\n\n  function navigateDown() {\n    if (focusedIndex < items.length - 1) {\n      focusedIndex++;\n      updateFocus();\n    }\n  }\n\n  function navigateUp() {\n    if (focusedIndex > 0) {\n      focusedIndex--;\n      updateFocus();\n    }\n  }\n\n  function navigateLeft() {\n    if (kanbanView) {\n      // In Kanban view, move to previous column\n      updateFocus();\n    }\n  }\n\n  function navigateRight() {\n    if (kanbanView) {\n      // In Kanban view, move to next column\n      updateFocus();\n    }\n  }\n\n  function navigateToTop() {\n    focusedIndex = 0;\n    updateFocus();\n  }\n\n  function navigateToBottom() {\n    focusedIndex = Math.max(0, items.length - 1);\n    updateFocus();\n  }\n\n  function toggleSelection() {\n    // Get ID of focused item\n    if (focusedIndex >= 0 && focusedIndex < items.length) {\n      const item = items[focusedIndex];\n      const id = Number(item.id || item.fields?.['System.Id']);\n      if (id) {\n        toggleItemSelection(id);\n      }\n    }\n  }\n\n  function openFocusedItem() {\n    if (items[focusedIndex]) {\n      dispatch('openWorkItem', { id: items[focusedIndex].id });\n    }\n  }\n\n  function focusSearch() {\n    // Focus the search input\n    const searchInput = document.querySelector('input[type=\"text\"]');\n    if (searchInput) {\n      searchInput.focus();\n    }\n  }\n\n  function updateFocus() {\n    // Scroll focused item into view\n    const focusedElement = document.querySelector(`[data-index=\"${focusedIndex}\"]`);\n    if (focusedElement) {\n      focusedElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  // Listen for messages from the extension\n  function handleMessage(event) {\n    const { type, data } = event.detail;\n\n    switch (type) {\n      case 'updateFocus':\n        focusedIndex = data.focusedIndex;\n        updateFocus();\n        break;\n      case 'updateSelection':\n        selectedItems = new Set(data.selectedItems);\n        break;\n      case 'focusSearch':\n        focusSearch();\n        break;\n    }\n  }\n\n  $: summaryButtonLabel =\n    summaryProvider === 'openai' ? 'Generate AI Summary' : 'Copy Copilot Prompt';\n  $: summaryHelperText =\n    summaryProvider === 'openai'\n      ? 'Creates an OpenAI summary and copies it to your clipboard.'\n      : 'Copies a Copilot-ready prompt to your clipboard.';\n  $: summaryGenerateDisabled = summaryBusy || !summaryTargetId;\n  $: summaryApplyDisabled = summaryBusy || !timerActive;\n  $: summaryAreaDisabled = !summaryTargetId;\n\n  // DnD helpers\n  let draggingId = null;\n  function handleDragStart(ev, it) {\n    draggingId = it.id;\n    try {\n      ev.dataTransfer?.setData('text/plain', String(it.id));\n    } catch {}\n    ev.dataTransfer && (ev.dataTransfer.effectAllowed = 'move');\n  }\n  function allowDrop(ev) {\n    ev.preventDefault();\n  }\n  function handleDrop(ev, colKey) {\n    ev.preventDefault();\n    const txt = ev.dataTransfer?.getData('text/plain');\n    const id = Number(txt || draggingId);\n    draggingId = null;\n    if (!id) return;\n    // Compute best guess target state label to send to extension\n    const label = bucketLabels[colKey] || colKey;\n    dispatch('moveItem', { id, target: colKey, targetState: label });\n  }\n\n  // --- Kanban helpers ---\n  // We’ll group items by their actual state but map similar states to buckets for ordering\n  const bucketOrder = [\n    'new',\n    'approved',\n    'committed',\n    'active',\n    'inprogress',\n    'review',\n    'resolved',\n    'done',\n    'closed',\n    'removed',\n  ];\n  const bucketLabels = {\n    new: 'New',\n    approved: 'Approved',\n    committed: 'Committed',\n    active: 'Active',\n    inprogress: 'In Progress',\n    review: 'Review/Testing',\n    resolved: 'Resolved',\n    done: 'Done',\n    closed: 'Closed',\n    removed: 'Removed',\n  };\n\n  function normalizeState(raw) {\n    if (!raw) return 'todo';\n    const s = String(raw).toLowerCase().trim().replace(/\\s+/g, '-');\n    if (s === 'new' || s === 'to-do' || s === 'todo' || s === 'proposed') return 'new';\n    if (s === 'approved') return 'approved';\n    if (s === 'committed') return 'committed';\n    if (s === 'active') return 'active';\n    if (s === 'in-progress' || s === 'inprogress' || s === 'doing') return 'inprogress';\n    if (s === 'review' || s === 'code-review' || s === 'testing') return 'review';\n    if (s === 'resolved') return 'resolved';\n    if (s === 'done') return 'done';\n    if (s === 'closed' || s === 'completed') return 'closed';\n    if (s === 'removed') return 'removed';\n    return 'new';\n  }\n\n  function getWorkItemTypeIcon(type) {\n    const t = String(type || '').toLowerCase();\n    if (t.includes('bug')) return '\\uf41d'; // bug icon\n    if (t.includes('task')) return '\\uf0f7'; // task icon\n    if (t.includes('story') || t.includes('user story')) return '\\uf413'; // book icon\n    if (t.includes('feature')) return '\\uf0e7'; // star icon\n    if (t.includes('epic')) return '\\uf0f2'; // layers icon\n    return '\\uf0c5'; // default work item icon\n  }\n\n  function getPriorityClass(priority) {\n    const p = Number(priority) || 3;\n    if (p === 1) return 'priority-1';\n    if (p === 2) return 'priority-2';\n    if (p === 3) return 'priority-3';\n    if (p === 4) return 'priority-4';\n    return 'priority-3';\n  }\n\n  function extractDescription(it) {\n    const raw = it?.fields?.['System.Description'];\n    if (!raw || typeof raw !== 'string') return '';\n    // Strip HTML tags & collapse whitespace\n    const text = raw\n      .replace(/<style[\\s\\S]*?<\\/style>/gi, ' ')\n      .replace(/<script[\\s\\S]*?<\\/script>/gi, ' ')\n      .replace(/<[^>]+>/g, ' ')\n      .replace(/&nbsp;/gi, ' ')\n      .replace(/&amp;/gi, '&')\n      .replace(/&lt;/gi, '<')\n      .replace(/&gt;/gi, '>')\n      .replace(/&quot;/gi, '\"')\n      .replace(/&#39;/gi, \"'\")\n      .replace(/\\s+/g, ' ') // collapse\n      .trim();\n    const max = 120;\n    if (text.length <= max) return text;\n    return text.slice(0, max).trimEnd() + '…';\n  }\n\n  $: kanbanGroups = (() => {\n    // Derive buckets present from items\n    const present = new Set(bucketOrder);\n    const groups = Object.fromEntries(bucketOrder.map((k) => [k, []]));\n    (items || []).forEach((it) => {\n      const norm = normalizeState(it?.fields?.['System.State']);\n      if (!present.has(norm)) present.add(norm);\n      (groups[norm] || groups['new']).push(it);\n    });\n    return groups;\n  })();\n\n  $: columnDefs = bucketOrder\n    .filter(\n      (k) =>\n        (kanbanGroups[k] || []).length > 0 ||\n        ['new', 'active', 'inprogress', 'review', 'done'].includes(k)\n    )\n    .map((k) => ({ key: k, label: bucketLabels[k] || k }));\n</script>\n\n<div class=\"pane\">\n  <!-- Connection Tabs (only show if multiple connections) -->\n  {#if connections && connections.length > 1}\n    <div class=\"connection-tabs\" role=\"tablist\" aria-label=\"Project connections\">\n      {#each connections as connection}\n        <button\n          class=\"connection-tab\"\n          class:active={connection.id === activeConnectionId}\n          on:click={() => dispatch('connectionChanged', { connectionId: connection.id })}\n          role=\"tab\"\n          aria-selected={connection.id === activeConnectionId}\n          aria-label={`Switch to ${connection.label}`}\n          title={`${connection.organization}/${connection.project}`}\n        >\n          {connection.label}\n        </button>\n      {/each}\n    </div>\n  {/if}\n\n  {#if authReminders && authReminders.length}\n    <div class=\"auth-reminders\" role=\"region\" aria-label=\"Authentication reminders\">\n      {#each authReminders as reminder (reminder.connectionId)}\n        <div class=\"auth-reminder\" role=\"alert\">\n          <div class=\"auth-reminder-icon\" aria-hidden=\"true\">⚠️</div>\n          <div class=\"auth-reminder-body\">\n            <div class=\"auth-reminder-title\">\n              {reminder.message || `Microsoft Entra sign-in required for ${reminder.label}`}\n            </div>\n            <div class=\"auth-reminder-detail\">\n              {#if reminder.detail}\n                {reminder.detail}\n              {:else}\n                Sign in to refresh {reminder.label} and resume work item syncing.\n              {/if}\n            </div>\n          </div>\n          <div class=\"auth-reminder-actions\">\n            <button class=\"primary\" on:click={() => onReminderSignIn(reminder.connectionId)}>\n              Sign In\n            </button>\n            <button class=\"secondary\" on:click={() => onReminderDismiss(reminder.connectionId)}>\n              Dismiss\n            </button>\n          </div>\n        </div>\n      {/each}\n    </div>\n  {/if}\n\n  <!-- Query Selector Row -->\n  <div class=\"query-header\" role=\"toolbar\" aria-label=\"Query selection\">\n    <div class=\"query-selector-container\">\n      <label for=\"querySelect\" class=\"query-selector-label\">Query</label>\n      <select\n        id=\"querySelect\"\n        class=\"query-selector\"\n        bind:value={selectedQuery}\n        on:change={onQueryChange}\n        title=\"Select a query to filter work items\"\n        aria-label=\"Select query\"\n      >\n        {#each queryOptions as option}\n          <option value={option.value}>{option.label}</option>\n        {/each}\n      </select>\n      {#if queryDescription}\n        <div class=\"query-description\">{queryDescription}</div>\n      {/if}\n    </div>\n  </div>\n\n  <!-- Bulk Actions Toolbar (shown when items selected) -->\n  {#if selectedItems.size > 0}\n    <div class=\"bulk-actions-toolbar\" role=\"toolbar\" aria-label=\"Bulk actions\">\n      <span class=\"selected-count\">{selectedItems.size} selected</span>\n      <button class=\"bulk-btn\" on:click={() => dispatch('bulkAssign')} title=\"Bulk Assign\">\n        <span class=\"codicon codicon-person-add\"></span> Assign\n      </button>\n      <button class=\"bulk-btn\" on:click={() => dispatch('bulkMove')} title=\"Bulk Move\">\n        <span class=\"codicon codicon-arrow-right\"></span> Move\n      </button>\n      <button class=\"bulk-btn\" on:click={() => dispatch('bulkAddTags')} title=\"Bulk Add Tags\">\n        <span class=\"codicon codicon-tag\"></span> Tags\n      </button>\n      <button class=\"bulk-btn danger\" on:click={() => dispatch('bulkDelete')} title=\"Bulk Delete\">\n        <span class=\"codicon codicon-trash\"></span> Delete\n      </button>\n      <button class=\"bulk-btn secondary\" on:click={clearSelection} title=\"Clear Selection (Esc)\">\n        <span class=\"codicon codicon-close\"></span> Clear\n      </button>\n    </div>\n  {/if}\n\n  <!-- Main Controls Row -->\n  <div class=\"pane-header\" role=\"toolbar\" aria-label=\"Work Items actions\">\n    <span style=\"font-weight:600;\">Work Items</span>\n    {#if subtitle}\n      <span class=\"muted\">({subtitle})</span>\n    {/if}\n    {#if loading}\n      <span class=\"spinner\" role=\"status\" aria-label=\"Loading\" title=\"Loading\"></span>\n    {/if}\n    <span class=\"count\">{workItemCount}</span>\n    {#if timerActive}\n      <span class=\"muted\"\n        >• {timerRunning ? 'Running' : 'Paused'}\n        {#if timerElapsedLabel}({timerElapsedLabel}){/if}</span\n      >\n      {#if activeId}\n        <button\n          on:click={onOpenActive}\n          title={activeTitle || 'Open active work item'}\n          aria-label={`Open active work item #${activeId}`}>#{activeId}</button\n        >\n      {/if}\n    {/if}\n    <span class=\"actions\" style=\"margin-left:auto;\">\n      <span class=\"filters\" aria-label=\"Filters and sort\">\n        <input\n          placeholder=\"Filter...\"\n          value={filterText}\n          on:input={onFilterInput}\n          aria-label=\"Filter work items\"\n        />\n        <select\n          on:change={onTypeFilterChange}\n          bind:value={typeFilter}\n          aria-label=\"Filter by work item type\"\n        >\n          <option value=\"\">All types</option>\n          {#if availableTypes && availableTypes.length}\n            {#each availableTypes as typeName}\n              <option value={typeName}>{typeName}</option>\n            {/each}\n          {/if}\n        </select>\n        <select\n          on:change={onStateFilterChange}\n          bind:value={stateFilter}\n          aria-label=\"Filter by state\"\n        >\n          <option value=\"all\">All</option>\n          {#if availableStates && availableStates.length}\n            {#each availableStates as s}\n              <option value={s}>{bucketLabels[s] || s}</option>\n            {/each}\n          {:else}\n            {#each columnDefs as c}\n              <option value={c.key}>{c.label}</option>\n            {/each}\n          {/if}\n        </select>\n        <select on:change={onSortChange} bind:value={sortKey} aria-label=\"Sort items\">\n          <option value=\"updated-desc\">Updated ↓</option>\n          <option value=\"id-desc\">ID ↓</option>\n          <option value=\"id-asc\">ID ↑</option>\n          <option value=\"title-asc\">Title A→Z</option>\n        </select>\n      </span>\n    </span>\n  </div>\n\n  <div\n    class=\"pane-body\"\n    on:keydown={handleKeydown}\n    tabindex=\"0\"\n    role=\"listbox\"\n    aria-label=\"Work items list\"\n  >\n    {#if errorMsg}\n      <div class=\"error-banner\" role=\"alert\">\n        <div style=\"font-weight: 600; margin-bottom: 4px;\">⚠️ Error Loading Work Items</div>\n        <div>{errorMsg}</div>\n      </div>\n    {/if}\n    {#if initializing}\n      <div class=\"loading\">\n        <span class=\"spinner\" role=\"status\" aria-label=\"Initializing\"></span> Initializing extension…\n      </div>\n    {:else if loading}\n      <div class=\"loading\">\n        <span class=\"spinner\" role=\"status\" aria-label=\"Loading\"></span> Loading work items…\n      </div>\n    {:else if kanbanView}\n      <div class=\"kanban-board\" aria-label=\"Kanban board\">\n        {#each columnDefs as col}\n          <div\n            class=\"kanban-column state-{col.key}\"\n            on:dragover={allowDrop}\n            on:drop={(e) => handleDrop(e, col.key)}\n            role=\"listbox\"\n            tabindex=\"0\"\n            aria-label={`${col.label} column - drop items here`}\n          >\n            <div class=\"kanban-column-header\">\n              <h3>{col.label}</h3>\n              <span class=\"item-count\">{kanbanGroups[col.key]?.length || 0}</span>\n            </div>\n            <div class=\"kanban-column-content\">\n              {#if kanbanGroups[col.key]?.length}\n                {#each kanbanGroups[col.key] as it}\n                  <div\n                    class=\"work-item-card kanban-card state-{normalizeState(\n                      it.fields?.['System.State']\n                    )} {timerActive && activeId === Number(it.id)\n                      ? 'has-active-timer'\n                      : ''} {selectedItems.has(Number(it.id)) ? 'selected' : ''}\"\n                    tabindex=\"0\"\n                    draggable=\"true\"\n                    on:dragstart={(e) => handleDragStart(e, it)}\n                    on:keydown={(e) => {\n                      if (\n                        kanbanView &&\n                        (e.ctrlKey || e.metaKey) &&\n                        (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n                      ) {\n                        e.preventDefault();\n                        const currentKey = normalizeState(it.fields?.['System.State']);\n                        const idx = columnDefs.findIndex((c) => c.key === currentKey);\n                        if (idx !== -1) {\n                          const nextIdx = e.key === 'ArrowLeft' ? idx - 1 : idx + 1;\n                          const target = columnDefs[nextIdx];\n                          if (target) {\n                            const label = target.label || target.key;\n                            dispatch('moveItem', {\n                              id: it.id,\n                              target: target.key,\n                              targetState: label,\n                            });\n                          }\n                        }\n                      }\n                    }}\n                    role=\"button\"\n                    aria-label={`Work item #${it.id}: ${it.fields?.['System.Title']} - use action buttons to interact`}\n                  >\n                    <div class=\"work-item-header\">\n                      <input\n                        type=\"checkbox\"\n                        class=\"work-item-checkbox\"\n                        checked={selectedItems.has(Number(it.id))}\n                        on:click|stopPropagation={() => toggleItemSelection(Number(it.id))}\n                        aria-label=\"Select work item #{it.id}\"\n                      />\n                      <span class=\"work-item-type-icon\"\n                        >{getWorkItemTypeIcon(it.fields?.['System.WorkItemType'])}</span\n                      >\n                      <span class=\"work-item-id\">#{it.id}</span>\n                      {#if timerActive && activeId === Number(it.id)}\n                        <span class=\"timer-indicator\"\n                          ><span class=\"codicon codicon-clock\" aria-hidden=\"true\"></span>\n                          {timerElapsedLabel}</span\n                        >\n                      {/if}\n                      <span\n                        class=\"work-item-priority {getPriorityClass(\n                          it.fields?.['Microsoft.VSTS.Common.Priority']\n                        )}\"\n                      >\n                        {it.fields?.['Microsoft.VSTS.Common.Priority'] || '3'}\n                      </span>\n                    </div>\n\n                    <div class=\"work-item-content\">\n                      <div class=\"work-item-title\">\n                        {it.fields?.['System.Title'] || `Work Item #${it.id}`}\n                      </div>\n                      {#if extractDescription(it)}\n                        <div class=\"work-item-desc\" title={extractDescription(it)}>\n                          {extractDescription(it)}\n                        </div>\n                      {/if}\n\n                      <!-- Summary Composer for this work item -->\n                      {#if summaryWorkItemId === Number(it.id)}\n                        <div class=\"work-item-summary\">\n                          <div class=\"summary-header\">\n                            <div class=\"summary-context\">\n                              <span class=\"summary-target-label\">Comment</span>\n                              <span class=\"summary-provider-badge\"\n                                >{summaryProvider === 'openai' ? 'OpenAI' : 'Copilot'}</span\n                              >\n                              {#if timerActive && activeId === Number(it.id)}\n                                <span class=\"summary-target-timer\"\n                                  >{timerRunning ? 'Running' : 'Paused'}\n                                  {#if timerElapsedLabel}\n                                    ({timerElapsedLabel})\n                                  {/if}</span\n                                >\n                              {/if}\n                            </div>\n                            <div class=\"summary-header-actions\">\n                              {#if summaryBusy}\n                                <span\n                                  class=\"spinner inline\"\n                                  role=\"status\"\n                                  aria-label=\"Generating summary\"\n                                ></span>\n                              {/if}\n                              <button\n                                class=\"action-btn cancel compact\"\n                                on:click|preventDefault={onCancelSummary}\n                                title=\"Cancel\"\n                                aria-label=\"Cancel\"\n                              >\n                                <span class=\"codicon codicon-close\" aria-hidden=\"true\"></span>\n                              </button>\n                            </div>\n                          </div>\n                          <textarea\n                            class=\"summary-textarea\"\n                            placeholder=\"Draft a concise update for this work item…\"\n                            value={summaryDraft}\n                            on:input={onSummaryInput}\n                            on:blur={onSummaryBlur}\n                            rows=\"3\"\n                            disabled={summaryAreaDisabled}\n                          ></textarea>\n                          <div class=\"summary-actions\">\n                            <div class=\"summary-buttons\">\n                              <button\n                                class=\"action-btn summary-generate\"\n                                on:click|preventDefault={onGenerateSummary}\n                                title={summaryButtonLabel}\n                                aria-label={summaryButtonLabel}\n                                disabled={summaryGenerateDisabled}\n                              >\n                                <span class=\"codicon codicon-rocket\" aria-hidden=\"true\"></span>\n                                {summaryButtonLabel}\n                              </button>\n                              {#if timerActive && activeId === Number(it.id)}\n                                <button\n                                  class=\"action-btn summary-apply\"\n                                  on:click|preventDefault={onStopAndApplySummary}\n                                  title=\"Stop timer and apply time entry with this summary\"\n                                  aria-label=\"Stop timer and apply time entry with this summary\"\n                                  disabled={summaryApplyDisabled}\n                                >\n                                  <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                                  Stop &amp; Apply\n                                </button>\n                              {:else}\n                                <button\n                                  class=\"action-btn summary-apply\"\n                                  on:click|preventDefault={() =>\n                                    dispatch('applySummary', { workItemId: it.id })}\n                                  title=\"Apply summary as comment\"\n                                  aria-label=\"Apply summary as comment\"\n                                  disabled={summaryBusy || !summaryDraft.trim()}\n                                >\n                                  <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                                  Apply\n                                </button>\n                              {/if}\n                            </div>\n                            <div class=\"summary-helper\">{summaryHelperText}</div>\n                          </div>\n                          {#if summaryStatus}\n                            <div class=\"summary-status\" aria-live=\"polite\">{summaryStatus}</div>\n                          {/if}\n                        </div>\n                      {/if}\n\n                      <div class=\"work-item-meta\">\n                        <span class=\"work-item-type\"\n                          >{it.fields?.['System.WorkItemType'] || 'Task'}</span\n                        >\n                        {#if it.fields?.['System.AssignedTo']}\n                          <span class=\"work-item-assignee\">\n                            <span class=\"codicon codicon-account\" aria-hidden=\"true\"></span>\n                            {it.fields['System.AssignedTo'].displayName ||\n                              it.fields['System.AssignedTo']}\n                          </span>\n                        {/if}\n                      </div>\n                    </div>\n\n                    <div class=\"work-item-actions\">\n                      {#if timerActive && activeId === Number(it.id)}\n                        <button\n                          class=\"action-btn stop compact\"\n                          on:click|stopPropagation={() => dispatch('stopTimer')}\n                          title=\"Stop timer\"\n                          aria-label={`Stop timer for #${it.id}`}\n                        >\n                          <span class=\"codicon codicon-debug-stop\" aria-hidden=\"true\"></span>\n                        </button>\n                      {:else}\n                        <button\n                          class=\"action-btn start compact\"\n                          on:click|stopPropagation={() => dispatch('startItem', { id: it.id })}\n                          title=\"Start timer\"\n                          aria-label={`Start timer for #${it.id}`}\n                          disabled={timerActive}\n                        >\n                          <span class=\"codicon codicon-play\" aria-hidden=\"true\"></span>\n                        </button>\n                      {/if}\n                      <button\n                        class=\"action-btn view compact\"\n                        on:click|stopPropagation={() => dispatch('openItem', { id: it.id })}\n                        title=\"View\"\n                        aria-label={`View work item #${it.id}`}\n                      >\n                        <span class=\"codicon codicon-eye\" aria-hidden=\"true\"></span>\n                      </button>\n                      <button\n                        class=\"action-btn edit compact\"\n                        on:click|stopPropagation={() => dispatch('editItem', { id: it.id })}\n                        title=\"Edit\"\n                        aria-label={`Edit work item #${it.id}`}\n                      >\n                        <span class=\"codicon codicon-edit\" aria-hidden=\"true\"></span>\n                      </button>\n                      <button\n                        class=\"action-btn comment compact\"\n                        on:click|stopPropagation={() => dispatch('commentItem', { id: it.id })}\n                        title=\"Comment\"\n                        aria-label={`Add comment to #${it.id}`}\n                      >\n                        <span class=\"codicon codicon-comment\" aria-hidden=\"true\"></span>\n                      </button>\n                    </div>\n                  </div>\n                {/each}\n              {:else}\n                <div class=\"empty\">No items</div>\n              {/if}\n            </div>\n          </div>\n        {/each}\n      </div>\n    {:else if items && items.length}\n      <div class=\"items\" aria-label=\"Work items\">\n        {#each items.slice(0, 50) as it, index}\n          <div\n            class=\"work-item-card {timerActive && activeId === Number(it.id)\n              ? 'has-active-timer'\n              : ''} {focusedIndex === index ? 'focused' : ''} {selectedItems.has(Number(it.id))\n              ? 'selected'\n              : ''}\"\n            tabindex=\"0\"\n            role=\"button\"\n            data-index={index}\n            aria-label={`Work item #${it.id}: ${it.fields?.['System.Title']} - use action buttons to interact`}\n            on:click={(e) => {\n              focusedIndex = index;\n              updateFocus();\n              // Ctrl/Cmd+Click for multi-select\n              if (e.ctrlKey || e.metaKey) {\n                e.stopPropagation();\n                toggleItemSelection(Number(it.id));\n              }\n            }}\n            on:keydown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ') {\n                e.preventDefault();\n                focusedIndex = index;\n                updateFocus();\n                if (e.key === 'Enter') {\n                  openFocusedItem();\n                } else if (e.key === ' ') {\n                  toggleSelection();\n                }\n              }\n            }}\n          >\n            <div class=\"work-item-header\">\n              <input\n                type=\"checkbox\"\n                class=\"work-item-checkbox\"\n                checked={selectedItems.has(Number(it.id))}\n                on:click|stopPropagation={() => toggleItemSelection(Number(it.id))}\n                aria-label=\"Select work item #{it.id}\"\n              />\n              <span class=\"work-item-type-icon\"\n                >{getWorkItemTypeIcon(it.fields?.['System.WorkItemType'])}</span\n              >\n              <span class=\"work-item-id\">#{it.id}</span>\n              {#if timerActive && activeId === Number(it.id)}\n                <span class=\"timer-indicator\"\n                  ><span class=\"codicon codicon-clock\" aria-hidden=\"true\"></span>\n                  {timerElapsedLabel}</span\n                >\n              {/if}\n              <span\n                class=\"work-item-priority {getPriorityClass(\n                  it.fields?.['Microsoft.VSTS.Common.Priority']\n                )}\"\n              >\n                {it.fields?.['Microsoft.VSTS.Common.Priority'] || '3'}\n              </span>\n            </div>\n\n            <div class=\"work-item-content\">\n              <div class=\"work-item-title\">\n                {it.fields?.['System.Title'] || `Work Item #${it.id}`}\n              </div>\n              {#if extractDescription(it)}\n                <div class=\"work-item-desc\" title={extractDescription(it)}>\n                  {extractDescription(it)}\n                </div>\n              {/if}\n\n              <!-- Summary Composer for this work item -->\n              {#if summaryWorkItemId === Number(it.id)}\n                <div class=\"work-item-summary\">\n                  <div class=\"summary-header\">\n                    <div class=\"summary-context\">\n                      <span class=\"summary-target-label\">Comment</span>\n                      <span class=\"summary-provider-badge\"\n                        >{summaryProvider === 'openai' ? 'OpenAI' : 'Copilot'}</span\n                      >\n                      {#if timerActive && activeId === Number(it.id)}\n                        <span class=\"summary-target-timer\"\n                          >{timerRunning ? 'Running' : 'Paused'}\n                          {#if timerElapsedLabel}\n                            ({timerElapsedLabel})\n                          {/if}</span\n                        >\n                      {/if}\n                    </div>\n                    <div class=\"summary-header-actions\">\n                      {#if summaryBusy}\n                        <span class=\"spinner inline\" role=\"status\" aria-label=\"Generating summary\"\n                        ></span>\n                      {/if}\n                      <button\n                        class=\"action-btn cancel compact\"\n                        on:click|preventDefault={onCancelSummary}\n                        title=\"Cancel\"\n                        aria-label=\"Cancel\"\n                      >\n                        <span class=\"codicon codicon-close\" aria-hidden=\"true\"></span>\n                      </button>\n                    </div>\n                  </div>\n                  <textarea\n                    class=\"summary-textarea\"\n                    placeholder=\"Draft a concise update for this work item…\"\n                    value={summaryDraft}\n                    on:input={onSummaryInput}\n                    on:blur={onSummaryBlur}\n                    rows=\"3\"\n                    disabled={summaryAreaDisabled}\n                  ></textarea>\n                  <div class=\"summary-actions\">\n                    <div class=\"summary-buttons\">\n                      <button\n                        class=\"action-btn summary-generate\"\n                        on:click|preventDefault={onGenerateSummary}\n                        title={summaryButtonLabel}\n                        aria-label={summaryButtonLabel}\n                        disabled={summaryGenerateDisabled}\n                      >\n                        <span class=\"codicon codicon-rocket\" aria-hidden=\"true\"></span>\n                        {summaryButtonLabel}\n                      </button>\n                      {#if timerActive && activeId === Number(it.id)}\n                        <button\n                          class=\"action-btn summary-apply\"\n                          on:click|preventDefault={onStopAndApplySummary}\n                          title=\"Stop timer and apply time entry with this summary\"\n                          aria-label=\"Stop timer and apply time entry with this summary\"\n                          disabled={summaryApplyDisabled}\n                        >\n                          <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                          Stop &amp; Apply\n                        </button>\n                      {:else}\n                        <button\n                          class=\"action-btn summary-apply\"\n                          on:click|preventDefault={() =>\n                            dispatch('applySummary', { workItemId: it.id })}\n                          title=\"Apply summary as comment\"\n                          aria-label=\"Apply summary as comment\"\n                          disabled={summaryBusy || !summaryDraft.trim()}\n                        >\n                          <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                          Apply\n                        </button>\n                      {/if}\n                    </div>\n                    <div class=\"summary-helper\">{summaryHelperText}</div>\n                  </div>\n                  {#if summaryStatus}\n                    <div class=\"summary-status\" aria-live=\"polite\">{summaryStatus}</div>\n                  {/if}\n                </div>\n              {/if}\n\n              <div class=\"work-item-meta\">\n                <span class=\"work-item-type\">{it.fields?.['System.WorkItemType'] || 'Task'}</span>\n                <span class=\"work-item-state state-{normalizeState(it.fields?.['System.State'])}\"\n                  >{it.fields?.['System.State'] || 'New'}</span\n                >\n                <span class=\"work-item-assignee\">\n                  {#if it.fields?.['System.AssignedTo']}\n                    <span class=\"codicon codicon-account\" aria-hidden=\"true\"></span>\n                    {it.fields['System.AssignedTo'].displayName || it.fields['System.AssignedTo']}\n                  {:else}\n                    <span class=\"codicon codicon-account\" aria-hidden=\"true\"></span> Unassigned\n                  {/if}\n                </span>\n              </div>\n            </div>\n\n            <div class=\"work-item-actions\">\n              {#if timerActive && activeId === Number(it.id)}\n                <button\n                  class=\"action-btn stop\"\n                  on:click|stopPropagation={() => dispatch('stopTimer')}\n                  title=\"Stop timer\"\n                  aria-label={`Stop timer for #${it.id}`}\n                >\n                  <span class=\"codicon codicon-debug-stop\" aria-hidden=\"true\"></span> Stop\n                </button>\n              {:else}\n                <button\n                  class=\"action-btn start\"\n                  on:click|stopPropagation={() => dispatch('startItem', { id: it.id })}\n                  title=\"Start timer\"\n                  aria-label={`Start timer for #${it.id}`}\n                  disabled={timerActive}\n                >\n                  <span class=\"codicon codicon-play\" aria-hidden=\"true\"></span> Start\n                </button>\n              {/if}\n              <button\n                class=\"action-btn view\"\n                on:click|stopPropagation={() => dispatch('openItem', { id: it.id })}\n                title=\"View in browser\"\n                aria-label={`View work item #${it.id}`}\n              >\n                <span class=\"codicon codicon-eye\" aria-hidden=\"true\"></span> View\n              </button>\n              <button\n                class=\"action-btn edit\"\n                on:click|stopPropagation={() => dispatch('editItem', { id: it.id })}\n                title=\"Edit work item\"\n                aria-label={`Edit work item #${it.id}`}\n              >\n                <span class=\"codicon codicon-edit\" aria-hidden=\"true\"></span> Edit\n              </button>\n              <button\n                class=\"action-btn comment\"\n                on:click|stopPropagation={() => dispatch('commentItem', { id: it.id })}\n                title=\"Add comment\"\n                aria-label={`Add comment to #${it.id}`}\n              >\n                <span class=\"codicon codicon-comment\" aria-hidden=\"true\"></span> Comment\n              </button>\n            </div>\n          </div>\n        {/each}\n      </div>\n    {:else}\n      <div class=\"empty\">No work items to display.</div>\n    {/if}\n  </div>\n  <Toasts ariaLabel=\"Work item notifications\" />\n</div>\n\n<style>\n  .pane {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    background: var(--vscode-editor-background);\n    color: var(--vscode-editor-foreground);\n    font-family: var(--vscode-font-family);\n  }\n\n  /* Connection Tabs */\n  .connection-tabs {\n    display: flex;\n    background: var(--vscode-tab-inactiveBackground);\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    overflow-x: auto;\n    flex-shrink: 0;\n  }\n\n  .connection-tab {\n    padding: 8px 16px;\n    background: var(--vscode-tab-inactiveBackground);\n    color: var(--vscode-tab-inactiveForeground);\n    border: none;\n    border-right: 1px solid var(--vscode-editorWidget-border);\n    cursor: pointer;\n    font-size: 13px;\n    font-family: var(--vscode-font-family);\n    white-space: nowrap;\n    transition: all 0.2s ease;\n  }\n\n  .connection-tab:hover {\n    background: var(--vscode-tab-hoverBackground);\n    color: var(--vscode-tab-hoverForeground);\n  }\n\n  .connection-tab.active {\n    background: var(--vscode-tab-activeBackground);\n    color: var(--vscode-tab-activeForeground);\n    border-bottom: 2px solid var(--vscode-tab-activeBorder, var(--ado-blue));\n  }\n\n  .connection-tab:focus {\n    outline: 1px solid var(--vscode-focusBorder);\n    outline-offset: -1px;\n  }\n\n  .query-header {\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    background: var(--vscode-editorGroupHeader-tabsBackground);\n    flex-shrink: 0;\n  }\n\n  .pane-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 12px;\n    padding: 8px 12px;\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    background: var(--vscode-editorGroupHeader-tabsBackground);\n    color: var(--vscode-editor-foreground);\n    flex-shrink: 0;\n  }\n\n  .muted {\n    opacity: 0.7;\n  }\n  .count {\n    margin-left: auto;\n    opacity: 0.85;\n  }\n  .actions {\n    display: inline-flex;\n    gap: 6px;\n  }\n  .filters {\n    display: inline-flex;\n    gap: 6px;\n    align-items: center;\n    margin-left: 8px;\n    flex-wrap: wrap;\n  }\n\n  /* Query Selector Styles */\n  .query-selector-container {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    min-width: 300px;\n    max-width: 500px;\n    width: 100%;\n  }\n\n  .query-selector-label {\n    font-size: 12px;\n    font-weight: 600;\n    color: var(--vscode-foreground);\n    margin-bottom: 2px;\n  }\n\n  .query-selector {\n    font-size: 13px;\n    padding: 6px 8px;\n    border: 1px solid var(--vscode-input-border);\n    background-color: var(--vscode-input-background);\n    color: var(--vscode-input-foreground);\n    border-radius: 3px;\n    transition: border-color 0.2s ease;\n  }\n\n  .query-selector:focus {\n    outline: none;\n    border-color: var(--vscode-focusBorder);\n    box-shadow: 0 0 0 1px var(--vscode-focusBorder);\n  }\n\n  .query-selector:hover {\n    border-color: var(--vscode-inputOption-hoverBorder);\n  }\n\n  .query-description {\n    font-size: 11px;\n    color: var(--vscode-descriptionForeground);\n    line-height: 1.3;\n    margin-top: 2px;\n    min-height: 14px;\n    opacity: 0.8;\n  }\n  .filters input,\n  .filters select {\n    font-size: 11px;\n    padding: 4px 8px;\n    background: var(--vscode-input-background);\n    color: var(--vscode-input-foreground);\n    border: 1px solid var(--vscode-input-border);\n    border-radius: 3px;\n  }\n\n  .spinner {\n    width: 12px;\n    height: 12px;\n    border: 2px solid var(--vscode-editorWidget-border);\n    border-top-color: var(--ado-blue);\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    display: inline-block;\n    margin-left: 6px;\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  button {\n    font-size: 11px;\n    padding: 4px 8px;\n    color: var(--vscode-button-foreground);\n    background: var(--ado-blue);\n    border: 1px solid transparent;\n    border-radius: 3px;\n    cursor: pointer;\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n    font-family: var(--vscode-font-family);\n  }\n\n  button:hover {\n    background: var(--ado-blue-light);\n  }\n  button[disabled] {\n    opacity: 0.5;\n    cursor: default;\n    filter: grayscale(0.2);\n  }\n\n  .pane-body {\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .work-item-summary {\n    margin: 8px 0;\n    padding: 8px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 4px;\n    background: var(--vscode-editorWidget-background);\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .summary-panel {\n    margin: 12px;\n    padding: 12px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    background: var(--vscode-editorWidget-background);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  .summary-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 12px;\n  }\n\n  .summary-header-actions {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n  .summary-context {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 12px;\n    flex-wrap: wrap;\n  }\n  .summary-target-label {\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.04em;\n    font-size: 10px;\n    color: var(--vscode-descriptionForeground, #888);\n  }\n  .summary-target-value {\n    font-weight: 600;\n    color: var(--vscode-editor-foreground);\n    background: rgba(0, 120, 212, 0.12);\n    padding: 2px 6px;\n    border-radius: 12px;\n  }\n  .summary-provider-badge {\n    font-size: 10px;\n    text-transform: uppercase;\n    padding: 2px 6px;\n    border-radius: 10px;\n    background: rgba(92, 45, 145, 0.2);\n    color: var(--ado-purple);\n    font-weight: 600;\n  }\n  .summary-target-timer {\n    font-size: 10px;\n    color: var(--ado-orange);\n    background: rgba(255, 140, 0, 0.18);\n    padding: 2px 6px;\n    border-radius: 10px;\n    border: 1px solid rgba(255, 140, 0, 0.35);\n  }\n  .summary-textarea {\n    width: 100%;\n    min-height: 120px;\n    resize: vertical;\n    padding: 8px;\n    border: 1px solid var(--vscode-input-border);\n    border-radius: 4px;\n    background: var(--vscode-input-background);\n    color: var(--vscode-input-foreground);\n    font-size: 12px;\n    font-family: var(--vscode-font-family);\n  }\n  .summary-textarea:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  .summary-actions {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    gap: 12px;\n    flex-wrap: wrap;\n  }\n  .summary-buttons {\n    display: inline-flex;\n    gap: 8px;\n  }\n  .summary-helper {\n    font-size: 11px;\n    opacity: 0.75;\n    max-width: 320px;\n  }\n  .summary-generate {\n    background: var(--ado-blue);\n    color: #fff;\n    border-color: var(--ado-blue);\n  }\n  .summary-generate:hover {\n    background: var(--ado-blue-light);\n  }\n  .summary-apply {\n    background: var(--ado-green);\n    color: #fff;\n    border-color: var(--ado-green);\n  }\n  .summary-apply:hover {\n    background: rgba(16, 124, 16, 0.85);\n  }\n  .summary-status,\n  .summary-status-inline {\n    font-size: 11px;\n    background: rgba(0, 120, 212, 0.12);\n    color: var(--ado-blue);\n    border-radius: 4px;\n    padding: 6px 8px;\n    margin-top: 2px;\n  }\n  .summary-status-inline {\n    margin: 8px 12px 0 12px;\n  }\n  .spinner.inline {\n    width: 10px;\n    height: 10px;\n    border-width: 2px;\n  }\n\n  .empty {\n    padding: 20px;\n    font-size: 14px;\n    opacity: 0.7;\n    text-align: center;\n  }\n\n  .loading {\n    padding: 20px;\n    font-size: 14px;\n    opacity: 0.9;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    justify-content: center;\n  }\n\n  .error-banner {\n    margin: 8px;\n    padding: 12px;\n    border: 2px solid var(--ado-red);\n    border-radius: 4px;\n    background: rgba(209, 52, 56, 0.15);\n    color: var(--ado-red);\n    font-weight: 500;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    max-width: 100%;\n    border-radius: 4px;\n    font-size: 12px;\n  }\n\n  .auth-reminders {\n    margin: 12px 0;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .auth-reminder {\n    display: flex;\n    gap: 12px;\n    align-items: flex-start;\n    padding: 12px 14px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    background: var(--vscode-editorWidget-background);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.35);\n  }\n\n  .auth-reminder-icon {\n    font-size: 20px;\n    line-height: 1;\n    margin-top: 2px;\n  }\n\n  .auth-reminder-body {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n\n  .auth-reminder-title {\n    font-weight: 600;\n    font-size: 13px;\n  }\n\n  .auth-reminder-detail {\n    font-size: 12px;\n    line-height: 1.4;\n    color: var(--vscode-editor-foreground);\n    opacity: 0.9;\n    white-space: pre-wrap;\n  }\n\n  .auth-reminder-actions {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n  }\n\n  .auth-reminder-actions .primary,\n  .auth-reminder-actions .secondary {\n    border: none;\n    border-radius: 4px;\n    padding: 6px 12px;\n    font-size: 12px;\n    cursor: pointer;\n    transition: background 120ms ease;\n  }\n\n  .auth-reminder-actions .primary {\n    background: var(--vscode-button-background);\n    color: var(--vscode-button-foreground);\n  }\n\n  .auth-reminder-actions .primary:hover {\n    background: var(--vscode-button-hoverBackground);\n  }\n\n  .auth-reminder-actions .secondary {\n    background: transparent;\n    color: var(--vscode-editor-foreground);\n    border: 1px solid var(--vscode-editorWidget-border);\n  }\n\n  .auth-reminder-actions .secondary:hover {\n    background: var(--vscode-toolbar-hoverBackground);\n  }\n\n  @media (min-width: 800px) {\n    .auth-reminder-actions {\n      flex-direction: row;\n      align-items: center;\n    }\n  }\n\n  /* Bulk Actions Toolbar */\n  .bulk-actions-toolbar {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 8px 12px;\n    background: var(--ado-blue-dark);\n    border-bottom: 2px solid var(--ado-blue);\n    animation: slideDown 0.2s ease-out;\n  }\n\n  @keyframes slideDown {\n    from {\n      opacity: 0;\n      transform: translateY(-10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  .selected-count {\n    font-weight: 600;\n    color: white;\n    margin-right: 8px;\n  }\n\n  .bulk-btn {\n    padding: 4px 12px;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    border-radius: 3px;\n    background: rgba(255, 255, 255, 0.1);\n    color: white;\n    font-size: 12px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    transition: all 0.2s;\n  }\n\n  .bulk-btn:hover {\n    background: rgba(255, 255, 255, 0.2);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n\n  .bulk-btn.danger {\n    background: rgba(209, 52, 56, 0.2);\n    border-color: var(--ado-red);\n  }\n\n  .bulk-btn.danger:hover {\n    background: rgba(209, 52, 56, 0.4);\n  }\n\n  .bulk-btn.secondary {\n    background: transparent;\n    border-color: rgba(255, 255, 255, 0.2);\n  }\n\n  .selected-badge {\n    background: var(--ado-orange);\n    color: white;\n    padding: 2px 8px;\n    border-radius: 10px;\n    font-size: 11px;\n    font-weight: 600;\n    margin-left: 8px;\n  }\n\n  /* Work Item Checkbox */\n  .work-item-checkbox {\n    width: 16px;\n    height: 16px;\n    margin-right: 8px;\n    cursor: pointer;\n    accent-color: var(--ado-blue);\n  }\n\n  .work-item-card.selected {\n    background: rgba(0, 120, 212, 0.1);\n    border-left: 3px solid var(--ado-blue);\n  }\n\n  .kanban-card.selected {\n    box-shadow: 0 0 0 2px var(--ado-blue);\n  }\n\n  /* Work Item Cards */\n  .items {\n    padding: 8px;\n    overflow-y: auto;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .work-item-card {\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 4px;\n    background: var(--vscode-editor-background);\n    cursor: pointer;\n    transition: all 0.2s ease;\n    position: relative;\n  }\n\n  .work-item-card:hover {\n    background: var(--vscode-list-hoverBackground);\n    border-color: var(--ado-blue);\n    box-shadow: 0 2px 8px rgba(0, 120, 212, 0.1);\n  }\n\n  .work-item-card.has-active-timer {\n    border-left: 3px solid var(--ado-orange);\n  }\n\n  .work-item-card.focused {\n    outline: 2px solid var(--vscode-focusBorder);\n    outline-offset: 2px;\n    background: var(--vscode-list-activeSelectionBackground);\n    border-color: var(--vscode-focusBorder);\n  }\n\n  .work-item-card.selected {\n    background: var(--vscode-list-selectionBackground);\n    border-color: var(--vscode-list-selectionBackground);\n  }\n\n  .work-item-card.focused.selected {\n    background: var(--vscode-list-activeSelectionBackground);\n    border-color: var(--vscode-focusBorder);\n  }\n\n  .work-item-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 8px;\n  }\n\n  .work-item-type-icon {\n    font-family: 'codicon';\n    font-size: 16px;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    flex-shrink: 0;\n    color: var(--ado-blue);\n  }\n\n  .work-item-id {\n    background: var(--vscode-badge-background);\n    color: var(--vscode-badge-foreground);\n    padding: 2px 6px;\n    border-radius: 10px;\n    font-size: 10px;\n    font-weight: 600;\n  }\n\n  .work-item-priority {\n    margin-left: auto;\n    font-size: 14px;\n    font-weight: 600;\n  }\n\n  .priority-1 {\n    color: var(--ado-red);\n  }\n  .priority-2 {\n    color: var(--ado-orange);\n  }\n  .priority-3 {\n    color: var(--ado-blue);\n  }\n  .priority-4 {\n    color: var(--ado-gray);\n  }\n\n  .work-item-content {\n    flex: 1;\n    margin-bottom: 8px;\n  }\n\n  .work-item-title {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.3;\n    margin-bottom: 6px;\n    color: var(--vscode-editor-foreground);\n  }\n\n  .work-item-desc {\n    font-size: 11px;\n    line-height: 1.3;\n    margin-bottom: 6px;\n    opacity: 0.75;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-break: break-word;\n  }\n\n  .work-item-meta {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    align-items: center;\n    font-size: 11px;\n    margin-bottom: 8px;\n  }\n\n  .work-item-type {\n    padding: 2px 6px;\n    background: var(--vscode-badge-background);\n    color: var(--vscode-badge-foreground);\n    border-radius: 10px;\n    font-size: 10px;\n    font-weight: 500;\n  }\n\n  .work-item-state {\n    padding: 2px 6px;\n    border-radius: 10px;\n    font-size: 10px;\n    font-weight: 500;\n    text-transform: uppercase;\n  }\n\n  .state-todo,\n  .state-new {\n    background: rgba(0, 120, 212, 0.2);\n    color: var(--state-new);\n  }\n  .state-active,\n  .state-inprogress,\n  .state-doing {\n    background: rgba(255, 140, 0, 0.2);\n    color: var(--state-active);\n  }\n  .state-resolved,\n  .state-done,\n  .state-closed {\n    background: rgba(16, 124, 16, 0.2);\n    color: var(--state-resolved);\n  }\n  .state-removed {\n    background: rgba(209, 52, 56, 0.2);\n    color: var(--state-removed);\n  }\n  .state-review {\n    background: rgba(92, 45, 145, 0.2);\n    color: var(--ado-purple);\n  }\n\n  .timer-indicator {\n    background: rgba(255, 140, 0, 0.2);\n    color: var(--ado-orange);\n    padding: 2px 6px;\n    border-radius: 4px;\n    font-size: 10px;\n    font-weight: 600;\n    border: 1px solid rgba(255, 140, 0, 0.3);\n    animation: pulse 2s infinite;\n  }\n\n  @keyframes pulse {\n    0%,\n    100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.7;\n    }\n  }\n\n  .work-item-actions {\n    display: flex;\n    gap: 4px;\n    align-items: center;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n\n  .work-item-card:hover .work-item-actions {\n    opacity: 1;\n  }\n\n  .action-btn {\n    padding: 6px 8px;\n    background: var(--vscode-button-secondaryBackground);\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 3px;\n    cursor: pointer;\n    font-size: 11px;\n    transition: all 0.1s ease;\n    color: var(--vscode-button-secondaryForeground);\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n    font-family: 'codicon';\n  }\n\n  .action-btn:hover {\n    background: var(--vscode-button-secondaryHoverBackground);\n    border-color: var(--ado-blue);\n  }\n\n  .action-btn.start {\n    background: var(--ado-green);\n    color: white;\n    border-color: var(--ado-green);\n  }\n  .action-btn.start:hover {\n    background: rgba(16, 124, 16, 0.8);\n  }\n\n  .action-btn.stop {\n    background: var(--ado-red);\n    color: white;\n    border-color: var(--ado-red);\n  }\n  .action-btn.stop:hover {\n    background: rgba(209, 52, 56, 0.8);\n  }\n\n  .action-btn.view {\n    background: var(--ado-blue);\n    color: white;\n    border-color: var(--ado-blue);\n  }\n  .action-btn.view:hover {\n    background: var(--ado-blue-light);\n  }\n\n  .action-btn.edit {\n    background: var(--ado-purple);\n    color: white;\n    border-color: var(--ado-purple);\n  }\n  .action-btn.edit:hover {\n    background: rgba(92, 45, 145, 0.8);\n  }\n\n  .action-btn.comment {\n    background: var(--ado-gray);\n    color: white;\n    border-color: var(--ado-gray);\n  }\n  .action-btn.comment:hover {\n    background: var(--ado-gray-light);\n  }\n\n  .action-btn.cancel {\n    background: #dc3545;\n    color: white;\n    border-color: #dc3545;\n  }\n\n  .action-btn.cancel:hover {\n    background: #c82333;\n    border-color: #bd2130;\n  }\n\n  /* Kanban styles */\n  .kanban-board {\n    display: flex;\n    gap: 12px;\n    padding: 8px;\n    overflow-x: auto;\n    flex: 1;\n  }\n\n  .kanban-column {\n    min-width: 280px;\n    max-width: 320px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    background: var(--vscode-editorWidget-background);\n    display: flex;\n    flex-direction: column;\n  }\n\n  .kanban-column-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 12px;\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    background: var(--vscode-editorGroupHeader-tabsBackground);\n    border-top: 3px solid transparent;\n  }\n\n  .kanban-column-header h3 {\n    font-size: 13px;\n    font-weight: 600;\n    margin: 0;\n  }\n\n  .item-count {\n    background: var(--vscode-badge-background);\n    color: var(--vscode-badge-foreground);\n    padding: 2px 6px;\n    border-radius: 10px;\n    font-size: 11px;\n    font-weight: 600;\n  }\n\n  .kanban-column-content {\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    overflow-y: auto;\n    flex: 1;\n  }\n\n  .kanban-card {\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    padding: 10px;\n    background: var(--vscode-editor-background);\n    border-left: 3px solid transparent;\n    cursor: pointer;\n    transition: all 0.2s ease;\n  }\n\n  .kanban-card:hover {\n    background: var(--vscode-list-hoverBackground);\n    border-color: var(--ado-blue);\n  }\n\n  .kanban-card .title {\n    font-weight: 600;\n    margin-bottom: 4px;\n    color: var(--vscode-editor-foreground);\n    font-size: 13px;\n  }\n\n  .kanban-card .meta {\n    font-size: 11px;\n    opacity: 0.8;\n    margin-bottom: 6px;\n  }\n\n  .kanban-card .actions {\n    display: inline-flex;\n    gap: 4px;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n\n  .kanban-card:hover .actions {\n    opacity: 1;\n  }\n\n  /* Column header accents by state */\n  .kanban-column.state-todo .kanban-column-header {\n    border-top-color: var(--state-new);\n  }\n  .kanban-column.state-active .kanban-column-header {\n    border-top-color: var(--state-active);\n  }\n  .kanban-column.state-inprogress .kanban-column-header {\n    border-top-color: var(--state-active);\n  }\n  .kanban-column.state-review .kanban-column-header {\n    border-top-color: var(--ado-purple);\n  }\n  .kanban-column.state-resolved .kanban-column-header {\n    border-top-color: var(--state-resolved);\n  }\n  .kanban-column.state-done .kanban-column-header {\n    border-top-color: var(--state-resolved);\n  }\n  .kanban-column.state-removed .kanban-column-header {\n    border-top-color: var(--state-removed);\n  }\n\n  /* Card accents by state */\n  .kanban-card.state-todo {\n    border-left-color: var(--state-new);\n  }\n  .kanban-card.state-active {\n    border-left-color: var(--state-active);\n  }\n  .kanban-card.state-inprogress {\n    border-left-color: var(--state-active);\n  }\n  .kanban-card.state-review {\n    border-left-color: var(--ado-purple);\n  }\n  .kanban-card.state-resolved {\n    border-left-color: var(--state-resolved);\n  }\n  .kanban-card.state-done {\n    border-left-color: var(--state-resolved);\n  }\n  .kanban-card.state-removed {\n    border-left-color: var(--state-removed);\n  }\n\n  /* Compact action buttons for kanban view */\n  .action-btn.compact {\n    min-width: 28px;\n    padding: 4px 6px;\n    font-size: 12px;\n  }\n\n  .kanban-card .work-item-actions {\n    justify-content: center;\n    gap: 4px;\n  }\n\n  .kanban-card .work-item-header {\n    margin-bottom: 6px;\n  }\n\n  .kanban-card .work-item-content {\n    margin-bottom: 8px;\n  }\n\n  /* Timer indicator adjustments for kanban */\n  .kanban-card .timer-indicator {\n    font-size: 10px;\n    margin-left: auto;\n  }\n</style>\n", "/*\n  Svelte webview entry:\n  - Bridges VS Code messaging\n  - Mounts App.svelte banner\n  - Acknowledges self-test\n  - Requests work items on boot\n*/\n// @ts-ignore - handled by esbuild svelte plugin\nimport App from './App.svelte';\nimport { addToast } from './toastStore.js';\n\ntype AuthMethod = 'pat' | 'entra';\n\ntype AuthReminder = {\n  connectionId: string;\n  label: string;\n  message: string;\n  detail?: string;\n  reason?: string;\n  authMethod?: AuthMethod;\n};\n\ndeclare global {\n  interface Window {\n    vscode?: any;\n    acquireVsCodeApi?: () => any;\n  }\n}\n\n// Acquire VS Code API\nconst vscode = (() => {\n  try {\n    return (window as any).vscode || acquireVsCodeApi();\n  } catch (e) {\n    console.error('[svelte-main] Failed to acquire VS Code API', e);\n    return null;\n  }\n})();\n\nfunction postMessage(msg: any) {\n  try {\n    if (vscode && typeof (vscode as any).postMessage === 'function') {\n      (vscode as any).postMessage(msg);\n      return;\n    }\n    if ((window as any).vscode && typeof (window as any).vscode.postMessage === 'function') {\n      (window as any).vscode.postMessage(msg);\n      return;\n    }\n  } catch (err) {\n    console.error('[svelte-main] postMessage error', err, msg);\n  }\n}\n\n// Mount Svelte app\nlet app: App | null = null as any;\nlet workItemCount = 0;\nlet lastWorkItems: any[] = [];\nlet timerActive = false;\nlet timerRunning = false;\nlet activeId: number = 0;\nlet activeTitle = '';\nlet elapsedSeconds: number = 0;\nlet timerElapsedLabel: string = '';\nlet itemsForView: any[] = [];\nlet kanbanView = false;\nlet loading = false; // Don't show loading until a query actually starts\nlet initializing = true; // True until first message from extension\nlet errorMsg: string = '';\nlet filterText = '';\nlet typeFilter = '';\nlet stateFilter: string = 'all';\nlet sortKey: string = 'updated-desc';\nlet normalizedQuery = '';\nlet selectedQuery = 'My Activity';\nlet queryDescription = '';\n// Selection tracking for bulk operations\nlet selectedWorkItemIds = new Set<number>();\n// Track optimistic moves so we can revert on failure\nconst pendingMoves = new Map<number, { prevState: string }>();\n// Available normalized states (for filter dropdown)\nlet stateOptions: string[] = [];\nlet typeOptions: string[] = [];\nconst typeOptionHints = new Set<string>();\nlet searchHaystackCache = new WeakMap<any, string>();\nlet summaryDraft = '';\nlet summaryStatus = '';\nlet summaryProvider: 'builtin' | 'openai' = 'builtin';\nlet summaryBusy = false;\nlet summaryWorkItemId: number | null = null;\nlet _summaryTargetTitle = '';\nlet summaryBusyTimer: ReturnType<typeof setTimeout> | undefined;\nlet summaryStatusTimer: ReturnType<typeof setTimeout> | undefined;\n\nconst authReminderMap = new Map<string, AuthReminder>();\nlet authReminders: AuthReminder[] = [];\n\n// Query options\nconst queryOptions = [\n  {\n    value: 'My Activity',\n    label: 'My Activity',\n    description: \"Work items I've created, assigned to, or recently changed\",\n  },\n  {\n    value: 'My Work Items',\n    label: 'My Work Items',\n    description: 'Work items currently assigned to me',\n  },\n  {\n    value: 'Assigned to me',\n    label: 'Assigned to me',\n    description: 'Work items currently assigned to me',\n  },\n  {\n    value: 'Current Sprint',\n    label: 'Current Sprint',\n    description: 'Work items in the current iteration',\n  },\n  { value: 'All Active', label: 'All Active', description: 'All active work items in the project' },\n  {\n    value: 'Recently Updated',\n    label: 'Recently Updated',\n    description: 'Work items updated in the last 14 days',\n  },\n  { value: 'Following', label: 'Following', description: \"Work items I'm following\" },\n  { value: 'Mentioned', label: 'Mentioned', description: \"Work items where I've been mentioned\" },\n];\n\n// Connections state\nlet connections: Array<{ id: string; label: string; organization: string; project: string }> = [];\nlet activeConnectionId: string | undefined;\n\n// Per-connection state storage\ntype ConnectionState = {\n  filterText: string;\n  typeFilter: string;\n  stateFilter: string;\n  sortKey: string;\n  selectedQuery: string;\n  kanbanView: boolean;\n};\n\nconst connectionStateMap = new Map<string, ConnectionState>();\n\nfunction getDefaultConnectionState(): ConnectionState {\n  return {\n    filterText: '',\n    typeFilter: '',\n    stateFilter: 'all',\n    sortKey: 'updated-desc',\n    selectedQuery: 'My Activity',\n    kanbanView: false,\n  };\n}\n\nfunction saveConnectionState(connectionId: string) {\n  if (!connectionId) return;\n  connectionStateMap.set(connectionId, {\n    filterText,\n    typeFilter,\n    stateFilter,\n    sortKey,\n    selectedQuery,\n    kanbanView,\n  });\n  // Persist to localStorage\n  try {\n    localStorage.setItem(\n      `azuredevops.connectionState.${connectionId}`,\n      JSON.stringify(connectionStateMap.get(connectionId))\n    );\n  } catch (e) {\n    console.warn('[svelte-main] Failed to persist connection state', e);\n  }\n}\n\nfunction loadConnectionState(connectionId: string) {\n  if (!connectionId) return getDefaultConnectionState();\n\n  // Check in-memory cache first\n  let state = connectionStateMap.get(connectionId);\n  if (state) return state;\n\n  // Try to load from localStorage\n  try {\n    const stored = localStorage.getItem(`azuredevops.connectionState.${connectionId}`);\n    if (stored) {\n      state = JSON.parse(stored) as ConnectionState;\n      connectionStateMap.set(connectionId, state);\n      return state;\n    }\n  } catch (e) {\n    console.warn('[svelte-main] Failed to load connection state from localStorage', e);\n  }\n\n  // Return defaults\n  const defaultState = getDefaultConnectionState();\n  connectionStateMap.set(connectionId, defaultState);\n  return defaultState;\n}\n\nfunction applyConnectionState(connectionId: string) {\n  const state = loadConnectionState(connectionId);\n  filterText = state.filterText;\n  typeFilter = state.typeFilter;\n  stateFilter = state.stateFilter;\n  sortKey = state.sortKey;\n  selectedQuery = state.selectedQuery;\n  kanbanView = state.kanbanView;\n\n  // Update query description\n  const queryOption = queryOptions.find((option) => option.value === selectedQuery);\n  queryDescription = queryOption?.description || '';\n}\n\n// Initialize kanbanView from persisted webview state if available\ntry {\n  const st =\n    vscode && typeof (vscode as any).getState === 'function' ? (vscode as any).getState() : null;\n  if (st && typeof st.kanbanView === 'boolean') kanbanView = !!st.kanbanView;\n  if (st && typeof st.typeFilter === 'string') typeFilter = st.typeFilter;\n  // Don't restore summaryWorkItemId on initialization - only show summary when explicitly triggered\n  // if (st && typeof st.summaryWorkItemId === 'number') {\n  //   summaryWorkItemId = st.summaryWorkItemId || null;\n  // }\n  // Don't restore summaryWorkItemId on initialization - only show summary when explicitly triggered\n  // if (st && typeof st.summaryWorkItemId === 'number') {\n  //   summaryWorkItemId = st.summaryWorkItemId || null;\n  // }\n} catch (e) {\n  console.warn('[svelte-main] Unable to read persisted state', e);\n}\n\nfunction getAppProps() {\n  return {\n    workItemCount,\n    subtitle: '',\n    hasItems: itemsForView.length > 0,\n    timerActive,\n    timerRunning,\n    timerElapsedLabel,\n    activeId,\n    activeTitle,\n    items: itemsForView,\n    kanbanView,\n    loading,\n    initializing,\n    errorMsg,\n    filterText,\n    typeFilter,\n    stateFilter,\n    sortKey,\n    availableStates: stateOptions,\n    availableTypes: typeOptions,\n    selectedQuery,\n    queryDescription,\n    summaryDraft,\n    summaryStatus,\n    summaryProvider,\n    summaryBusy,\n    summaryTargetId: summaryWorkItemId ?? 0,\n    summaryWorkItemId: summaryWorkItemId ?? 0,\n    connections,\n    activeConnectionId,\n    selectedItems: selectedWorkItemIds,\n    authReminders,\n  };\n}\n\nfunction syncApp() {\n  ensureApp();\n  (app as any).$set(getAppProps());\n}\n\nfunction persistViewState(extra?: Record<string, unknown>) {\n  // Save current connection state if we have an active connection\n  if (activeConnectionId) {\n    saveConnectionState(activeConnectionId);\n  }\n\n  // Also save to global state for backward compatibility\n  try {\n    if (!vscode || typeof (vscode as any).setState !== 'function') return;\n    const prev =\n      (typeof (vscode as any).getState === 'function' && (vscode as any).getState()) || {};\n    (vscode as any).setState({\n      ...prev,\n      kanbanView,\n      filterText,\n      typeFilter,\n      stateFilter,\n      sortKey,\n      summaryWorkItemId,\n      activeConnectionId,\n      ...extra,\n    });\n  } catch (e) {\n    console.warn('[svelte-main] Unable to persist view state', e);\n  }\n}\nfunction ensureApp() {\n  if (app) return app;\n  const root = document.createElement('div');\n  root.id = 'svelte-root';\n  const container = document.body || document.documentElement;\n  container.insertBefore(root, container.firstChild);\n  app = new App({\n    target: root,\n    props: getAppProps(),\n  });\n  // Hook up UI events\n  (app as any).$on('refresh', () => {\n    loading = true;\n    errorMsg = '';\n    syncApp();\n    postMessage({ type: 'refresh' });\n  });\n  (app as any).$on('openFirst', () => {\n    const first = (lastWorkItems || [])[0];\n    if (first)\n      postMessage({\n        type: 'viewWorkItem',\n        workItemId: Number(first.id || first.fields?.['System.Id']),\n      });\n    if (first) {\n      const id = Number(first.id || first.fields?.['System.Id']);\n      setSummaryTarget(id, { ensureOpen: true });\n      syncApp();\n    }\n  });\n  (app as any).$on('startTimer', () => {\n    const first = (lastWorkItems || [])[0];\n    if (first)\n      postMessage({\n        type: 'startTimer',\n        workItemId: Number(first.id || first.fields?.['System.Id']),\n      });\n  });\n  (app as any).$on('stopTimer', () => postMessage({ type: 'showStopTimerOptions' }));\n  (app as any).$on('openActive', (ev: any) => {\n    const id = ev?.detail?.id ?? activeId;\n    if (id != null) {\n      postMessage({ type: 'viewWorkItem', workItemId: Number(id) });\n      setSummaryTarget(Number(id), { ensureOpen: true });\n      syncApp();\n    }\n  });\n  (app as any).$on('openItem', (ev: any) => {\n    const id = Number(ev?.detail?.id);\n    if (id) {\n      postMessage({ type: 'viewWorkItem', workItemId: id });\n      setSummaryTarget(id, { ensureOpen: false });\n      syncApp();\n    }\n  });\n  (app as any).$on('startItem', (ev: any) => {\n    const id = Number(ev?.detail?.id);\n    if (id) {\n      postMessage({ type: 'startTimer', workItemId: id });\n      setSummaryTarget(id, { ensureOpen: true });\n      syncApp();\n    }\n  });\n  (app as any).$on('editItem', (ev: any) => {\n    const id = Number(ev?.detail?.id);\n    if (id) {\n      postMessage({ type: 'editWorkItemInEditor', workItemId: id });\n      setSummaryTarget(id, { ensureOpen: false });\n      syncApp();\n    }\n  });\n  (app as any).$on('commentItem', (ev: any) => {\n    const id = Number(ev?.detail?.id);\n    if (id) {\n      postMessage({ type: 'addComment', workItemId: id });\n      setSummaryTarget(id, { ensureOpen: true });\n      syncApp();\n    }\n  });\n  (app as any).$on('createWorkItem', () => postMessage({ type: 'createWorkItem' }));\n  (app as any).$on('cancelSummary', () => {\n    summaryWorkItemId = null;\n    summaryDraft = '';\n    summaryStatus = '';\n    persistViewState();\n    syncApp();\n  });\n  (app as any).$on('applySummary', (ev: any) => {\n    const workItemId = Number(ev?.detail?.workItemId);\n    if (workItemId && summaryDraft.trim()) {\n      postMessage({ type: 'addComment', workItemId, comment: summaryDraft.trim() });\n      summaryWorkItemId = null;\n      summaryDraft = '';\n      summaryStatus = 'Comment added successfully';\n      persistViewState();\n      syncApp();\n      // Clear status after a delay\n      setTimeout(() => {\n        summaryStatus = '';\n        syncApp();\n      }, 3000);\n    }\n  });\n  (app as any).$on('cancelSummary', () => {\n    summaryWorkItemId = null;\n    summaryDraft = '';\n    summaryStatus = '';\n    persistViewState();\n    syncApp();\n  });\n  (app as any).$on('applySummary', (ev: any) => {\n    const workItemId = Number(ev?.detail?.workItemId);\n    if (workItemId && summaryDraft.trim()) {\n      postMessage({ type: 'addComment', workItemId, comment: summaryDraft.trim() });\n      summaryWorkItemId = null;\n      summaryDraft = '';\n      summaryStatus = 'Comment added successfully';\n      persistViewState();\n      syncApp();\n      // Clear status after a delay\n      setTimeout(() => {\n        summaryStatus = '';\n        syncApp();\n      }, 3000);\n    }\n  });\n  (app as any).$on('toggleKanban', () => {\n    kanbanView = !kanbanView;\n    persistViewState();\n    syncApp();\n    // Send to extension for global persistence\n    postMessage({\n      type: 'uiPreferenceChanged',\n      preferences: { kanbanView, filterText, typeFilter, stateFilter, sortKey },\n    });\n  });\n  (app as any).$on('filtersChanged', (ev: any) => {\n    filterText = String(ev?.detail?.filterText ?? filterText);\n    typeFilter = String(ev?.detail?.typeFilter ?? typeFilter);\n    stateFilter = String(ev?.detail?.stateFilter ?? stateFilter);\n    sortKey = String(ev?.detail?.sortKey ?? sortKey);\n    recomputeItemsForView();\n    persistViewState();\n    syncApp();\n    // Send to extension for global persistence\n    postMessage({\n      type: 'uiPreferenceChanged',\n      preferences: { kanbanView, filterText, typeFilter, stateFilter, sortKey },\n    });\n  });\n  (app as any).$on('queryChanged', (ev: any) => {\n    const { query } = ev.detail || {};\n    if (query && query !== selectedQuery) {\n      selectedQuery = query;\n      // Update query description\n      const queryOption = queryOptions.find((option) => option.value === query);\n      queryDescription = queryOption?.description || '';\n\n      // Save state for current connection\n      if (activeConnectionId) {\n        saveConnectionState(activeConnectionId);\n      }\n\n      // Show loading state immediately when query changes\n      loading = true;\n      errorMsg = '';\n      syncApp();\n      // Send query change to extension\n      postMessage({ type: 'setQuery', query });\n    }\n  });\n  (app as any).$on('connectionChanged', (ev: any) => {\n    const { connectionId } = ev.detail || {};\n    if (connectionId && connectionId !== activeConnectionId) {\n      // Save current connection's state before switching\n      if (activeConnectionId) {\n        saveConnectionState(activeConnectionId);\n      }\n\n      // Apply the new connection's state\n      applyConnectionState(connectionId);\n\n      loading = true;\n      errorMsg = '';\n      syncApp();\n      // Send connection change to extension\n      postMessage({ type: 'switchConnection', connectionId });\n    }\n  });\n  (app as any).$on('selectionChanged', (ev: any) => {\n    const { selectedIds } = ev.detail || {};\n    if (Array.isArray(selectedIds)) {\n      selectedWorkItemIds = new Set(selectedIds.map((id: any) => Number(id)));\n    }\n  });\n  (app as any).$on('bulkAssign', () => {\n    postMessage({ type: 'bulkAssign' });\n  });\n  (app as any).$on('bulkMove', () => {\n    postMessage({ type: 'bulkMove' });\n  });\n  (app as any).$on('bulkAddTags', () => {\n    postMessage({ type: 'bulkAddTags' });\n  });\n  (app as any).$on('bulkDelete', () => {\n    postMessage({ type: 'bulkDelete' });\n  });\n  (app as any).$on('moveItem', (ev: any) => {\n    const id = Number(ev?.detail?.id);\n    const target = String(ev?.detail?.target || '');\n    if (!id || !target) return;\n    // optimistic update: change state field and re-group\n    const found = (lastWorkItems || []).find((w: any) => Number(w.id) === id);\n    if (found) {\n      if (!found.fields) found.fields = {};\n      // map target column key back to a friendly label for immediate UI; server will apply real state\n      const mapping: any = {\n        new: 'To Do',\n        active: 'Active',\n        inprogress: 'In Progress',\n        review: 'Review',\n        resolved: 'Resolved',\n        done: 'Done',\n        removed: 'Removed',\n      };\n      // Save previous state for potential revert\n      const prevState = String(found.fields['System.State'] || '');\n      pendingMoves.set(id, { prevState });\n      found.fields['System.State'] = mapping[target] || 'Active';\n      recomputeItemsForView();\n      syncApp();\n    }\n    postMessage({ type: 'moveWorkItem', id, target });\n  });\n  const onDraftChange = (value: string) => {\n    summaryDraft = value;\n    if (summaryWorkItemId) saveDraftForWorkItem(summaryWorkItemId, summaryDraft);\n    syncApp();\n  };\n  (app as any).$on('summaryDraftChanged', (ev: any) => {\n    onDraftChange(String(ev?.detail?.value ?? ''));\n  });\n  (app as any).$on('summaryDraftBlur', (ev: any) => {\n    onDraftChange(String(ev?.detail?.value ?? ''));\n  });\n  (app as any).$on('generateSummary', () => {\n    _attemptSummaryGeneration();\n  });\n  (app as any).$on('stopAndApplySummary', () => {\n    _attemptStopAndApply();\n  });\n  (app as any).$on('authReminderAction', (ev: any) => {\n    const connectionId =\n      typeof ev?.detail?.connectionId === 'string' ? ev.detail.connectionId.trim() : '';\n    const action = typeof ev?.detail?.action === 'string' ? ev.detail.action : '';\n    if (!connectionId || !action) return;\n    postMessage({ type: 'authReminderAction', connectionId, action });\n    if (action === 'dismiss' || action === 'signIn') {\n      if (authReminderMap.delete(connectionId)) {\n        authReminders = Array.from(authReminderMap.values());\n        syncApp();\n      }\n    }\n  });\n  return app;\n}\n\nfunction findWorkItemById(id: number) {\n  const target = Number(id);\n  return (lastWorkItems || []).find((w: any) => Number(w.id || w.fields?.['System.Id']) === target);\n}\n\nfunction getWorkItemTitle(id: number): string {\n  const match = findWorkItemById(id);\n  if (match) return String(match.fields?.['System.Title'] || `#${id}`);\n  if (activeId === id && activeTitle) return activeTitle;\n  return `Work Item #${id}`;\n}\n\nfunction saveDraftForWorkItem(workItemId: number, text: string) {\n  try {\n    localStorage.setItem(`azuredevops.draft.${workItemId}`, text || '');\n  } catch (e) {\n    console.warn('[svelte-main] Failed to save draft to localStorage', e);\n  }\n}\n\nfunction loadDraftForWorkItem(workItemId: number): string | null {\n  try {\n    return localStorage.getItem(`azuredevops.draft.${workItemId}`);\n  } catch (e) {\n    console.warn('[svelte-main] Failed to load draft from localStorage', e);\n    return null;\n  }\n}\n\nfunction removeDraftForWorkItem(workItemId: number) {\n  try {\n    localStorage.removeItem(`azuredevops.draft.${workItemId}`);\n  } catch (e) {\n    console.warn('[svelte-main] Failed to remove draft from localStorage', e);\n  }\n}\n\nfunction setSummaryTarget(\n  workItemId: number,\n  options: { ensureOpen?: boolean; refreshDraft?: boolean } = {}\n) {\n  const id = Number(workItemId);\n  if (!Number.isFinite(id) || id <= 0) return;\n  const changed = summaryWorkItemId !== id;\n\n  // Only set summaryWorkItemId if ensureOpen is true\n  if (options.ensureOpen && changed) {\n    summaryWorkItemId = id;\n    // Update the title from the work item\n    const item = findWorkItemById(id);\n    if (item) {\n      _summaryTargetTitle = getWorkItemTitle(id);\n    }\n  }\n\n  const shouldRefresh = options.refreshDraft ?? changed;\n  if (shouldRefresh) {\n    const persisted = loadDraftForWorkItem(id);\n    if (persisted !== null) {\n      summaryDraft = persisted;\n    } else if (!summaryDraft || changed) {\n      summaryDraft = '';\n    }\n  }\n  if (changed || shouldRefresh) {\n    if (changed || shouldRefresh) {\n      persistViewState();\n    }\n  }\n}\n\nfunction setSummaryBusy(busy: boolean) {\n  if (summaryBusyTimer) {\n    try {\n      clearTimeout(summaryBusyTimer);\n    } catch {\n      /* ignore */\n    }\n    summaryBusyTimer = undefined;\n  }\n  summaryBusy = busy;\n  if (busy) {\n    summaryBusyTimer = setTimeout(() => {\n      summaryBusy = false;\n      summaryBusyTimer = undefined;\n      syncApp();\n    }, 6000);\n  }\n}\n\nfunction setSummaryStatus(message: string, options?: { timeout?: number }) {\n  if (summaryStatusTimer) {\n    try {\n      clearTimeout(summaryStatusTimer);\n    } catch {\n      /* ignore */\n    }\n    summaryStatusTimer = undefined;\n  }\n  summaryStatus = message;\n  const delay = options?.timeout ?? 0;\n  if (delay > 0) {\n    summaryStatusTimer = setTimeout(() => {\n      summaryStatusTimer = undefined;\n      summaryStatus = '';\n      syncApp();\n    }, delay);\n  }\n}\n\nfunction determineSummaryTargetId(): number | null {\n  if (summaryWorkItemId) return summaryWorkItemId;\n  if (timerActive && activeId) return activeId;\n  const first = itemsForView[0];\n  if (first) return Number(first.id || first.fields?.['System.Id']);\n  return null;\n}\n\nfunction _attemptSummaryGeneration() {\n  const targetId = determineSummaryTargetId();\n  if (!targetId) {\n    const message = 'Select a work item or start a timer to generate a summary.';\n    setSummaryStatus(message, { timeout: 3500 });\n    addToast(message, { type: 'warning', timeout: 3500 });\n    syncApp();\n    return;\n  }\n  setSummaryBusy(true);\n  setSummaryStatus('Generating summary\u2026');\n  syncApp();\n  postMessage({\n    type: 'generateCopilotPrompt',\n    workItemId: targetId,\n    draftSummary: summaryDraft,\n  });\n}\n\nfunction _attemptStopAndApply() {\n  if (!timerActive) {\n    const message = 'Start a timer before applying time to the work item.';\n    setSummaryStatus(message, { timeout: 3500 });\n    addToast(message, { type: 'warning', timeout: 3500 });\n    syncApp();\n    return;\n  }\n  if (summaryWorkItemId) saveDraftForWorkItem(summaryWorkItemId, summaryDraft);\n  setSummaryBusy(true);\n  setSummaryStatus('Stopping timer and applying updates\u2026');\n  syncApp();\n  postMessage({ type: 'stopAndApply', comment: summaryDraft });\n}\n\nfunction getWorkItemType(it: any): string {\n  if (!it) return '';\n  const flattened = typeof it?.type === 'string' ? it.type : undefined;\n  const fromFields =\n    typeof it?.fields?.['System.WorkItemType'] === 'string'\n      ? it.fields['System.WorkItemType']\n      : undefined;\n  const value = flattened || fromFields;\n  return typeof value === 'string' ? value.trim() : '';\n}\n\nfunction buildSearchHaystack(item: any): string {\n  const parts: string[] = [];\n  const seen = new WeakSet<object>();\n  const maxDepth = 5;\n\n  const push = (value: string) => {\n    const trimmed = value.trim();\n    if (trimmed.length > 0) parts.push(trimmed.toLowerCase());\n  };\n\n  const visit = (value: any, depth = 0) => {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      push(value);\n      return;\n    }\n    if (typeof value === 'number' || typeof value === 'bigint' || typeof value === 'boolean') {\n      push(String(value));\n      return;\n    }\n    if (value instanceof Date) {\n      push(value.toISOString());\n      return;\n    }\n    if (typeof value === 'symbol') {\n      push(value.toString());\n      return;\n    }\n    if (typeof value === 'object') {\n      if (seen.has(value)) return;\n      seen.add(value);\n      if (depth >= maxDepth) return;\n      if (Array.isArray(value)) {\n        value.forEach((entry) => visit(entry, depth + 1));\n        return;\n      }\n\n      const identityKeys = [\n        'displayName',\n        'uniqueName',\n        'name',\n        'fullName',\n        'mailAddress',\n        'email',\n        'userPrincipalName',\n        'upn',\n        'descriptor',\n        'text',\n        'value',\n        'title',\n      ];\n      identityKeys.forEach((key) => {\n        if (Object.prototype.hasOwnProperty.call(value, key)) {\n          visit((value as any)[key], depth + 1);\n        }\n      });\n\n      Object.keys(value).forEach((key) => {\n        if (key === '__proto__') return;\n        visit((value as any)[key], depth + 1);\n      });\n    }\n  };\n\n  visit(item);\n\n  return parts.join(' ').replace(/\\s+/g, ' ').trim();\n}\n\nfunction getSearchHaystack(item: any): string {\n  if (!item || (typeof item !== 'object' && typeof item !== 'function')) {\n    return typeof item === 'string' ? item.toLowerCase() : String(item ?? '').toLowerCase();\n  }\n  const cached = searchHaystackCache.get(item);\n  if (cached) return cached;\n  const haystack = buildSearchHaystack(item);\n  searchHaystackCache.set(item, haystack);\n  return haystack;\n}\n\nfunction passesFilters(it: any): boolean {\n  const query = normalizedQuery;\n  const stateRaw = String(it?.fields?.['System.State'] || '');\n  const norm = normalizeState(stateRaw);\n  if (query) {\n    const haystack = getSearchHaystack(it);\n    if (!haystack.includes(query)) return false;\n  }\n  if (typeFilter && getWorkItemType(it) !== typeFilter) return false;\n  if (stateFilter && stateFilter !== 'all' && norm !== stateFilter) return false;\n  return true;\n}\n\nfunction normalizeState(raw: any): string {\n  if (!raw) return 'new';\n  const s = String(raw).toLowerCase().trim().replace(/\\s+/g, '-');\n  if (s === 'new' || s === 'to-do' || s === 'todo' || s === 'proposed') return 'new';\n  if (s === 'approved') return 'approved';\n  if (s === 'committed') return 'committed';\n  if (s === 'active') return 'active';\n  if (s === 'in-progress' || s === 'inprogress' || s === 'doing') return 'inprogress';\n  if (s === 'review' || s === 'code-review' || s === 'testing') return 'review';\n  if (s === 'resolved') return 'resolved';\n  if (s === 'done') return 'done';\n  if (s === 'closed' || s === 'completed') return 'closed';\n  if (s === 'removed') return 'removed';\n  return 'new';\n}\n\nfunction recomputeTypeOptions() {\n  const combined = new Set<string>();\n  (Array.isArray(lastWorkItems) ? lastWorkItems : []).forEach((item: any) => {\n    const typeName = getWorkItemType(item);\n    if (typeName) combined.add(typeName);\n  });\n  typeOptionHints.forEach((hint) => combined.add(hint));\n  typeOptions = Array.from(combined).sort((a, b) => a.localeCompare(b));\n  if (typeFilter && !combined.has(typeFilter)) {\n    typeFilter = '';\n  }\n}\n\nfunction recomputeItemsForView() {\n  const items = Array.isArray(lastWorkItems) ? lastWorkItems : [];\n  try {\n    console.log(\n      '[svelte-main] recomputeItemsForView: lastWorkItems.length=',\n      items.length,\n      'filterText=',\n      filterText,\n      'typeFilter=',\n      typeFilter,\n      'stateFilter=',\n      stateFilter\n    );\n  } catch (err) {\n    void err;\n  }\n  recomputeTypeOptions();\n  normalizedQuery = String(filterText || '')\n    .trim()\n    .toLowerCase();\n  const filtered = items.filter(passesFilters);\n  const sorted = [...filtered].sort((a: any, b: any) => {\n    switch (sortKey) {\n      case 'id-asc':\n        return Number(a.id) - Number(b.id);\n      case 'id-desc':\n        return Number(b.id) - Number(a.id);\n      case 'title-asc': {\n        const at = String(a.fields?.['System.Title'] || '').toLowerCase();\n        const bt = String(b.fields?.['System.Title'] || '').toLowerCase();\n        return at.localeCompare(bt);\n      }\n      case 'updated-desc':\n      default: {\n        const ad = Date.parse(\n          a.fields?.['System.ChangedDate'] || a.fields?.['System.UpdatedDate'] || ''\n        );\n        const bd = Date.parse(\n          b.fields?.['System.ChangedDate'] || b.fields?.['System.UpdatedDate'] || ''\n        );\n        return (isNaN(bd) ? 0 : bd) - (isNaN(ad) ? 0 : ad);\n      }\n    }\n  });\n  itemsForView = sorted;\n  workItemCount = itemsForView.length;\n  // Recompute state options (distinct normalized states actually present in ALL items, not just filtered)\n  const allStatesSet = new Set<string>();\n  (Array.isArray(lastWorkItems) ? lastWorkItems : []).forEach((w: any) => {\n    const norm = normalizeState(w?.fields?.['System.State']);\n    allStatesSet.add(norm);\n  });\n  // Desired ordering reflects bucket order used in App.svelte\n  const order = [\n    'new',\n    'approved',\n    'committed',\n    'active',\n    'inprogress',\n    'review',\n    'resolved',\n    'done',\n    'closed',\n    'removed',\n  ];\n  stateOptions = order.filter((s) => allStatesSet.has(s));\n}\n\nfunction formatElapsedHHMM(sec: number): string {\n  const s = Math.max(0, Math.floor(Number(sec) || 0));\n  const h = Math.floor(s / 3600)\n    .toString()\n    .padStart(2, '0');\n  const m = Math.floor((s % 3600) / 60)\n    .toString()\n    .padStart(2, '0');\n  return `${h}:${m}`;\n}\n\nfunction onMessage(message: any) {\n  switch (message?.type) {\n    case 'workItemsLoading': {\n      const messageConnectionId = message?.connectionId;\n\n      // Only show loading for the active connection\n      if (messageConnectionId && messageConnectionId !== activeConnectionId) {\n        console.log(\n          '[svelte-main] Ignoring workItemsLoading for inactive connection:',\n          messageConnectionId,\n          'active:',\n          activeConnectionId\n        );\n        break;\n      }\n\n      console.log(\n        '[svelte-main] workItemsLoading - showing loading state for query:',\n        message?.query\n      );\n      initializing = false; // We've connected to extension\n      loading = true;\n      errorMsg = '';\n      syncApp();\n      break;\n    }\n    case 'workItemsLoaded': {\n      const items = Array.isArray(message.workItems) ? message.workItems : [];\n      const messageConnectionId = message?.connectionId;\n\n      try {\n        console.log('[svelte-main] workItemsLoaded received. count=', (items || []).length);\n        console.log(\n          '[svelte-main] workItemsLoaded sample ids=',\n          (items || []).slice(0, 5).map((i: any) => i.id || i.fields?.['System.Id'])\n        );\n        console.log(\n          '[svelte-main] current filters before apply: filterText=',\n          filterText,\n          'typeFilter=',\n          typeFilter,\n          'stateFilter=',\n          stateFilter\n        );\n        console.log(\n          '[svelte-main] messageConnectionId=',\n          messageConnectionId,\n          'activeConnectionId=',\n          activeConnectionId\n        );\n        // Additional diagnostics: if host sent zero items, log the entire message and connectionId\n        if (!items || (items && items.length === 0)) {\n          try {\n            console.warn('[svelte-main] workItemsLoaded arrived with 0 items \u2014 full message:');\n            console.warn(JSON.stringify(message));\n            console.warn('[svelte-main] connectionId on message =', message?.connectionId);\n            console.warn(\n              '[svelte-main] local persisted state: typeFilter=',\n              typeFilter,\n              'filterText=',\n              filterText,\n              'stateFilter=',\n              stateFilter\n            );\n            console.warn('[svelte-main] timestamp (ms)=', Date.now());\n          } catch (err) {\n            void err;\n          }\n        }\n      } catch (err) {\n        void err;\n      }\n\n      // CRITICAL FIX: Only process this message if it's for the active connection\n      // or if no connection filtering is needed (legacy/initial load). This prevents\n      // work items from one connection appearing when another is active.\n      if (messageConnectionId && messageConnectionId !== activeConnectionId) {\n        console.warn(\n          '[svelte-main] Ignoring workItemsLoaded for inactive connection:',\n          messageConnectionId,\n          'active:',\n          activeConnectionId\n        );\n        break;\n      }\n\n      // Process the work items - these should always be applied when they match the active connection\n      searchHaystackCache = new WeakMap();\n      lastWorkItems = items;\n      // Only exit initializing state if we have items (cached or fresh)\n      // If no items, stay in initializing until a real query fires\n      if (items.length > 0) {\n        initializing = false;\n      }\n      if (typeof message.kanbanView === 'boolean') {\n        kanbanView = message.kanbanView;\n      }\n\n      // Apply saved UI state for this connection (filters, sort, query selection)\n      // but DON'T clear the work items we just received\n      if (messageConnectionId && messageConnectionId === activeConnectionId) {\n        applyConnectionState(messageConnectionId);\n      }\n\n      recomputeItemsForView();\n      workItemCount = itemsForView.length;\n      loading = false;\n      errorMsg = '';\n      if (activeId) {\n        const match = findWorkItemById(activeId);\n        if (match) {\n          activeTitle = String(match.fields?.['System.Title'] || `#${activeId}`);\n        }\n      }\n      if (summaryWorkItemId) {\n        if (!summaryDraft || !summaryDraft.trim()) {\n          const persisted = loadDraftForWorkItem(summaryWorkItemId);\n          if (persisted !== null) summaryDraft = persisted;\n        }\n      }\n      syncApp();\n      break;\n    }\n    case 'workItemsError': {\n      initializing = false; // We've received response from extension\n      loading = false;\n      errorMsg = String(message?.error || 'Failed to load work items.');\n      // Clear items when there's an error to avoid showing stale data\n      lastWorkItems = [];\n      recomputeItemsForView();\n      syncApp();\n      break;\n    }\n    case 'authReminder': {\n      const connectionId =\n        typeof message?.connectionId === 'string' ? message.connectionId.trim() : '';\n      if (!connectionId) break;\n      const labelRaw = typeof message?.connectionLabel === 'string' ? message.connectionLabel : '';\n      const label =\n        labelRaw && labelRaw.trim().length > 0 ? labelRaw.trim() : 'Azure DevOps connection';\n      const reminderMessage =\n        typeof message?.message === 'string' && message.message.trim().length > 0\n          ? message.message.trim()\n          : `Microsoft Entra sign-in required for ${label}.`;\n      const detail =\n        typeof message?.detail === 'string' && message.detail.trim().length > 0\n          ? message.detail.trim()\n          : undefined;\n      const reason = typeof message?.reason === 'string' ? message.reason : undefined;\n      const authMethod: AuthMethod | undefined =\n        message?.authMethod === 'entra'\n          ? 'entra'\n          : message?.authMethod === 'pat'\n            ? 'pat'\n            : undefined;\n\n      const wasNew = !authReminderMap.has(connectionId);\n      authReminderMap.set(connectionId, {\n        connectionId,\n        label,\n        message: reminderMessage,\n        detail,\n        reason,\n        authMethod,\n      });\n      authReminders = Array.from(authReminderMap.values());\n      syncApp();\n      if (wasNew) {\n        addToast(reminderMessage, { type: 'warning', timeout: 6000 });\n      }\n      break;\n    }\n    case 'authReminderClear': {\n      const connectionId =\n        typeof message?.connectionId === 'string' ? message.connectionId.trim() : '';\n      if (!connectionId) break;\n      if (authReminderMap.delete(connectionId)) {\n        authReminders = Array.from(authReminderMap.values());\n        syncApp();\n      }\n      break;\n    }\n    case 'timerUpdate': {\n      const snap = message?.timer;\n      const hasTimer = snap && typeof snap.workItemId !== 'undefined';\n      timerActive = !!hasTimer;\n      timerRunning = !!hasTimer && !snap.isPaused;\n      elapsedSeconds = hasTimer ? Number(snap?.elapsedSeconds || 0) : 0;\n      timerElapsedLabel = hasTimer ? formatElapsedHHMM(elapsedSeconds) : '';\n      if (hasTimer) {\n        const newActiveId = Number(snap.workItemId) || 0;\n        activeId = newActiveId;\n        activeTitle =\n          snap.workItemTitle || getWorkItemTitle(activeId) || (activeId ? `#${activeId}` : '');\n        const targetChanged = summaryWorkItemId !== activeId;\n        setSummaryTarget(activeId, { ensureOpen: false, refreshDraft: targetChanged });\n        setSummaryTarget(activeId, { ensureOpen: false, refreshDraft: targetChanged });\n        if (!summaryDraft || !summaryDraft.trim()) {\n          const persisted = loadDraftForWorkItem(activeId);\n          if (persisted && persisted.length > 0) {\n            summaryDraft = persisted;\n          } else {\n            const seconds = Number(snap.elapsedSeconds || 0);\n            const hours = Math.max(0, seconds / 3600);\n            const fallbackTitle = activeTitle || `#${activeId}`;\n            summaryDraft = `Worked approximately ${hours.toFixed(\n              2\n            )} hours on ${fallbackTitle}. Provide a short summary of what you accomplished.`;\n          }\n        }\n      } else {\n        activeId = 0;\n        activeTitle = '';\n        timerRunning = false;\n        elapsedSeconds = 0;\n        timerElapsedLabel = '';\n      }\n      syncApp();\n      break;\n    }\n    case 'moveWorkItemResult': {\n      const id = Number(message.id);\n      if (!id || !pendingMoves.has(id)) break;\n      const pending = pendingMoves.get(id);\n      pendingMoves.delete(id);\n      if (!message.success) {\n        const found = (lastWorkItems || []).find((w: any) => Number(w.id) === id);\n        if (found && found.fields && pending) {\n          found.fields['System.State'] = pending.prevState;\n          searchHaystackCache.delete(found);\n          recomputeItemsForView();\n        }\n        syncApp();\n        addToast(`Move failed: ${message.error || 'Unknown error'}`, { type: 'error' });\n      } else if (message.newState) {\n        const found = (lastWorkItems || []).find((w: any) => Number(w.id) === id);\n        if (found && found.fields) {\n          found.fields['System.State'] = message.newState;\n          searchHaystackCache.delete(found);\n          recomputeItemsForView();\n        }\n        syncApp();\n        if (pending && pending.prevState !== message.newState) {\n          addToast(`Moved #${id} \u2192 ${message.newState}`, { type: 'success', timeout: 2500 });\n        }\n      }\n      break;\n    }\n    case 'toggleKanbanView': {\n      kanbanView = !kanbanView;\n      persistViewState();\n      syncApp();\n      break;\n    }\n    case 'workItemTypeOptions': {\n      const list = Array.isArray(message?.types) ? message.types : [];\n      let changed = false;\n      for (const entry of list) {\n        const value = typeof entry === 'string' ? entry.trim() : '';\n        if (!value) continue;\n        if (!typeOptionHints.has(value)) {\n          typeOptionHints.add(value);\n          changed = true;\n        }\n      }\n      if (changed) {\n        recomputeItemsForView();\n        syncApp();\n      }\n      break;\n    }\n    case 'uiPreferences': {\n      const prefs = message?.preferences || {};\n      if (typeof prefs.kanbanView === 'boolean') kanbanView = prefs.kanbanView;\n      if (typeof prefs.filterText === 'string') filterText = prefs.filterText;\n      if (typeof prefs.typeFilter === 'string') typeFilter = prefs.typeFilter;\n      if (typeof prefs.stateFilter === 'string') stateFilter = prefs.stateFilter;\n      if (typeof prefs.sortKey === 'string') sortKey = prefs.sortKey;\n      recomputeItemsForView();\n      syncApp();\n      break;\n    }\n    case 'copilotPromptCopied': {\n      const provider = message?.provider === 'openai' ? 'openai' : 'builtin';\n      summaryProvider = provider;\n      const workItemId = Number(message.workItemId || 0);\n      if (workItemId) {\n        setSummaryTarget(workItemId, { ensureOpen: true, refreshDraft: false });\n      }\n      if (provider === 'openai' && typeof message.summary === 'string' && message.summary.trim()) {\n        summaryDraft = message.summary.trim();\n        if (summaryWorkItemId) saveDraftForWorkItem(summaryWorkItemId, summaryDraft);\n      } else if (\n        provider === 'builtin' &&\n        typeof message.prompt === 'string' &&\n        message.prompt.trim() &&\n        (!summaryDraft || !summaryDraft.trim())\n      ) {\n        summaryDraft = message.prompt;\n      }\n      setSummaryBusy(false);\n      setSummaryStatus(\n        provider === 'openai'\n          ? 'OpenAI summary copied to clipboard.'\n          : 'Copilot prompt copied to clipboard. Paste into Copilot chat to generate a summary.',\n        { timeout: 3500 }\n      );\n      syncApp();\n      break;\n    }\n    case 'stopAndApplyResult': {\n      const id = Number(message.workItemId);\n      const hours = Number(message.hours || 0);\n      setSummaryBusy(false);\n      if (Number.isFinite(id) && id > 0) {\n        setSummaryTarget(id, { ensureOpen: true, refreshDraft: false });\n      }\n      summaryDraft = '';\n      if (Number.isFinite(id) && id > 0) {\n        removeDraftForWorkItem(id);\n      }\n      setSummaryStatus(`Applied ${hours.toFixed(2)} hours to work item #${id}.`, {\n        timeout: 4000,\n      });\n      syncApp();\n      break;\n    }\n    case 'clearFilters': {\n      filterText = '';\n      typeFilter = '';\n      stateFilter = 'all';\n      recomputeItemsForView();\n      persistViewState();\n      syncApp();\n      addToast('Filters cleared', { type: 'info', timeout: 2000 });\n      break;\n    }\n    case 'focusSearch': {\n      // Focus the search input - handled in App.svelte\n      try {\n        const searchInput = document.querySelector('input[type=\"text\"]') as HTMLInputElement;\n        if (searchInput) {\n          searchInput.focus();\n          searchInput.select();\n        }\n      } catch (err) {\n        console.warn('[svelte-main] Failed to focus search', err);\n      }\n      break;\n    }\n    case 'requestSelection': {\n      // Extension is requesting currently selected work item IDs\n      const ids = Array.from(selectedWorkItemIds);\n      postMessage({ type: 'selectedWorkItems', ids });\n      break;\n    }\n    case 'connectionsUpdate': {\n      // Don't exit initializing state just because we got connections\n      // Stay in initializing until we have items or a query starts\n      const receivedConnections = Array.isArray(message?.connections) ? message.connections : [];\n      connections = receivedConnections.map((conn: any) => ({\n        id: String(conn.id || ''),\n        label: String(conn.label || ''),\n        organization: String(conn.organization || ''),\n        project: String(conn.project || ''),\n      }));\n      const newActiveConnectionId = message?.activeConnectionId\n        ? String(message.activeConnectionId)\n        : undefined;\n\n      // If the active connection changed, clear stale data and set loading state\n      if (newActiveConnectionId && newActiveConnectionId !== activeConnectionId) {\n        if (activeConnectionId) {\n          saveConnectionState(activeConnectionId);\n        }\n        activeConnectionId = newActiveConnectionId;\n\n        // CRITICAL FIX: Clear stale work items and show loading when switching connections\n        lastWorkItems = [];\n        itemsForView = [];\n        workItemCount = 0;\n        loading = true;\n        initializing = true; // Back to initializing for new connection\n        errorMsg = '';\n\n        // CRITICAL FIX: Clear auth reminders from previous connection to prevent\n        // signin cards from old connections appearing on the new connection tab\n        authReminderMap.clear();\n        authReminders = [];\n\n        applyConnectionState(activeConnectionId);\n      } else {\n        activeConnectionId = newActiveConnectionId;\n      }\n\n      try {\n        console.log('[svelte-main] connectionsUpdate received:', {\n          count: connections.length,\n          activeConnectionId,\n          connections: connections.map((c) => ({ id: c.id, label: c.label })),\n        });\n      } catch (err) {\n        void err;\n      }\n      syncApp();\n      break;\n    }\n    case 'selfTestPing': {\n      postMessage({ type: 'selfTestPong', nonce: message.nonce, signature: 'svelte-entry' });\n      break;\n    }\n    default:\n      break;\n  }\n}\n\nfunction boot() {\n  window.addEventListener('message', (ev) => onMessage(ev.data));\n  // Signal readiness - extension will send initial data in response\n  // Don't request getWorkItems here, as it causes a premature query before\n  // connections are properly initialized. Also don't set loading=true here,\n  // as we haven't actually started a query yet - just initializing.\n  errorMsg = '';\n  postMessage({ type: 'webviewReady' });\n  ensureApp();\n}\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => boot());\n} else {\n  boot();\n}\n"],
  "mappings": "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",
  "names": ["store", "store", "element", "element", "text", "element", "element", "detach", "create_each_block", "insert", "instance", "create_fragment", "attr", "update", "subscribe", "run", "ctx", "ctx", "text", "workItemCount", "timerActive", "timerRunning", "timerElapsedLabel", "activeId", "activeTitle", "kanbanView", "loading", "initializing", "errorMsg", "filterText", "typeFilter", "stateFilter", "sortKey", "selectedQuery", "queryDescription", "summaryDraft", "summaryStatus", "summaryProvider", "summaryBusy", "summaryWorkItemId", "connections", "activeConnectionId", "authReminders", "queryOptions", "text", "normalizeState"]
}

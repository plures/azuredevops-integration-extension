{
  "version": 3,
  "sources": ["Toasts.svelte", "App.svelte"],
  "sourcesContent": ["<script>\r\n  import { toasts, removeToast } from './toastStore';\r\n  export let ariaLabel = 'Notifications';\r\n</script>\r\n\r\n<div class=\"toast-region\" role=\"region\" aria-live=\"polite\" aria-label={ariaLabel}>\r\n  {#each $toasts as t (t.id)}\r\n    <div class=\"toast {t.type}\" role=\"status\">\r\n      <div class=\"msg\">{t.message}</div>\r\n      <button\r\n        class=\"close\"\r\n        title=\"Dismiss\"\r\n        aria-label=\"Dismiss notification\"\r\n        on:click={() => removeToast(t.id)}>&times;</button\r\n      >\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .toast-region {\r\n    position: fixed;\r\n    bottom: 12px;\r\n    right: 12px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n    z-index: 1000;\r\n    max-width: 360px;\r\n    pointer-events: none; /* allow clicks to underlying except inside toast */\r\n  }\r\n  .toast {\r\n    background: var(--vscode-editorWidget-background);\r\n    border: 1px solid var(--vscode-editorWidget-border);\r\n    padding: 10px 12px 10px 14px;\r\n    border-left: 4px solid var(--vscode-editorWidget-border);\r\n    border-radius: 6px;\r\n    color: var(--vscode-editor-foreground);\r\n    font-size: 12px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n    pointer-events: auto;\r\n    animation: fadeIn 160ms ease;\r\n  }\r\n  .toast.info {\r\n    border-left-color: var(--ado-blue);\r\n  }\r\n  .toast.success {\r\n    border-left-color: var(--state-resolved);\r\n  }\r\n  .toast.warning {\r\n    border-left-color: var(--ado-orange);\r\n  }\r\n  .toast.error {\r\n    border-left-color: var(--ado-red);\r\n  }\r\n  .toast .msg {\r\n    flex: 1;\r\n    line-height: 1.3;\r\n  }\r\n  .toast button.close {\r\n    border: none;\r\n    background: transparent;\r\n    color: var(--vscode-editor-foreground);\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    padding: 0 4px;\r\n    line-height: 1;\r\n    border-radius: 3px;\r\n  }\r\n  .toast button.close:hover {\r\n    background: var(--vscode-toolbar-hoverBackground);\r\n  }\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(4px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n</style>\r\n", "<script>\n  import { createEventDispatcher } from 'svelte';\n  import Toasts from './Toasts.svelte';\n  const dispatch = createEventDispatcher();\n  export let workItemCount = 0;\n  // Optional subtitle (removed legacy 'Svelte flag on' marker)\n  export let subtitle = '';\n  export let hasItems = false;\n  export let timerActive = false;\n  export let timerRunning = false;\n  export let timerElapsedLabel = '';\n  export let activeId = 0; // 0 means none\n  export let activeTitle = '';\n  export let items = [];\n  export let kanbanView = false;\n  export let loading = false;\n  export let initializing = false;\n  export let errorMsg = '';\n  // Filters / sort\n  export let filterText = '';\n  export let typeFilter = '';\n  export let stateFilter = 'all'; // one of 'all', columnDefs keys\n  export let sortKey = 'updated-desc'; // 'updated-desc' | 'id-desc' | 'id-asc' | 'title-asc'\n  export let availableStates = []; // dynamic list of normalized state keys\n  export let availableTypes = [];\n  // Query selector\n  export let selectedQuery = 'My Activity';\n  export let queryDescription = '';\n  export let summaryDraft = '';\n  export let summaryStatus = '';\n  export let summaryProvider = 'builtin';\n  export let summaryBusy = false;\n  export let summaryTargetId = 0;\n  export let summaryWorkItemId = 0;\n\n  // Keyboard navigation state\n  let focusedIndex = 0;\n  let selectedItems = new Set();\n  let keyboardNavigationEnabled = true;\n  // Connections\n  export let connections = [];\n  /** @type {string | undefined} */\n  export let activeConnectionId = undefined;\n  /** @type {Array<{ connectionId: string; label: string; message: string; detail?: string }>} */\n  export let authReminders = [];\n\n  // Multi-select mode\n  let multiSelectMode = false;\n\n  function toggleItemSelection(id) {\n    if (selectedItems.has(id)) {\n      selectedItems.delete(id);\n    } else {\n      selectedItems.add(id);\n    }\n    selectedItems = new Set(selectedItems); // Trigger reactivity\n    dispatch('selectionChanged', { selectedIds: Array.from(selectedItems) });\n  }\n\n  function clearSelection() {\n    selectedItems.clear();\n    selectedItems = new Set(); // Trigger reactivity\n    dispatch('selectionChanged', { selectedIds: [] });\n  }\n\n  function selectAll() {\n    items.forEach((item) => {\n      const id = Number(item.id || item.fields?.['System.Id']);\n      if (id) selectedItems.add(id);\n    });\n    selectedItems = new Set(selectedItems); // Trigger reactivity\n    dispatch('selectionChanged', { selectedIds: Array.from(selectedItems) });\n  }\n\n  function onRefresh() {\n    dispatch('refresh');\n  }\n  function onOpenFirst() {\n    if (hasItems) dispatch('openFirst');\n  }\n  function onStartTimer() {\n    if (hasItems && !timerActive) dispatch('startTimer');\n  }\n  function onStopTimer() {\n    if (timerActive) dispatch('stopTimer');\n  }\n  function onOpenActive() {\n    if (timerActive && activeId) dispatch('openActive', { id: activeId });\n  }\n  function onCreate() {\n    dispatch('createWorkItem');\n  }\n  function onToggleKanban() {\n    dispatch('toggleKanban');\n  }\n  function onReminderSignIn(connectionId) {\n    dispatch('authReminderAction', { connectionId, action: 'signIn' });\n  }\n  function onReminderDismiss(connectionId) {\n    dispatch('authReminderAction', { connectionId, action: 'dismiss' });\n  }\n  function onFilterInput(e) {\n    dispatch('filtersChanged', {\n      filterText: e.target.value,\n      typeFilter,\n      stateFilter,\n      sortKey,\n    });\n  }\n  function onStateFilterChange(e) {\n    dispatch('filtersChanged', {\n      filterText,\n      typeFilter,\n      stateFilter: e.target.value,\n      sortKey,\n    });\n  }\n  function onTypeFilterChange(e) {\n    dispatch('filtersChanged', {\n      filterText,\n      typeFilter: e.target.value,\n      stateFilter,\n      sortKey,\n    });\n  }\n  function onSortChange(e) {\n    dispatch('filtersChanged', {\n      filterText,\n      typeFilter,\n      stateFilter,\n      sortKey: e.target.value,\n    });\n  }\n  function onSummaryInput(e) {\n    dispatch('summaryDraftChanged', { value: e.target.value });\n  }\n  function onSummaryBlur(e) {\n    dispatch('summaryDraftBlur', { value: e.target.value });\n  }\n  function onGenerateSummary() {\n    dispatch('generateSummary');\n  }\n  function onStopAndApplySummary() {\n    dispatch('stopAndApplySummary');\n  }\n  function onCancelSummary() {\n    dispatch('cancelSummary');\n  }\n  function onQueryChange(e) {\n    dispatch('queryChanged', { query: e.target.value });\n  }\n  function onConnectionChange(e) {\n    dispatch('connectionChanged', { connectionId: e.target.value });\n  }\n\n  // Query options\n  const queryOptions = [\n    {\n      value: 'My Activity',\n      label: 'My Activity',\n      description: \"Work items I've created, assigned to, or recently changed\",\n    },\n    {\n      value: 'My Work Items',\n      label: 'My Work Items',\n      description: 'Work items currently assigned to me',\n    },\n    {\n      value: 'Assigned to me',\n      label: 'Assigned to me',\n      description: 'Work items currently assigned to me',\n    },\n    {\n      value: 'Current Sprint',\n      label: 'Current Sprint',\n      description: 'Work items in the current iteration',\n    },\n    {\n      value: 'All Active',\n      label: 'All Active',\n      description: 'All active work items in the project',\n    },\n    {\n      value: 'Recently Updated',\n      label: 'Recently Updated',\n      description: 'Work items updated in the last 14 days',\n    },\n    { value: 'Following', label: 'Following', description: \"Work items I'm following\" },\n    { value: 'Mentioned', label: 'Mentioned', description: \"Work items where I've been mentioned\" },\n  ];\n\n  // Keyboard navigation handlers\n  function handleKeydown(event) {\n    if (!keyboardNavigationEnabled) return;\n\n    const { key, ctrlKey, metaKey, shiftKey } = event;\n    const isModifier = ctrlKey || metaKey;\n\n    switch (key) {\n      case 'j':\n      case 'ArrowDown':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateDown();\n        }\n        break;\n      case 'k':\n      case 'ArrowUp':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateUp();\n        }\n        break;\n      case 'h':\n      case 'ArrowLeft':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateLeft();\n        }\n        break;\n      case 'l':\n      case 'ArrowRight':\n        if (!isModifier) {\n          event.preventDefault();\n          navigateRight();\n        }\n        break;\n      case 'Home':\n        event.preventDefault();\n        navigateToTop();\n        break;\n      case 'End':\n        event.preventDefault();\n        navigateToBottom();\n        break;\n      case 'Enter':\n        if (!isModifier) {\n          event.preventDefault();\n          openFocusedItem();\n        }\n        break;\n      case ' ':\n        if (!isModifier) {\n          event.preventDefault();\n          toggleSelection();\n        }\n        break;\n      case 'Escape':\n        event.preventDefault();\n        clearSelection();\n        break;\n      case 'a':\n        if (isModifier) {\n          event.preventDefault();\n          selectAll();\n        }\n        break;\n      case 'r':\n        if (!isModifier) {\n          event.preventDefault();\n          onRefresh();\n        }\n        break;\n      case 'v':\n        if (!isModifier) {\n          event.preventDefault();\n          dispatch('toggleKanbanView');\n        }\n        break;\n      case 'f':\n        if (!isModifier) {\n          event.preventDefault();\n          focusSearch();\n        }\n        break;\n    }\n  }\n\n  function navigateDown() {\n    if (focusedIndex < items.length - 1) {\n      focusedIndex++;\n      updateFocus();\n    }\n  }\n\n  function navigateUp() {\n    if (focusedIndex > 0) {\n      focusedIndex--;\n      updateFocus();\n    }\n  }\n\n  function navigateLeft() {\n    if (kanbanView) {\n      // In Kanban view, move to previous column\n      updateFocus();\n    }\n  }\n\n  function navigateRight() {\n    if (kanbanView) {\n      // In Kanban view, move to next column\n      updateFocus();\n    }\n  }\n\n  function navigateToTop() {\n    focusedIndex = 0;\n    updateFocus();\n  }\n\n  function navigateToBottom() {\n    focusedIndex = Math.max(0, items.length - 1);\n    updateFocus();\n  }\n\n  function toggleSelection() {\n    // Get ID of focused item\n    if (focusedIndex >= 0 && focusedIndex < items.length) {\n      const item = items[focusedIndex];\n      const id = Number(item.id || item.fields?.['System.Id']);\n      if (id) {\n        toggleItemSelection(id);\n      }\n    }\n  }\n\n  function openFocusedItem() {\n    if (items[focusedIndex]) {\n      dispatch('openWorkItem', { id: items[focusedIndex].id });\n    }\n  }\n\n  function focusSearch() {\n    // Focus the search input\n    const searchInput = document.querySelector('input[type=\"text\"]');\n    if (searchInput) {\n      searchInput.focus();\n    }\n  }\n\n  function updateFocus() {\n    // Scroll focused item into view\n    const focusedElement = document.querySelector(`[data-index=\"${focusedIndex}\"]`);\n    if (focusedElement) {\n      focusedElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  // Listen for messages from the extension\n  function handleMessage(event) {\n    const { type, data } = event.detail;\n\n    switch (type) {\n      case 'updateFocus':\n        focusedIndex = data.focusedIndex;\n        updateFocus();\n        break;\n      case 'updateSelection':\n        selectedItems = new Set(data.selectedItems);\n        break;\n      case 'focusSearch':\n        focusSearch();\n        break;\n    }\n  }\n\n  $: summaryButtonLabel =\n    summaryProvider === 'openai' ? 'Generate AI Summary' : 'Copy Copilot Prompt';\n  $: summaryHelperText =\n    summaryProvider === 'openai'\n      ? 'Creates an OpenAI summary and copies it to your clipboard.'\n      : 'Copies a Copilot-ready prompt to your clipboard.';\n  $: summaryGenerateDisabled = summaryBusy || !summaryTargetId;\n  $: summaryApplyDisabled = summaryBusy || !timerActive;\n  $: summaryAreaDisabled = !summaryTargetId;\n\n  // DnD helpers\n  let draggingId = null;\n  function handleDragStart(ev, it) {\n    draggingId = it.id;\n    try {\n      ev.dataTransfer?.setData('text/plain', String(it.id));\n    } catch {}\n    ev.dataTransfer && (ev.dataTransfer.effectAllowed = 'move');\n  }\n  function allowDrop(ev) {\n    ev.preventDefault();\n  }\n  function handleDrop(ev, colKey) {\n    ev.preventDefault();\n    const txt = ev.dataTransfer?.getData('text/plain');\n    const id = Number(txt || draggingId);\n    draggingId = null;\n    if (!id) return;\n    // Compute best guess target state label to send to extension\n    const label = bucketLabels[colKey] || colKey;\n    dispatch('moveItem', { id, target: colKey, targetState: label });\n  }\n\n  // --- Kanban helpers ---\n  // We’ll group items by their actual state but map similar states to buckets for ordering\n  const bucketOrder = [\n    'new',\n    'approved',\n    'committed',\n    'active',\n    'inprogress',\n    'review',\n    'resolved',\n    'done',\n    'closed',\n    'removed',\n  ];\n  const bucketLabels = {\n    new: 'New',\n    approved: 'Approved',\n    committed: 'Committed',\n    active: 'Active',\n    inprogress: 'In Progress',\n    review: 'Review/Testing',\n    resolved: 'Resolved',\n    done: 'Done',\n    closed: 'Closed',\n    removed: 'Removed',\n  };\n\n  function normalizeState(raw) {\n    if (!raw) return 'todo';\n    const s = String(raw).toLowerCase().trim().replace(/\\s+/g, '-');\n    if (s === 'new' || s === 'to-do' || s === 'todo' || s === 'proposed') return 'new';\n    if (s === 'approved') return 'approved';\n    if (s === 'committed') return 'committed';\n    if (s === 'active') return 'active';\n    if (s === 'in-progress' || s === 'inprogress' || s === 'doing') return 'inprogress';\n    if (s === 'review' || s === 'code-review' || s === 'testing') return 'review';\n    if (s === 'resolved') return 'resolved';\n    if (s === 'done') return 'done';\n    if (s === 'closed' || s === 'completed') return 'closed';\n    if (s === 'removed') return 'removed';\n    return 'new';\n  }\n\n  function getWorkItemTypeIcon(type) {\n    const t = String(type || '').toLowerCase();\n    if (t.includes('bug')) return '\\uf41d'; // bug icon\n    if (t.includes('task')) return '\\uf0f7'; // task icon\n    if (t.includes('story') || t.includes('user story')) return '\\uf413'; // book icon\n    if (t.includes('feature')) return '\\uf0e7'; // star icon\n    if (t.includes('epic')) return '\\uf0f2'; // layers icon\n    return '\\uf0c5'; // default work item icon\n  }\n\n  function getPriorityClass(priority) {\n    const p = Number(priority) || 3;\n    if (p === 1) return 'priority-1';\n    if (p === 2) return 'priority-2';\n    if (p === 3) return 'priority-3';\n    if (p === 4) return 'priority-4';\n    return 'priority-3';\n  }\n\n  function extractDescription(it) {\n    const raw = it?.fields?.['System.Description'];\n    if (!raw || typeof raw !== 'string') return '';\n    // Strip HTML tags & collapse whitespace\n    const text = raw\n      .replace(/<style[\\s\\S]*?<\\/style>/gi, ' ')\n      .replace(/<script[\\s\\S]*?<\\/script>/gi, ' ')\n      .replace(/<[^>]+>/g, ' ')\n      .replace(/&nbsp;/gi, ' ')\n      .replace(/&amp;/gi, '&')\n      .replace(/&lt;/gi, '<')\n      .replace(/&gt;/gi, '>')\n      .replace(/&quot;/gi, '\"')\n      .replace(/&#39;/gi, \"'\")\n      .replace(/\\s+/g, ' ') // collapse\n      .trim();\n    const max = 120;\n    if (text.length <= max) return text;\n    return text.slice(0, max).trimEnd() + '…';\n  }\n\n  $: kanbanGroups = (() => {\n    // Derive buckets present from items\n    const present = new Set(bucketOrder);\n    const groups = Object.fromEntries(bucketOrder.map((k) => [k, []]));\n    (items || []).forEach((it) => {\n      const norm = normalizeState(it?.fields?.['System.State']);\n      if (!present.has(norm)) present.add(norm);\n      (groups[norm] || groups['new']).push(it);\n    });\n    return groups;\n  })();\n\n  $: columnDefs = bucketOrder\n    .filter(\n      (k) =>\n        (kanbanGroups[k] || []).length > 0 ||\n        ['new', 'active', 'inprogress', 'review', 'done'].includes(k)\n    )\n    .map((k) => ({ key: k, label: bucketLabels[k] || k }));\n</script>\n\n<div class=\"pane\">\n  <!-- Connection Tabs (only show if multiple connections) -->\n  {#if connections && connections.length > 1}\n    <div class=\"connection-tabs\" role=\"tablist\" aria-label=\"Project connections\">\n      {#each connections as connection}\n        <button\n          class=\"connection-tab\"\n          class:active={connection.id === activeConnectionId}\n          on:click={() => dispatch('connectionChanged', { connectionId: connection.id })}\n          role=\"tab\"\n          aria-selected={connection.id === activeConnectionId}\n          aria-label={`Switch to ${connection.label}`}\n          title={`${connection.organization}/${connection.project}`}\n        >\n          {connection.label}\n        </button>\n      {/each}\n    </div>\n  {/if}\n\n  {#if authReminders && authReminders.length}\n    <div class=\"auth-reminders\" role=\"region\" aria-label=\"Authentication reminders\">\n      {#each authReminders as reminder (reminder.connectionId)}\n        <div class=\"auth-reminder\" role=\"alert\">\n          <div class=\"auth-reminder-icon\" aria-hidden=\"true\">⚠️</div>\n          <div class=\"auth-reminder-body\">\n            <div class=\"auth-reminder-title\">\n              {reminder.message || `Microsoft Entra sign-in required for ${reminder.label}`}\n            </div>\n            <div class=\"auth-reminder-detail\">\n              {#if reminder.detail}\n                {reminder.detail}\n              {:else}\n                Sign in to refresh {reminder.label} and resume work item syncing.\n              {/if}\n            </div>\n          </div>\n          <div class=\"auth-reminder-actions\">\n            <button class=\"primary\" on:click={() => onReminderSignIn(reminder.connectionId)}>\n              Sign In\n            </button>\n            <button class=\"secondary\" on:click={() => onReminderDismiss(reminder.connectionId)}>\n              Dismiss\n            </button>\n          </div>\n        </div>\n      {/each}\n    </div>\n  {/if}\n\n  <!-- Query Selector Row -->\n  <div class=\"query-header\" role=\"toolbar\" aria-label=\"Query selection\">\n    <div class=\"query-selector-container\">\n      <label for=\"querySelect\" class=\"query-selector-label\">Query</label>\n      <select\n        id=\"querySelect\"\n        class=\"query-selector\"\n        bind:value={selectedQuery}\n        on:change={onQueryChange}\n        title=\"Select a query to filter work items\"\n        aria-label=\"Select query\"\n      >\n        {#each queryOptions as option}\n          <option value={option.value}>{option.label}</option>\n        {/each}\n      </select>\n      {#if queryDescription}\n        <div class=\"query-description\">{queryDescription}</div>\n      {/if}\n    </div>\n  </div>\n\n  <!-- Bulk Actions Toolbar (shown when items selected) -->\n  {#if selectedItems.size > 0}\n    <div class=\"bulk-actions-toolbar\" role=\"toolbar\" aria-label=\"Bulk actions\">\n      <span class=\"selected-count\">{selectedItems.size} selected</span>\n      <button class=\"bulk-btn\" on:click={() => dispatch('bulkAssign')} title=\"Bulk Assign\">\n        <span class=\"codicon codicon-person-add\"></span> Assign\n      </button>\n      <button class=\"bulk-btn\" on:click={() => dispatch('bulkMove')} title=\"Bulk Move\">\n        <span class=\"codicon codicon-arrow-right\"></span> Move\n      </button>\n      <button class=\"bulk-btn\" on:click={() => dispatch('bulkAddTags')} title=\"Bulk Add Tags\">\n        <span class=\"codicon codicon-tag\"></span> Tags\n      </button>\n      <button class=\"bulk-btn danger\" on:click={() => dispatch('bulkDelete')} title=\"Bulk Delete\">\n        <span class=\"codicon codicon-trash\"></span> Delete\n      </button>\n      <button class=\"bulk-btn secondary\" on:click={clearSelection} title=\"Clear Selection (Esc)\">\n        <span class=\"codicon codicon-close\"></span> Clear\n      </button>\n    </div>\n  {/if}\n\n  <!-- Main Controls Row -->\n  <div class=\"pane-header\" role=\"toolbar\" aria-label=\"Work Items actions\">\n    <span style=\"font-weight:600;\">Work Items</span>\n    {#if subtitle}\n      <span class=\"muted\">({subtitle})</span>\n    {/if}\n    {#if loading}\n      <span class=\"spinner\" role=\"status\" aria-label=\"Loading\" title=\"Loading\"></span>\n    {/if}\n    <span class=\"count\">{workItemCount}</span>\n    {#if timerActive}\n      <span class=\"muted\"\n        >• {timerRunning ? 'Running' : 'Paused'}\n        {#if timerElapsedLabel}({timerElapsedLabel}){/if}</span\n      >\n      {#if activeId}\n        <button\n          on:click={onOpenActive}\n          title={activeTitle || 'Open active work item'}\n          aria-label={`Open active work item #${activeId}`}>#{activeId}</button\n        >\n      {/if}\n    {/if}\n    <span class=\"actions\" style=\"margin-left:auto;\">\n      <span class=\"filters\" aria-label=\"Filters and sort\">\n        <input\n          placeholder=\"Filter...\"\n          value={filterText}\n          on:input={onFilterInput}\n          aria-label=\"Filter work items\"\n        />\n        <select\n          on:change={onTypeFilterChange}\n          bind:value={typeFilter}\n          aria-label=\"Filter by work item type\"\n        >\n          <option value=\"\">All types</option>\n          {#if availableTypes && availableTypes.length}\n            {#each availableTypes as typeName}\n              <option value={typeName}>{typeName}</option>\n            {/each}\n          {/if}\n        </select>\n        <select\n          on:change={onStateFilterChange}\n          bind:value={stateFilter}\n          aria-label=\"Filter by state\"\n        >\n          <option value=\"all\">All</option>\n          {#if availableStates && availableStates.length}\n            {#each availableStates as s}\n              <option value={s}>{bucketLabels[s] || s}</option>\n            {/each}\n          {:else}\n            {#each columnDefs as c}\n              <option value={c.key}>{c.label}</option>\n            {/each}\n          {/if}\n        </select>\n        <select on:change={onSortChange} bind:value={sortKey} aria-label=\"Sort items\">\n          <option value=\"updated-desc\">Updated ↓</option>\n          <option value=\"id-desc\">ID ↓</option>\n          <option value=\"id-asc\">ID ↑</option>\n          <option value=\"title-asc\">Title A→Z</option>\n        </select>\n      </span>\n    </span>\n  </div>\n\n  <div\n    class=\"pane-body\"\n    on:keydown={handleKeydown}\n    tabindex=\"0\"\n    role=\"listbox\"\n    aria-label=\"Work items list\"\n  >\n    {#if errorMsg}\n      <div class=\"error-banner\" role=\"alert\">\n        <div style=\"font-weight: 600; margin-bottom: 4px;\">⚠️ Error Loading Work Items</div>\n        <div>{errorMsg}</div>\n      </div>\n    {/if}\n    {#if initializing}\n      <div class=\"loading\">\n        <span class=\"spinner\" role=\"status\" aria-label=\"Initializing\"></span> Initializing extension…\n      </div>\n    {:else if loading}\n      <div class=\"loading\">\n        <span class=\"spinner\" role=\"status\" aria-label=\"Loading\"></span> Loading work items…\n      </div>\n    {:else if kanbanView}\n      <div class=\"kanban-board\" aria-label=\"Kanban board\">\n        {#each columnDefs as col}\n          <div\n            class=\"kanban-column state-{col.key}\"\n            on:dragover={allowDrop}\n            on:drop={(e) => handleDrop(e, col.key)}\n            role=\"listbox\"\n            tabindex=\"0\"\n            aria-label={`${col.label} column - drop items here`}\n          >\n            <div class=\"kanban-column-header\">\n              <h3>{col.label}</h3>\n              <span class=\"item-count\">{kanbanGroups[col.key]?.length || 0}</span>\n            </div>\n            <div class=\"kanban-column-content\">\n              {#if kanbanGroups[col.key]?.length}\n                {#each kanbanGroups[col.key] as it}\n                  <div\n                    class=\"work-item-card kanban-card state-{normalizeState(\n                      it.fields?.['System.State']\n                    )} {timerActive && activeId === Number(it.id)\n                      ? 'has-active-timer'\n                      : ''} {selectedItems.has(Number(it.id)) ? 'selected' : ''}\"\n                    tabindex=\"0\"\n                    draggable=\"true\"\n                    on:dragstart={(e) => handleDragStart(e, it)}\n                    on:keydown={(e) => {\n                      if (\n                        kanbanView &&\n                        (e.ctrlKey || e.metaKey) &&\n                        (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n                      ) {\n                        e.preventDefault();\n                        const currentKey = normalizeState(it.fields?.['System.State']);\n                        const idx = columnDefs.findIndex((c) => c.key === currentKey);\n                        if (idx !== -1) {\n                          const nextIdx = e.key === 'ArrowLeft' ? idx - 1 : idx + 1;\n                          const target = columnDefs[nextIdx];\n                          if (target) {\n                            const label = target.label || target.key;\n                            dispatch('moveItem', {\n                              id: it.id,\n                              target: target.key,\n                              targetState: label,\n                            });\n                          }\n                        }\n                      }\n                    }}\n                    role=\"button\"\n                    aria-label={`Work item #${it.id}: ${it.fields?.['System.Title']} - use action buttons to interact`}\n                  >\n                    <div class=\"work-item-header\">\n                      <input\n                        type=\"checkbox\"\n                        class=\"work-item-checkbox\"\n                        checked={selectedItems.has(Number(it.id))}\n                        on:click|stopPropagation={() => toggleItemSelection(Number(it.id))}\n                        aria-label=\"Select work item #{it.id}\"\n                      />\n                      <span class=\"work-item-type-icon\"\n                        >{getWorkItemTypeIcon(it.fields?.['System.WorkItemType'])}</span\n                      >\n                      <span class=\"work-item-id\">#{it.id}</span>\n                      {#if timerActive && activeId === Number(it.id)}\n                        <span class=\"timer-indicator\"\n                          ><span class=\"codicon codicon-clock\" aria-hidden=\"true\"></span>\n                          {timerElapsedLabel}</span\n                        >\n                      {/if}\n                      <span\n                        class=\"work-item-priority {getPriorityClass(\n                          it.fields?.['Microsoft.VSTS.Common.Priority']\n                        )}\"\n                      >\n                        {it.fields?.['Microsoft.VSTS.Common.Priority'] || '3'}\n                      </span>\n                    </div>\n\n                    <div class=\"work-item-content\">\n                      <div class=\"work-item-title\">\n                        {it.fields?.['System.Title'] || `Work Item #${it.id}`}\n                      </div>\n                      {#if extractDescription(it)}\n                        <div class=\"work-item-desc\" title={extractDescription(it)}>\n                          {extractDescription(it)}\n                        </div>\n                      {/if}\n\n                      <!-- Summary Composer for this work item -->\n                      {#if summaryWorkItemId === Number(it.id)}\n                        <div class=\"work-item-summary\">\n                          <div class=\"summary-header\">\n                            <div class=\"summary-context\">\n                              <span class=\"summary-target-label\">Comment</span>\n                              <span class=\"summary-provider-badge\"\n                                >{summaryProvider === 'openai' ? 'OpenAI' : 'Copilot'}</span\n                              >\n                              {#if timerActive && activeId === Number(it.id)}\n                                <span class=\"summary-target-timer\"\n                                  >{timerRunning ? 'Running' : 'Paused'}\n                                  {#if timerElapsedLabel}\n                                    ({timerElapsedLabel})\n                                  {/if}</span\n                                >\n                              {/if}\n                            </div>\n                            <div class=\"summary-header-actions\">\n                              {#if summaryBusy}\n                                <span\n                                  class=\"spinner inline\"\n                                  role=\"status\"\n                                  aria-label=\"Generating summary\"\n                                ></span>\n                              {/if}\n                              <button\n                                class=\"action-btn cancel compact\"\n                                on:click|preventDefault={onCancelSummary}\n                                title=\"Cancel\"\n                                aria-label=\"Cancel\"\n                              >\n                                <span class=\"codicon codicon-close\" aria-hidden=\"true\"></span>\n                              </button>\n                            </div>\n                          </div>\n                          <textarea\n                            class=\"summary-textarea\"\n                            placeholder=\"Draft a concise update for this work item…\"\n                            value={summaryDraft}\n                            on:input={onSummaryInput}\n                            on:blur={onSummaryBlur}\n                            rows=\"3\"\n                            disabled={summaryAreaDisabled}\n                          ></textarea>\n                          <div class=\"summary-actions\">\n                            <div class=\"summary-buttons\">\n                              <button\n                                class=\"action-btn summary-generate\"\n                                on:click|preventDefault={onGenerateSummary}\n                                title={summaryButtonLabel}\n                                aria-label={summaryButtonLabel}\n                                disabled={summaryGenerateDisabled}\n                              >\n                                <span class=\"codicon codicon-rocket\" aria-hidden=\"true\"></span>\n                                {summaryButtonLabel}\n                              </button>\n                              {#if timerActive && activeId === Number(it.id)}\n                                <button\n                                  class=\"action-btn summary-apply\"\n                                  on:click|preventDefault={onStopAndApplySummary}\n                                  title=\"Stop timer and apply time entry with this summary\"\n                                  aria-label=\"Stop timer and apply time entry with this summary\"\n                                  disabled={summaryApplyDisabled}\n                                >\n                                  <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                                  Stop &amp; Apply\n                                </button>\n                              {:else}\n                                <button\n                                  class=\"action-btn summary-apply\"\n                                  on:click|preventDefault={() =>\n                                    dispatch('applySummary', { workItemId: it.id })}\n                                  title=\"Apply summary as comment\"\n                                  aria-label=\"Apply summary as comment\"\n                                  disabled={summaryBusy || !summaryDraft.trim()}\n                                >\n                                  <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                                  Apply\n                                </button>\n                              {/if}\n                            </div>\n                            <div class=\"summary-helper\">{summaryHelperText}</div>\n                          </div>\n                          {#if summaryStatus}\n                            <div class=\"summary-status\" aria-live=\"polite\">{summaryStatus}</div>\n                          {/if}\n                        </div>\n                      {/if}\n\n                      <div class=\"work-item-meta\">\n                        <span class=\"work-item-type\"\n                          >{it.fields?.['System.WorkItemType'] || 'Task'}</span\n                        >\n                        {#if it.fields?.['System.AssignedTo']}\n                          <span class=\"work-item-assignee\">\n                            <span class=\"codicon codicon-account\" aria-hidden=\"true\"></span>\n                            {it.fields['System.AssignedTo'].displayName ||\n                              it.fields['System.AssignedTo']}\n                          </span>\n                        {/if}\n                      </div>\n                    </div>\n\n                    <div class=\"work-item-actions\">\n                      {#if timerActive && activeId === Number(it.id)}\n                        <button\n                          class=\"action-btn stop compact\"\n                          on:click|stopPropagation={() => dispatch('stopTimer')}\n                          title=\"Stop timer\"\n                          aria-label={`Stop timer for #${it.id}`}\n                        >\n                          <span class=\"codicon codicon-debug-stop\" aria-hidden=\"true\"></span>\n                        </button>\n                      {:else}\n                        <button\n                          class=\"action-btn start compact\"\n                          on:click|stopPropagation={() => dispatch('startItem', { id: it.id })}\n                          title=\"Start timer\"\n                          aria-label={`Start timer for #${it.id}`}\n                          disabled={timerActive}\n                        >\n                          <span class=\"codicon codicon-play\" aria-hidden=\"true\"></span>\n                        </button>\n                      {/if}\n                      <button\n                        class=\"action-btn view compact\"\n                        on:click|stopPropagation={() => dispatch('openItem', { id: it.id })}\n                        title=\"View\"\n                        aria-label={`View work item #${it.id}`}\n                      >\n                        <span class=\"codicon codicon-eye\" aria-hidden=\"true\"></span>\n                      </button>\n                      <button\n                        class=\"action-btn edit compact\"\n                        on:click|stopPropagation={() => dispatch('editItem', { id: it.id })}\n                        title=\"Edit\"\n                        aria-label={`Edit work item #${it.id}`}\n                      >\n                        <span class=\"codicon codicon-edit\" aria-hidden=\"true\"></span>\n                      </button>\n                      <button\n                        class=\"action-btn comment compact\"\n                        on:click|stopPropagation={() => dispatch('commentItem', { id: it.id })}\n                        title=\"Comment\"\n                        aria-label={`Add comment to #${it.id}`}\n                      >\n                        <span class=\"codicon codicon-comment\" aria-hidden=\"true\"></span>\n                      </button>\n                    </div>\n                  </div>\n                {/each}\n              {:else}\n                <div class=\"empty\">No items</div>\n              {/if}\n            </div>\n          </div>\n        {/each}\n      </div>\n    {:else if items && items.length}\n      <div class=\"items\" aria-label=\"Work items\">\n        {#each items.slice(0, 50) as it, index}\n          <div\n            class=\"work-item-card {timerActive && activeId === Number(it.id)\n              ? 'has-active-timer'\n              : ''} {focusedIndex === index ? 'focused' : ''} {selectedItems.has(Number(it.id))\n              ? 'selected'\n              : ''}\"\n            tabindex=\"0\"\n            role=\"button\"\n            data-index={index}\n            aria-label={`Work item #${it.id}: ${it.fields?.['System.Title']} - use action buttons to interact`}\n            on:click={(e) => {\n              focusedIndex = index;\n              updateFocus();\n              // Ctrl/Cmd+Click for multi-select\n              if (e.ctrlKey || e.metaKey) {\n                e.stopPropagation();\n                toggleItemSelection(Number(it.id));\n              }\n            }}\n            on:keydown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ') {\n                e.preventDefault();\n                focusedIndex = index;\n                updateFocus();\n                if (e.key === 'Enter') {\n                  openFocusedItem();\n                } else if (e.key === ' ') {\n                  toggleSelection();\n                }\n              }\n            }}\n          >\n            <div class=\"work-item-header\">\n              <input\n                type=\"checkbox\"\n                class=\"work-item-checkbox\"\n                checked={selectedItems.has(Number(it.id))}\n                on:click|stopPropagation={() => toggleItemSelection(Number(it.id))}\n                aria-label=\"Select work item #{it.id}\"\n              />\n              <span class=\"work-item-type-icon\"\n                >{getWorkItemTypeIcon(it.fields?.['System.WorkItemType'])}</span\n              >\n              <span class=\"work-item-id\">#{it.id}</span>\n              {#if timerActive && activeId === Number(it.id)}\n                <span class=\"timer-indicator\"\n                  ><span class=\"codicon codicon-clock\" aria-hidden=\"true\"></span>\n                  {timerElapsedLabel}</span\n                >\n              {/if}\n              <span\n                class=\"work-item-priority {getPriorityClass(\n                  it.fields?.['Microsoft.VSTS.Common.Priority']\n                )}\"\n              >\n                {it.fields?.['Microsoft.VSTS.Common.Priority'] || '3'}\n              </span>\n            </div>\n\n            <div class=\"work-item-content\">\n              <div class=\"work-item-title\">\n                {it.fields?.['System.Title'] || `Work Item #${it.id}`}\n              </div>\n              {#if extractDescription(it)}\n                <div class=\"work-item-desc\" title={extractDescription(it)}>\n                  {extractDescription(it)}\n                </div>\n              {/if}\n\n              <!-- Summary Composer for this work item -->\n              {#if summaryWorkItemId === Number(it.id)}\n                <div class=\"work-item-summary\">\n                  <div class=\"summary-header\">\n                    <div class=\"summary-context\">\n                      <span class=\"summary-target-label\">Comment</span>\n                      <span class=\"summary-provider-badge\"\n                        >{summaryProvider === 'openai' ? 'OpenAI' : 'Copilot'}</span\n                      >\n                      {#if timerActive && activeId === Number(it.id)}\n                        <span class=\"summary-target-timer\"\n                          >{timerRunning ? 'Running' : 'Paused'}\n                          {#if timerElapsedLabel}\n                            ({timerElapsedLabel})\n                          {/if}</span\n                        >\n                      {/if}\n                    </div>\n                    <div class=\"summary-header-actions\">\n                      {#if summaryBusy}\n                        <span class=\"spinner inline\" role=\"status\" aria-label=\"Generating summary\"\n                        ></span>\n                      {/if}\n                      <button\n                        class=\"action-btn cancel compact\"\n                        on:click|preventDefault={onCancelSummary}\n                        title=\"Cancel\"\n                        aria-label=\"Cancel\"\n                      >\n                        <span class=\"codicon codicon-close\" aria-hidden=\"true\"></span>\n                      </button>\n                    </div>\n                  </div>\n                  <textarea\n                    class=\"summary-textarea\"\n                    placeholder=\"Draft a concise update for this work item…\"\n                    value={summaryDraft}\n                    on:input={onSummaryInput}\n                    on:blur={onSummaryBlur}\n                    rows=\"3\"\n                    disabled={summaryAreaDisabled}\n                  ></textarea>\n                  <div class=\"summary-actions\">\n                    <div class=\"summary-buttons\">\n                      <button\n                        class=\"action-btn summary-generate\"\n                        on:click|preventDefault={onGenerateSummary}\n                        title={summaryButtonLabel}\n                        aria-label={summaryButtonLabel}\n                        disabled={summaryGenerateDisabled}\n                      >\n                        <span class=\"codicon codicon-rocket\" aria-hidden=\"true\"></span>\n                        {summaryButtonLabel}\n                      </button>\n                      {#if timerActive && activeId === Number(it.id)}\n                        <button\n                          class=\"action-btn summary-apply\"\n                          on:click|preventDefault={onStopAndApplySummary}\n                          title=\"Stop timer and apply time entry with this summary\"\n                          aria-label=\"Stop timer and apply time entry with this summary\"\n                          disabled={summaryApplyDisabled}\n                        >\n                          <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                          Stop &amp; Apply\n                        </button>\n                      {:else}\n                        <button\n                          class=\"action-btn summary-apply\"\n                          on:click|preventDefault={() =>\n                            dispatch('applySummary', { workItemId: it.id })}\n                          title=\"Apply summary as comment\"\n                          aria-label=\"Apply summary as comment\"\n                          disabled={summaryBusy || !summaryDraft.trim()}\n                        >\n                          <span class=\"codicon codicon-check\" aria-hidden=\"true\"></span>\n                          Apply\n                        </button>\n                      {/if}\n                    </div>\n                    <div class=\"summary-helper\">{summaryHelperText}</div>\n                  </div>\n                  {#if summaryStatus}\n                    <div class=\"summary-status\" aria-live=\"polite\">{summaryStatus}</div>\n                  {/if}\n                </div>\n              {/if}\n\n              <div class=\"work-item-meta\">\n                <span class=\"work-item-type\">{it.fields?.['System.WorkItemType'] || 'Task'}</span>\n                <span class=\"work-item-state state-{normalizeState(it.fields?.['System.State'])}\"\n                  >{it.fields?.['System.State'] || 'New'}</span\n                >\n                <span class=\"work-item-assignee\">\n                  {#if it.fields?.['System.AssignedTo']}\n                    <span class=\"codicon codicon-account\" aria-hidden=\"true\"></span>\n                    {it.fields['System.AssignedTo'].displayName || it.fields['System.AssignedTo']}\n                  {:else}\n                    <span class=\"codicon codicon-account\" aria-hidden=\"true\"></span> Unassigned\n                  {/if}\n                </span>\n              </div>\n            </div>\n\n            <div class=\"work-item-actions\">\n              {#if timerActive && activeId === Number(it.id)}\n                <button\n                  class=\"action-btn stop\"\n                  on:click|stopPropagation={() => dispatch('stopTimer')}\n                  title=\"Stop timer\"\n                  aria-label={`Stop timer for #${it.id}`}\n                >\n                  <span class=\"codicon codicon-debug-stop\" aria-hidden=\"true\"></span> Stop\n                </button>\n              {:else}\n                <button\n                  class=\"action-btn start\"\n                  on:click|stopPropagation={() => dispatch('startItem', { id: it.id })}\n                  title=\"Start timer\"\n                  aria-label={`Start timer for #${it.id}`}\n                  disabled={timerActive}\n                >\n                  <span class=\"codicon codicon-play\" aria-hidden=\"true\"></span> Start\n                </button>\n              {/if}\n              <button\n                class=\"action-btn view\"\n                on:click|stopPropagation={() => dispatch('openItem', { id: it.id })}\n                title=\"View in browser\"\n                aria-label={`View work item #${it.id}`}\n              >\n                <span class=\"codicon codicon-eye\" aria-hidden=\"true\"></span> View\n              </button>\n              <button\n                class=\"action-btn edit\"\n                on:click|stopPropagation={() => dispatch('editItem', { id: it.id })}\n                title=\"Edit work item\"\n                aria-label={`Edit work item #${it.id}`}\n              >\n                <span class=\"codicon codicon-edit\" aria-hidden=\"true\"></span> Edit\n              </button>\n              <button\n                class=\"action-btn comment\"\n                on:click|stopPropagation={() => dispatch('commentItem', { id: it.id })}\n                title=\"Add comment\"\n                aria-label={`Add comment to #${it.id}`}\n              >\n                <span class=\"codicon codicon-comment\" aria-hidden=\"true\"></span> Comment\n              </button>\n            </div>\n          </div>\n        {/each}\n      </div>\n    {:else}\n      <div class=\"empty\">No work items to display.</div>\n    {/if}\n  </div>\n  <Toasts ariaLabel=\"Work item notifications\" />\n</div>\n\n<style>\n  .pane {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    background: var(--vscode-editor-background);\n    color: var(--vscode-editor-foreground);\n    font-family: var(--vscode-font-family);\n  }\n\n  /* Connection Tabs */\n  .connection-tabs {\n    display: flex;\n    background: var(--vscode-tab-inactiveBackground);\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    overflow-x: auto;\n    flex-shrink: 0;\n  }\n\n  .connection-tab {\n    padding: 8px 16px;\n    background: var(--vscode-tab-inactiveBackground);\n    color: var(--vscode-tab-inactiveForeground);\n    border: none;\n    border-right: 1px solid var(--vscode-editorWidget-border);\n    cursor: pointer;\n    font-size: 13px;\n    font-family: var(--vscode-font-family);\n    white-space: nowrap;\n    transition: all 0.2s ease;\n  }\n\n  .connection-tab:hover {\n    background: var(--vscode-tab-hoverBackground);\n    color: var(--vscode-tab-hoverForeground);\n  }\n\n  .connection-tab.active {\n    background: var(--vscode-tab-activeBackground);\n    color: var(--vscode-tab-activeForeground);\n    border-bottom: 2px solid var(--vscode-tab-activeBorder, var(--ado-blue));\n  }\n\n  .connection-tab:focus {\n    outline: 1px solid var(--vscode-focusBorder);\n    outline-offset: -1px;\n  }\n\n  .query-header {\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    background: var(--vscode-editorGroupHeader-tabsBackground);\n    flex-shrink: 0;\n  }\n\n  .pane-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 12px;\n    padding: 8px 12px;\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    background: var(--vscode-editorGroupHeader-tabsBackground);\n    color: var(--vscode-editor-foreground);\n    flex-shrink: 0;\n  }\n\n  .muted {\n    opacity: 0.7;\n  }\n  .count {\n    margin-left: auto;\n    opacity: 0.85;\n  }\n  .actions {\n    display: inline-flex;\n    gap: 6px;\n  }\n  .filters {\n    display: inline-flex;\n    gap: 6px;\n    align-items: center;\n    margin-left: 8px;\n    flex-wrap: wrap;\n  }\n\n  /* Query Selector Styles */\n  .query-selector-container {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    min-width: 300px;\n    max-width: 500px;\n    width: 100%;\n  }\n\n  .query-selector-label {\n    font-size: 12px;\n    font-weight: 600;\n    color: var(--vscode-foreground);\n    margin-bottom: 2px;\n  }\n\n  .query-selector {\n    font-size: 13px;\n    padding: 6px 8px;\n    border: 1px solid var(--vscode-input-border);\n    background-color: var(--vscode-input-background);\n    color: var(--vscode-input-foreground);\n    border-radius: 3px;\n    transition: border-color 0.2s ease;\n  }\n\n  .query-selector:focus {\n    outline: none;\n    border-color: var(--vscode-focusBorder);\n    box-shadow: 0 0 0 1px var(--vscode-focusBorder);\n  }\n\n  .query-selector:hover {\n    border-color: var(--vscode-inputOption-hoverBorder);\n  }\n\n  .query-description {\n    font-size: 11px;\n    color: var(--vscode-descriptionForeground);\n    line-height: 1.3;\n    margin-top: 2px;\n    min-height: 14px;\n    opacity: 0.8;\n  }\n  .filters input,\n  .filters select {\n    font-size: 11px;\n    padding: 4px 8px;\n    background: var(--vscode-input-background);\n    color: var(--vscode-input-foreground);\n    border: 1px solid var(--vscode-input-border);\n    border-radius: 3px;\n  }\n\n  .spinner {\n    width: 12px;\n    height: 12px;\n    border: 2px solid var(--vscode-editorWidget-border);\n    border-top-color: var(--ado-blue);\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    display: inline-block;\n    margin-left: 6px;\n  }\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  button {\n    font-size: 11px;\n    padding: 4px 8px;\n    color: var(--vscode-button-foreground);\n    background: var(--ado-blue);\n    border: 1px solid transparent;\n    border-radius: 3px;\n    cursor: pointer;\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n    font-family: var(--vscode-font-family);\n  }\n\n  button:hover {\n    background: var(--ado-blue-light);\n  }\n  button[disabled] {\n    opacity: 0.5;\n    cursor: default;\n    filter: grayscale(0.2);\n  }\n\n  .pane-body {\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .work-item-summary {\n    margin: 8px 0;\n    padding: 8px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 4px;\n    background: var(--vscode-editorWidget-background);\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .summary-panel {\n    margin: 12px;\n    padding: 12px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    background: var(--vscode-editorWidget-background);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  .summary-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 12px;\n  }\n\n  .summary-header-actions {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n  .summary-context {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 12px;\n    flex-wrap: wrap;\n  }\n  .summary-target-label {\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.04em;\n    font-size: 10px;\n    color: var(--vscode-descriptionForeground, #888);\n  }\n  .summary-target-value {\n    font-weight: 600;\n    color: var(--vscode-editor-foreground);\n    background: rgba(0, 120, 212, 0.12);\n    padding: 2px 6px;\n    border-radius: 12px;\n  }\n  .summary-provider-badge {\n    font-size: 10px;\n    text-transform: uppercase;\n    padding: 2px 6px;\n    border-radius: 10px;\n    background: rgba(92, 45, 145, 0.2);\n    color: var(--ado-purple);\n    font-weight: 600;\n  }\n  .summary-target-timer {\n    font-size: 10px;\n    color: var(--ado-orange);\n    background: rgba(255, 140, 0, 0.18);\n    padding: 2px 6px;\n    border-radius: 10px;\n    border: 1px solid rgba(255, 140, 0, 0.35);\n  }\n  .summary-textarea {\n    width: 100%;\n    min-height: 120px;\n    resize: vertical;\n    padding: 8px;\n    border: 1px solid var(--vscode-input-border);\n    border-radius: 4px;\n    background: var(--vscode-input-background);\n    color: var(--vscode-input-foreground);\n    font-size: 12px;\n    font-family: var(--vscode-font-family);\n  }\n  .summary-textarea:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  .summary-actions {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    gap: 12px;\n    flex-wrap: wrap;\n  }\n  .summary-buttons {\n    display: inline-flex;\n    gap: 8px;\n  }\n  .summary-helper {\n    font-size: 11px;\n    opacity: 0.75;\n    max-width: 320px;\n  }\n  .summary-generate {\n    background: var(--ado-blue);\n    color: #fff;\n    border-color: var(--ado-blue);\n  }\n  .summary-generate:hover {\n    background: var(--ado-blue-light);\n  }\n  .summary-apply {\n    background: var(--ado-green);\n    color: #fff;\n    border-color: var(--ado-green);\n  }\n  .summary-apply:hover {\n    background: rgba(16, 124, 16, 0.85);\n  }\n  .summary-status,\n  .summary-status-inline {\n    font-size: 11px;\n    background: rgba(0, 120, 212, 0.12);\n    color: var(--ado-blue);\n    border-radius: 4px;\n    padding: 6px 8px;\n    margin-top: 2px;\n  }\n  .summary-status-inline {\n    margin: 8px 12px 0 12px;\n  }\n  .spinner.inline {\n    width: 10px;\n    height: 10px;\n    border-width: 2px;\n  }\n\n  .empty {\n    padding: 20px;\n    font-size: 14px;\n    opacity: 0.7;\n    text-align: center;\n  }\n\n  .loading {\n    padding: 20px;\n    font-size: 14px;\n    opacity: 0.9;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    justify-content: center;\n  }\n\n  .error-banner {\n    margin: 8px;\n    padding: 12px;\n    border: 2px solid var(--ado-red);\n    border-radius: 4px;\n    background: rgba(209, 52, 56, 0.15);\n    color: var(--ado-red);\n    font-weight: 500;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    max-width: 100%;\n    border-radius: 4px;\n    font-size: 12px;\n  }\n\n  .auth-reminders {\n    margin: 12px 0;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .auth-reminder {\n    display: flex;\n    gap: 12px;\n    align-items: flex-start;\n    padding: 12px 14px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    background: var(--vscode-editorWidget-background);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.35);\n  }\n\n  .auth-reminder-icon {\n    font-size: 20px;\n    line-height: 1;\n    margin-top: 2px;\n  }\n\n  .auth-reminder-body {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n\n  .auth-reminder-title {\n    font-weight: 600;\n    font-size: 13px;\n  }\n\n  .auth-reminder-detail {\n    font-size: 12px;\n    line-height: 1.4;\n    color: var(--vscode-editor-foreground);\n    opacity: 0.9;\n    white-space: pre-wrap;\n  }\n\n  .auth-reminder-actions {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n  }\n\n  .auth-reminder-actions .primary,\n  .auth-reminder-actions .secondary {\n    border: none;\n    border-radius: 4px;\n    padding: 6px 12px;\n    font-size: 12px;\n    cursor: pointer;\n    transition: background 120ms ease;\n  }\n\n  .auth-reminder-actions .primary {\n    background: var(--vscode-button-background);\n    color: var(--vscode-button-foreground);\n  }\n\n  .auth-reminder-actions .primary:hover {\n    background: var(--vscode-button-hoverBackground);\n  }\n\n  .auth-reminder-actions .secondary {\n    background: transparent;\n    color: var(--vscode-editor-foreground);\n    border: 1px solid var(--vscode-editorWidget-border);\n  }\n\n  .auth-reminder-actions .secondary:hover {\n    background: var(--vscode-toolbar-hoverBackground);\n  }\n\n  @media (min-width: 800px) {\n    .auth-reminder-actions {\n      flex-direction: row;\n      align-items: center;\n    }\n  }\n\n  /* Bulk Actions Toolbar */\n  .bulk-actions-toolbar {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 8px 12px;\n    background: var(--ado-blue-dark);\n    border-bottom: 2px solid var(--ado-blue);\n    animation: slideDown 0.2s ease-out;\n  }\n\n  @keyframes slideDown {\n    from {\n      opacity: 0;\n      transform: translateY(-10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  .selected-count {\n    font-weight: 600;\n    color: white;\n    margin-right: 8px;\n  }\n\n  .bulk-btn {\n    padding: 4px 12px;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    border-radius: 3px;\n    background: rgba(255, 255, 255, 0.1);\n    color: white;\n    font-size: 12px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    transition: all 0.2s;\n  }\n\n  .bulk-btn:hover {\n    background: rgba(255, 255, 255, 0.2);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n\n  .bulk-btn.danger {\n    background: rgba(209, 52, 56, 0.2);\n    border-color: var(--ado-red);\n  }\n\n  .bulk-btn.danger:hover {\n    background: rgba(209, 52, 56, 0.4);\n  }\n\n  .bulk-btn.secondary {\n    background: transparent;\n    border-color: rgba(255, 255, 255, 0.2);\n  }\n\n  .selected-badge {\n    background: var(--ado-orange);\n    color: white;\n    padding: 2px 8px;\n    border-radius: 10px;\n    font-size: 11px;\n    font-weight: 600;\n    margin-left: 8px;\n  }\n\n  /* Work Item Checkbox */\n  .work-item-checkbox {\n    width: 16px;\n    height: 16px;\n    margin-right: 8px;\n    cursor: pointer;\n    accent-color: var(--ado-blue);\n  }\n\n  .work-item-card.selected {\n    background: rgba(0, 120, 212, 0.1);\n    border-left: 3px solid var(--ado-blue);\n  }\n\n  .kanban-card.selected {\n    box-shadow: 0 0 0 2px var(--ado-blue);\n  }\n\n  /* Work Item Cards */\n  .items {\n    padding: 8px;\n    overflow-y: auto;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .work-item-card {\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 4px;\n    background: var(--vscode-editor-background);\n    cursor: pointer;\n    transition: all 0.2s ease;\n    position: relative;\n  }\n\n  .work-item-card:hover {\n    background: var(--vscode-list-hoverBackground);\n    border-color: var(--ado-blue);\n    box-shadow: 0 2px 8px rgba(0, 120, 212, 0.1);\n  }\n\n  .work-item-card.has-active-timer {\n    border-left: 3px solid var(--ado-orange);\n  }\n\n  .work-item-card.focused {\n    outline: 2px solid var(--vscode-focusBorder);\n    outline-offset: 2px;\n    background: var(--vscode-list-activeSelectionBackground);\n    border-color: var(--vscode-focusBorder);\n  }\n\n  .work-item-card.selected {\n    background: var(--vscode-list-selectionBackground);\n    border-color: var(--vscode-list-selectionBackground);\n  }\n\n  .work-item-card.focused.selected {\n    background: var(--vscode-list-activeSelectionBackground);\n    border-color: var(--vscode-focusBorder);\n  }\n\n  .work-item-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 8px;\n  }\n\n  .work-item-type-icon {\n    font-family: 'codicon';\n    font-size: 16px;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    flex-shrink: 0;\n    color: var(--ado-blue);\n  }\n\n  .work-item-id {\n    background: var(--vscode-badge-background);\n    color: var(--vscode-badge-foreground);\n    padding: 2px 6px;\n    border-radius: 10px;\n    font-size: 10px;\n    font-weight: 600;\n  }\n\n  .work-item-priority {\n    margin-left: auto;\n    font-size: 14px;\n    font-weight: 600;\n  }\n\n  .priority-1 {\n    color: var(--ado-red);\n  }\n  .priority-2 {\n    color: var(--ado-orange);\n  }\n  .priority-3 {\n    color: var(--ado-blue);\n  }\n  .priority-4 {\n    color: var(--ado-gray);\n  }\n\n  .work-item-content {\n    flex: 1;\n    margin-bottom: 8px;\n  }\n\n  .work-item-title {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 1.3;\n    margin-bottom: 6px;\n    color: var(--vscode-editor-foreground);\n  }\n\n  .work-item-desc {\n    font-size: 11px;\n    line-height: 1.3;\n    margin-bottom: 6px;\n    opacity: 0.75;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-break: break-word;\n  }\n\n  .work-item-meta {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    align-items: center;\n    font-size: 11px;\n    margin-bottom: 8px;\n  }\n\n  .work-item-type {\n    padding: 2px 6px;\n    background: var(--vscode-badge-background);\n    color: var(--vscode-badge-foreground);\n    border-radius: 10px;\n    font-size: 10px;\n    font-weight: 500;\n  }\n\n  .work-item-state {\n    padding: 2px 6px;\n    border-radius: 10px;\n    font-size: 10px;\n    font-weight: 500;\n    text-transform: uppercase;\n  }\n\n  .state-todo,\n  .state-new {\n    background: rgba(0, 120, 212, 0.2);\n    color: var(--state-new);\n  }\n  .state-active,\n  .state-inprogress,\n  .state-doing {\n    background: rgba(255, 140, 0, 0.2);\n    color: var(--state-active);\n  }\n  .state-resolved,\n  .state-done,\n  .state-closed {\n    background: rgba(16, 124, 16, 0.2);\n    color: var(--state-resolved);\n  }\n  .state-removed {\n    background: rgba(209, 52, 56, 0.2);\n    color: var(--state-removed);\n  }\n  .state-review {\n    background: rgba(92, 45, 145, 0.2);\n    color: var(--ado-purple);\n  }\n\n  .timer-indicator {\n    background: rgba(255, 140, 0, 0.2);\n    color: var(--ado-orange);\n    padding: 2px 6px;\n    border-radius: 4px;\n    font-size: 10px;\n    font-weight: 600;\n    border: 1px solid rgba(255, 140, 0, 0.3);\n    animation: pulse 2s infinite;\n  }\n\n  @keyframes pulse {\n    0%,\n    100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.7;\n    }\n  }\n\n  .work-item-actions {\n    display: flex;\n    gap: 4px;\n    align-items: center;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n\n  .work-item-card:hover .work-item-actions {\n    opacity: 1;\n  }\n\n  .action-btn {\n    padding: 6px 8px;\n    background: var(--vscode-button-secondaryBackground);\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 3px;\n    cursor: pointer;\n    font-size: 11px;\n    transition: all 0.1s ease;\n    color: var(--vscode-button-secondaryForeground);\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n    font-family: 'codicon';\n  }\n\n  .action-btn:hover {\n    background: var(--vscode-button-secondaryHoverBackground);\n    border-color: var(--ado-blue);\n  }\n\n  .action-btn.start {\n    background: var(--ado-green);\n    color: white;\n    border-color: var(--ado-green);\n  }\n  .action-btn.start:hover {\n    background: rgba(16, 124, 16, 0.8);\n  }\n\n  .action-btn.stop {\n    background: var(--ado-red);\n    color: white;\n    border-color: var(--ado-red);\n  }\n  .action-btn.stop:hover {\n    background: rgba(209, 52, 56, 0.8);\n  }\n\n  .action-btn.view {\n    background: var(--ado-blue);\n    color: white;\n    border-color: var(--ado-blue);\n  }\n  .action-btn.view:hover {\n    background: var(--ado-blue-light);\n  }\n\n  .action-btn.edit {\n    background: var(--ado-purple);\n    color: white;\n    border-color: var(--ado-purple);\n  }\n  .action-btn.edit:hover {\n    background: rgba(92, 45, 145, 0.8);\n  }\n\n  .action-btn.comment {\n    background: var(--ado-gray);\n    color: white;\n    border-color: var(--ado-gray);\n  }\n  .action-btn.comment:hover {\n    background: var(--ado-gray-light);\n  }\n\n  .action-btn.cancel {\n    background: #dc3545;\n    color: white;\n    border-color: #dc3545;\n  }\n\n  .action-btn.cancel:hover {\n    background: #c82333;\n    border-color: #bd2130;\n  }\n\n  /* Kanban styles */\n  .kanban-board {\n    display: flex;\n    gap: 12px;\n    padding: 8px;\n    overflow-x: auto;\n    flex: 1;\n  }\n\n  .kanban-column {\n    min-width: 280px;\n    max-width: 320px;\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    background: var(--vscode-editorWidget-background);\n    display: flex;\n    flex-direction: column;\n  }\n\n  .kanban-column-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 12px;\n    border-bottom: 1px solid var(--vscode-editorWidget-border);\n    background: var(--vscode-editorGroupHeader-tabsBackground);\n    border-top: 3px solid transparent;\n  }\n\n  .kanban-column-header h3 {\n    font-size: 13px;\n    font-weight: 600;\n    margin: 0;\n  }\n\n  .item-count {\n    background: var(--vscode-badge-background);\n    color: var(--vscode-badge-foreground);\n    padding: 2px 6px;\n    border-radius: 10px;\n    font-size: 11px;\n    font-weight: 600;\n  }\n\n  .kanban-column-content {\n    padding: 8px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    overflow-y: auto;\n    flex: 1;\n  }\n\n  .kanban-card {\n    border: 1px solid var(--vscode-editorWidget-border);\n    border-radius: 6px;\n    padding: 10px;\n    background: var(--vscode-editor-background);\n    border-left: 3px solid transparent;\n    cursor: pointer;\n    transition: all 0.2s ease;\n  }\n\n  .kanban-card:hover {\n    background: var(--vscode-list-hoverBackground);\n    border-color: var(--ado-blue);\n  }\n\n  .kanban-card .title {\n    font-weight: 600;\n    margin-bottom: 4px;\n    color: var(--vscode-editor-foreground);\n    font-size: 13px;\n  }\n\n  .kanban-card .meta {\n    font-size: 11px;\n    opacity: 0.8;\n    margin-bottom: 6px;\n  }\n\n  .kanban-card .actions {\n    display: inline-flex;\n    gap: 4px;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n\n  .kanban-card:hover .actions {\n    opacity: 1;\n  }\n\n  /* Column header accents by state */\n  .kanban-column.state-todo .kanban-column-header {\n    border-top-color: var(--state-new);\n  }\n  .kanban-column.state-active .kanban-column-header {\n    border-top-color: var(--state-active);\n  }\n  .kanban-column.state-inprogress .kanban-column-header {\n    border-top-color: var(--state-active);\n  }\n  .kanban-column.state-review .kanban-column-header {\n    border-top-color: var(--ado-purple);\n  }\n  .kanban-column.state-resolved .kanban-column-header {\n    border-top-color: var(--state-resolved);\n  }\n  .kanban-column.state-done .kanban-column-header {\n    border-top-color: var(--state-resolved);\n  }\n  .kanban-column.state-removed .kanban-column-header {\n    border-top-color: var(--state-removed);\n  }\n\n  /* Card accents by state */\n  .kanban-card.state-todo {\n    border-left-color: var(--state-new);\n  }\n  .kanban-card.state-active {\n    border-left-color: var(--state-active);\n  }\n  .kanban-card.state-inprogress {\n    border-left-color: var(--state-active);\n  }\n  .kanban-card.state-review {\n    border-left-color: var(--ado-purple);\n  }\n  .kanban-card.state-resolved {\n    border-left-color: var(--state-resolved);\n  }\n  .kanban-card.state-done {\n    border-left-color: var(--state-resolved);\n  }\n  .kanban-card.state-removed {\n    border-left-color: var(--state-removed);\n  }\n\n  /* Compact action buttons for kanban view */\n  .action-btn.compact {\n    min-width: 28px;\n    padding: 4px 6px;\n    font-size: 12px;\n  }\n\n  .kanban-card .work-item-actions {\n    justify-content: center;\n    gap: 4px;\n  }\n\n  .kanban-card .work-item-header {\n    margin-bottom: 6px;\n  }\n\n  .kanban-card .work-item-content {\n    margin-bottom: 8px;\n  }\n\n  /* Timer indicator adjustments for kanban */\n  .kanban-card .timer-indicator {\n    font-size: 10px;\n    margin-left: auto;\n  }\n</style>\n"],
  "mappings": "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",
  "names": []
}

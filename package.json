{
  "name": "azuredevops-integration-extension",
  "displayName": "Azure DevOps Integration for VS Code",
  "description": "Integrate Azure DevOps work items, time tracking, and Git workflows directly in VS Code. Manage tasks, track time, create branches, and submit pull requests without leaving your editor.",
  "version": "1.10.0",
  "type": "module",
  "publisher": "PluresLLC",
  "icon": "media/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/plures/azuredevops-integration-extension"
  },
  "bugs": {
    "url": "https://github.com/plures/azuredevops-integration-extension/issues"
  },
  "homepage": "https://github.com/plures/azuredevops-integration-extension#readme",
  "license": "MIT",
  "galleryBanner": {
    "color": "#0078D4",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "azure",
    "devops",
    "work items",
    "time tracking",
    "git",
    "integration",
    "productivity",
    "project management"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.cjs",
  "files": [
    "dist/**",
    "media/webview/**",
    "images/*.png",
    "images/*.gif",
    "media/icon.png",
    "media/workitems-icon.svg",
    "media/generated-icons/**",
    "README.md",
    "LICENSE.txt",
    "CHANGELOG.md",
    "NOTICE.md"
  ],
  "contributes": {
    "commands": [
      {
        "command": "azureDevOpsInt.setup",
        "title": "Setup or Manage Connections",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.openLogs",
        "title": "Open Logs",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.copyLogsToClipboard",
        "title": "Copy Logs to Clipboard",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.diagnoseWorkItems",
        "title": "Diagnose Work Items Issue",
        "category": "Azure DevOps Int",
        "icon": "$(search)"
      },
      {
        "command": "azureDevOpsInt.openLogsFolder",
        "title": "Open Logs Folder (VS Code)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.showWorkItems",
        "title": "Show Work Items",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.focusWorkItemsView",
        "title": "Focus Work Items View",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.refreshWorkItems",
        "title": "Refresh Work Items",
        "icon": "$(refresh)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.debugConnections",
        "title": "Debug Connection Configuration",
        "icon": "$(bug)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.createWorkItem",
        "title": "Create Work Item",
        "icon": "$(add)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.editWorkItem",
        "title": "Edit Work Item",
        "icon": "$(edit)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.startTimer",
        "title": "Start/Stop Timer",
        "icon": "$(play)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.pauseTimer",
        "title": "Pause Timer",
        "icon": "$(debug-pause)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.resumeTimer",
        "title": "Resume Timer",
        "icon": "$(debug-continue)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.stopTimer",
        "title": "Stop Timer",
        "icon": "$(debug-stop)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.showTimeReport",
        "title": "Show Time Report",
        "icon": "$(watch)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.createBranch",
        "title": "Create Branch from Work Item",
        "icon": "$(git-branch)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.createPullRequest",
        "title": "Create Pull Request",
        "icon": "$(git-pull-request)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.showPullRequests",
        "title": "Show My Pull Requests",
        "icon": "$(git-pull-request)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.openWorkItemInBrowser",
        "title": "Open in Browser",
        "icon": "$(globe)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.toggleKanbanView",
        "title": "Toggle Kanban View",
        "category": "Azure DevOps Int",
        "icon": "$(layout-panel)"
      },
      {
        "command": "azureDevOpsInt.selectTeam",
        "title": "Select Team",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.resetPreferredRepositories",
        "title": "Reset Preferred Repositories",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.showBuildStatus",
        "title": "Show Build Status",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.setOpenAIApiKey",
        "title": "Set OpenAI API Key",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.signInWithEntra",
        "title": "Sign In with Microsoft Entra ID",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.signOutEntra",
        "title": "Sign Out (Entra ID)",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.forceAuthReset",
        "title": "Force Authentication Reset",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.convertConnectionToEntra",
        "title": "Convert Connection to Entra ID Auth",
        "category": "Azure DevOps Int"
      },
      {
        "command": "azureDevOpsInt.clearFilter",
        "title": "Clear All Filters",
        "category": "Azure DevOps Int",
        "icon": "$(clear-all)"
      },
      {
        "command": "azureDevOpsInt.focusSearch",
        "title": "Focus Search Box",
        "category": "Azure DevOps Int",
        "icon": "$(search)"
      },
      {
        "command": "azureDevOpsInt.showPerformanceDashboard",
        "title": "Show Performance Dashboard",
        "category": "Azure DevOps Int",
        "icon": "$(graph)"
      },
      {
        "command": "azureDevOpsInt.clearPerformanceData",
        "title": "Clear Performance Data",
        "category": "Azure DevOps Int",
        "icon": "$(trash)"
      },
      {
        "command": "azureDevOpsInt.forceGC",
        "title": "Force Garbage Collection",
        "category": "Azure DevOps Int",
        "icon": "$(refresh)"
      },
      {
        "command": "azureDevOpsInt.bulkAssign",
        "title": "Bulk Assign Work Items",
        "category": "Azure DevOps Int",
        "icon": "$(person-add)"
      },
      {
        "command": "azureDevOpsInt.bulkMove",
        "title": "Bulk Move Work Items",
        "category": "Azure DevOps Int",
        "icon": "$(arrow-right)"
      },
      {
        "command": "azureDevOpsInt.bulkAddTags",
        "title": "Bulk Add Tags",
        "category": "Azure DevOps Int",
        "icon": "$(tag)"
      },
      {
        "command": "azureDevOpsInt.bulkDelete",
        "title": "Bulk Delete Work Items",
        "category": "Azure DevOps Int",
        "icon": "$(trash)"
      },
      {
        "command": "azureDevOpsInt.exportFilters",
        "title": "Export Filters to File",
        "category": "Azure DevOps Int",
        "icon": "$(export)"
      },
      {
        "command": "azureDevOpsInt.importFilters",
        "title": "Import Filters from File",
        "category": "Azure DevOps Int",
        "icon": "$(import)"
      },
      {
        "command": "azureDevOpsInt.manageFilters",
        "title": "Manage Saved Filters",
        "category": "Azure DevOps Int",
        "icon": "$(filter)"
      },
      {
        "command": "azureDevOpsInt.showQueryBuilder",
        "title": "Query Builder",
        "category": "Azure DevOps Int",
        "icon": "$(search)"
      },
      {
        "command": "azureDevOpsInt.showFSMStatus",
        "title": "Show FSM Status",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(debug)"
      },
      {
        "command": "azureDevOpsInt.showFSMTraceStatus",
        "title": "Show FSM Trace Status",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(history)"
      },
      {
        "command": "azureDevOpsInt.exportFSMTrace",
        "title": "Export FSM Trace",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(export)"
      },
      {
        "command": "azureDevOpsInt.importFSMTrace",
        "title": "Import FSM Trace",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(import)"
      },
      {
        "command": "azureDevOpsInt.analyzeFSMTrace",
        "title": "Analyze FSM Trace",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(graph)"
      },
      {
        "command": "azureDevOpsInt.startFSMTraceSession",
        "title": "Start FSM Trace Session",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(record)"
      },
      {
        "command": "azureDevOpsInt.stopFSMTraceSession",
        "title": "Stop FSM Trace Session",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(stop)"
      },
      {
        "command": "azureDevOpsInt.showFSMTraceTimeline",
        "title": "Show FSM Trace Timeline",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(timeline-view)"
      },
      {
        "command": "azureDevOpsInt.quickDebug",
        "title": "🚨 Quick Debug Panel",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(bug)"
      },
      {
        "command": "azureDevOpsInt.showFSMLogs",
        "title": "Show FSM Logs NOW",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(output)"
      },
      {
        "command": "azureDevOpsInt.triageBrokenFeature",
        "title": "🔍 Triage Broken Feature",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(search-save)"
      },
      {
        "command": "azureDevOpsInt.toggleFSM",
        "title": "Toggle FSM Timer",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(gear)"
      },
      {
        "command": "azureDevOpsInt.validateTimerSync",
        "title": "Validate Timer Synchronization",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(sync)"
      },
      {
        "command": "azureDevOpsInt.configureLogging",
        "title": "Configure FSM Logging",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(settings-gear)"
      },
      {
        "command": "azureDevOpsInt.showFSMLogs",
        "title": "Show FSM Logs",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(output)"
      },
      {
        "command": "azureDevOpsInt.showApplicationFSMStatus",
        "title": "Show Application FSM Status",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(debug)"
      },
      {
        "command": "azureDevOpsInt.startApplicationFSMInspector",
        "title": "Start Application FSM Inspector",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(preview)"
      },
      {
        "command": "azureDevOpsInt.resetApplicationFSM",
        "title": "Reset Application FSM",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(refresh)"
      },
      {
        "command": "azureDevOpsInt.getFSMLogs",
        "title": "Get FSM Logs (Programmatic)",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(file-text)"
      },
      {
        "command": "azureDevOpsInt.exportFSMLogs",
        "title": "Export FSM Logs to Document",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(export)"
      },
      {
        "command": "azureDevOpsInt.showConnectionFSMStatus",
        "title": "Show Connection FSM Status",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(debug)"
      },
      {
        "command": "azureDevOpsInt.testConnectionFSM",
        "title": "Test Connection FSM",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(run-all)"
      },
      {
        "command": "azureDevOpsInt.validateConnectionSync",
        "title": "Validate Connection FSM Sync",
        "category": "Azure DevOps Int (Debug)",
        "icon": "$(sync)"
      }
    ],
    "keybindings": [
      {
        "command": "azureDevOpsInt.refreshWorkItems",
        "key": "r",
        "when": "view == azureDevOpsWorkItems"
      },
      {
        "command": "azureDevOpsInt.toggleKanbanView",
        "key": "v",
        "when": "view == azureDevOpsWorkItems"
      },
      {
        "command": "azureDevOpsInt.focusSearch",
        "key": "/",
        "when": "view == azureDevOpsWorkItems"
      }
    ],
    "views": {
      "azureDevOpsIntegration": [
        {
          "id": "azureDevOpsWorkItems",
          "name": "Work Items",
          "type": "webview",
          "icon": "$(checklist)",
          "contextualTitle": "Azure DevOps Work Items"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "azureDevOpsIntegration",
          "title": "Azure DevOps Integration",
          "icon": "media/workitems-icon.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "azureDevOpsWorkItems",
        "when": "!azureDevOpsInt.connected",
        "contents": "No Azure DevOps configuration found.\n[Setup or Manage Connections](command:azureDevOpsInt.setup)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "azureDevOpsInt.toggleKanbanView",
          "when": "view == azureDevOpsWorkItems",
          "group": "navigation@1"
        },
        {
          "command": "azureDevOpsInt.refreshWorkItems",
          "when": "view == azureDevOpsWorkItems",
          "group": "navigation"
        },
        {
          "command": "azureDevOpsInt.createWorkItem",
          "when": "view == azureDevOpsWorkItems",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "azureDevOpsInt.editWorkItem",
          "when": "view == azureDevOpsWorkItems && viewItem == workItem",
          "group": "inline"
        },
        {
          "command": "azureDevOpsInt.startTimer",
          "when": "view == azureDevOpsWorkItems && viewItem == workItem",
          "group": "inline"
        },
        {
          "command": "azureDevOpsInt.createBranch",
          "when": "view == azureDevOpsWorkItems && viewItem == workItem",
          "group": "git"
        },
        {
          "command": "azureDevOpsInt.createPullRequest",
          "when": "view == azureDevOpsWorkItems && viewItem == workItem",
          "group": "git"
        },
        {
          "command": "azureDevOpsInt.openWorkItemInBrowser",
          "when": "view == azureDevOpsWorkItems && viewItem == workItem",
          "group": "browser"
        }
      ]
    },
    "configuration": {
      "title": "Azure DevOps Integration",
      "properties": {
        "azureDevOpsIntegration.debugLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging to the 'Azure DevOps Integration' output channel"
        },
        "azureDevOpsIntegration.connections": {
          "type": "array",
          "default": [],
          "description": "Azure DevOps connections (JSON array of connection objects)",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the connection"
              },
              "organization": {
                "type": "string",
                "description": "Azure DevOps organization name"
              },
              "project": {
                "type": "string",
                "description": "Azure DevOps project name"
              },
              "label": {
                "type": "string",
                "description": "Optional display label for the connection"
              },
              "team": {
                "type": "string",
                "description": "Optional team name"
              },
              "authMethod": {
                "type": "string",
                "enum": [
                  "pat",
                  "entra"
                ],
                "default": "pat",
                "description": "Authentication method: 'pat' for Personal Access Token or 'entra' for Microsoft Entra ID"
              },
              "patKey": {
                "type": "string",
                "description": "Key for storing PAT in secrets (for PAT authentication)"
              },
              "tenantId": {
                "type": "string",
                "description": "Azure AD tenant ID (for Entra ID authentication, optional - defaults to 'organizations')"
              },
              "baseUrl": {
                "type": "string",
                "description": "Base URL for the Azure DevOps instance (e.g., https://dev.azure.com/org or https://org.visualstudio.com)"
              },
              "apiBaseUrl": {
                "type": "string",
                "description": "API base URL override (optional). If not specified, will be derived from baseUrl/organization/project. Format: {baseUrl}/{project}/_apis"
              },
              "identityName": {
                "type": "string",
                "description": "Optional identity name for on-prem servers where @Me may not resolve (email, domain\\user, etc.)"
              }
            },
            "required": [
              "id",
              "organization",
              "project"
            ]
          }
        },
        "azureDevOpsIntegration.defaultElapsedLimitHours": {
          "type": "number",
          "default": 3.5,
          "minimum": 0.1,
          "maximum": 24,
          "description": "Default maximum hours for time tracking sessions (0.1-24 hours)"
        },
        "azureDevOpsIntegration.apiRatePerSecond": {
          "type": "number",
          "default": 2,
          "minimum": 0.1,
          "maximum": 10,
          "description": "API request rate limit (requests per second)"
        },
        "azureDevOpsIntegration.apiBurst": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "description": "API burst limit (maximum requests in burst)"
        },
        "azureDevOpsIntegration.workItemsPerPage": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "Number of work items to fetch per page"
        },
        "azureDevOpsIntegration.refreshIntervalMinutes": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 60,
          "description": "Auto-refresh interval in minutes"
        },
        "azureDevOpsIntegration.enableAutoRefresh": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic refresh of work items"
        },
        "azureDevOpsIntegration.enableTimeTracking": {
          "type": "boolean",
          "default": true,
          "description": "Enable time tracking features"
        },
        "azureDevOpsIntegration.enableBranchCreation": {
          "type": "boolean",
          "default": true,
          "description": "Enable branch creation from work items"
        },
        "azureDevOpsIntegration.enablePullRequestCreation": {
          "type": "boolean",
          "default": true,
          "description": "Enable pull request creation features"
        },
        "azureDevOpsIntegration.workItemQuery": {
          "type": "string",
          "default": "SELECT [System.Id], [System.Title], [System.State], [System.AssignedTo], [System.WorkItemType] FROM WorkItems WHERE [System.TeamProject] = @project AND [System.State] <> 'Closed' ORDER BY [System.CreatedDate] DESC",
          "description": "WIQL query for fetching work items"
        },
        "azureDevOpsIntegration.branchNameTemplate": {
          "type": "string",
          "default": "feature/{id}-{title}",
          "description": "Template for branch names created from work items"
        },
        "azureDevOpsIntegration.defaultWorkItemType": {
          "type": "string",
          "default": "Task",
          "description": "Default work item type for new items"
        },
        "azureDevOpsIntegration.showCompletedWorkItems": {
          "type": "boolean",
          "default": false,
          "description": "Show completed/closed work items in the list"
        },
        "azureDevOpsIntegration.summaryProvider": {
          "type": "string",
          "default": "builtin",
          "enum": [
            "builtin",
            "openai"
          ],
          "description": "Generate summaries using the built-in template or OpenAI (requires API key)."
        },
        "azureDevOpsIntegration.openAiModel": {
          "type": "string",
          "default": "gpt-4o-mini",
          "description": "OpenAI model identifier to use when summaryProvider is set to 'openai'."
        },
        "azureDevOpsIntegration.experimental.useFSM": {
          "type": "boolean",
          "default": true,
          "description": "Enable FSM (Finite State Machine) architecture for timer component"
        },
        "azureDevOpsIntegration.experimental.useApplicationFSM": {
          "type": "boolean",
          "default": true,
          "description": "Enable Application-wide FSM architecture (orchestrates all extension state management)"
        },
        "azureDevOpsIntegration.experimental.useConnectionFSM": {
          "type": "boolean",
          "default": true,
          "description": "Enable Connection FSM (replaces ensureActiveConnection logic with state machines)"
        },
        "azureDevOpsIntegration.experimental.fsmComponents": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "timer",
              "connection",
              "webview",
              "messaging"
            ]
          },
          "default": [],
          "description": "List of components to use FSM for (requires useFSM to be true)"
        },
        "azureDevOpsIntegration.experimental.enableFSMInspector": {
          "type": "boolean",
          "default": false,
          "description": "Enable FSM visual inspector for development and debugging"
        },
        "azureDevOpsIntegration.logging.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable FSM-integrated logging system"
        },
        "azureDevOpsIntegration.logging.level": {
          "type": "string",
          "enum": [
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR",
            "OFF"
          ],
          "default": "INFO",
          "description": "Minimum log level to output (DEBUG < INFO < WARN < ERROR < OFF)"
        },
        "azureDevOpsIntegration.logging.components": {
          "type": "object",
          "properties": {
            "APPLICATION": {
              "type": "boolean",
              "default": true,
              "description": "Log Application FSM activities"
            },
            "CONNECTION": {
              "type": "boolean",
              "default": true,
              "description": "Log Connection FSM activities"
            },
            "TIMER": {
              "type": "boolean",
              "default": true,
              "description": "Log Timer FSM activities"
            },
            "WEBVIEW": {
              "type": "boolean",
              "default": false,
              "description": "Log Webview FSM activities"
            },
            "AUTH": {
              "type": "boolean",
              "default": true,
              "description": "Log Authentication FSM activities"
            },
            "DATA": {
              "type": "boolean",
              "default": false,
              "description": "Log Data FSM activities"
            },
            "ADAPTER": {
              "type": "boolean",
              "default": false,
              "description": "Log FSM Adapter activities"
            },
            "MACHINE": {
              "type": "boolean",
              "default": false,
              "description": "Log individual State Machine activities"
            }
          },
          "default": {
            "APPLICATION": true,
            "CONNECTION": true,
            "TIMER": true,
            "WEBVIEW": false,
            "AUTH": true,
            "DATA": false,
            "ADAPTER": false,
            "MACHINE": false
          },
          "description": "Enable/disable logging for specific FSM components"
        },
        "azureDevOpsIntegration.logging.destinations": {
          "type": "object",
          "properties": {
            "console": {
              "type": "boolean",
              "default": true,
              "description": "Output logs to developer console"
            },
            "outputChannel": {
              "type": "boolean",
              "default": true,
              "description": "Output logs to VS Code Output Channel"
            },
            "file": {
              "type": "boolean",
              "default": false,
              "description": "Output logs to file (future feature)"
            }
          },
          "default": {
            "console": true,
            "outputChannel": true,
            "file": false
          },
          "description": "Configure where logs are output"
        },
        "azureDevOpsIntegration.logging.includeTimestamp": {
          "type": "boolean",
          "default": true,
          "description": "Include timestamp in log entries"
        },
        "azureDevOpsIntegration.logging.includeStackTrace": {
          "type": "boolean",
          "default": false,
          "description": "Include stack trace for WARN and ERROR level logs"
        },
        "azureDevOpsIntegration.logging.maxLogEntries": {
          "type": "number",
          "default": 1000,
          "minimum": 100,
          "maximum": 10000,
          "description": "Maximum number of log entries to keep in memory buffer"
        },
        "azureDevOpsIntegration.logging.contextTracking": {
          "type": "boolean",
          "default": true,
          "description": "Include FSM context information (state, event, machine ID) in logs"
        },
        "azureDevOpsIntegration.entra.defaultClientId": {
          "type": "string",
          "default": "872cd9fa-d31f-45e0-9eab-6e460a02d1f1",
          "description": "Default Azure AD application (client) ID for Entra ID authentication. This is the Azure DevOps service principal client ID that works with Azure DevOps."
        },
        "azureDevOpsIntegration.entra.defaultTenantId": {
          "type": "string",
          "default": "organizations",
          "description": "Default Azure AD tenant ID for Entra ID authentication. Use 'organizations' for any work/school account, 'common' for any Microsoft account, or specify your tenant ID."
        },
        "azureDevOpsIntegration.entra.autoRefreshToken": {
          "type": "boolean",
          "default": true,
          "description": "Automatically refresh Entra ID access tokens before they expire"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "build:all": "npm run compile",
    "compile": "node esbuild.mjs",
    "watch": "node esbuild.mjs --watch",
    "pretest": "npm run compile",
    "test": "node scripts/run-esm-tests-cmd.mjs",
    "test:unit": "npm test",
    "test:integration": "node -e \"console.log('Integration tests temporarily disabled');\"",
    "test:ci": "npm run test && node -e \"console.log('Integration tests temporarily disabled');\"",
    "lint": "npx eslint src --ext ts",
    "lint:fix": "eslint --fix",
    "format:staged": "prettier --write",
    "format": "npx prettier --write \"**/*.{ts,js,json,md,mjs}\"",
    "check-format": "npx prettier --check \"**/*.{ts,js,json,md,mjs}\"",
    "prepare": "husky install",
    "postinstall": "npm run prepare",
    "build": "npm run compile",
    "build:formatted": "npm run format && npm run compile",
    "prepackage": "npm install && npm run format && npm run lint && npm run build:all && npm run screenshots:loading-gif",
    "package": "vsce package --no-dependencies",
    "screenshots:setup": "npx playwright install",
    "screenshots:build": "npm run build && npm run screenshots:capture",
    "screenshots:capture": "node scripts/screenshots/generate-screenshots.mjs",
    "screenshots:loading-gif": "node scripts/screenshots/generate-loading-sequence.mjs",
    "screenshots:watch": "node scripts/watch-screenshots.mjs"
  },
  "devDependencies": {
    "@commitlint/cli": "^20.1.0",
    "@commitlint/config-conventional": "^20.0.0",
    "@esbuild-kit/esm-loader": "^2.6.5",
    "@types/chai": "^5.2.2",
    "@types/mocha": "^10.0.10",
    "@types/nock": "^11.1.0",
    "@types/node": "24.x",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.2",
    "chai": "^6.2.0",
    "chokidar": "^4.0.3",
    "esbuild": "^0.25.11",
    "esbuild-svelte": "^0.9.3",
    "eslint": "^9.37.0",
    "gifenc": "^1.0.3",
    "husky": "^9.1.7",
    "lint-staged": "^16.2.4",
    "mocha": "^11.7.4",
    "nock": "^14.0.10",
    "playwright": "^1.56.0",
    "pngjs": "^7.0.0",
    "prettier": "^3.6.2",
    "svelte": "^5.40.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.3"
  },
  "dependencies": {
    "@azure/msal-node": "^3.8.0",
    "@statelyai/inspect": "^0.4.0",
    "@xstate/svelte": "^5.0.0",
    "axios": "^1.12.2",
    "azure-devops-node-api": "^15.1.1",
    "openai": "^6.4.0",
    "punycode": "^2.3.1",
    "sql.js": "^1.13.0",
    "xstate": "^5.23.0"
  },
  "volta": {
    "node": "24.10.0",
    "npm": "10.9.0"
  }
}

{
  "version": 3,
  "sources": ["../../src/webview/main.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-unused-vars */\n// Vanilla JavaScript implementation - reliable and framework-free\n\n// Declare global types for VS Code webview context\ndeclare global {\n  interface Window {\n    vscode?: any;\n    acquireVsCodeApi?: () => any;\n  }\n  const acquireVsCodeApi: () => any;\n}\n\n// Initialize VS Code API\nconst vscode = (() => {\n  try {\n    return window.vscode || acquireVsCodeApi();\n  } catch (e) {\n    console.error('[webview] Failed to acquire VS Code API', e);\n    return null;\n  }\n})();\n\n// Ensure all outbound messages go to the extension host via vscode.postMessage\nfunction postMessage(msg: any) {\n  try {\n    if (vscode && typeof (vscode as any).postMessage === 'function') {\n      (vscode as any).postMessage(msg);\n      return;\n    }\n    if (\n      typeof window !== 'undefined' &&\n      (window as any).vscode &&\n      typeof (window as any).vscode.postMessage === 'function'\n    ) {\n      (window as any).vscode.postMessage(msg);\n      return;\n    }\n    console.warn('[webview] vscode.postMessage not available; message not sent', msg);\n  } catch (err) {\n    console.error('[webview] Error posting message to extension', err, msg);\n  }\n}\n\n// State management\nlet workItems: any[] = [];\nlet currentTimer: any = null;\nlet selectedWorkItemId: number | null = null;\nlet isLoading = false;\nlet currentView: 'list' | 'kanban' = 'list';\n\n// DOM element references\nconst elements = {\n  searchInput: null as HTMLInputElement | null,\n  statusOverview: null as HTMLElement | null,\n  sprintFilter: null as HTMLSelectElement | null,\n  typeFilter: null as HTMLSelectElement | null,\n  assignedToFilter: null as HTMLSelectElement | null,\n  excludeDone: null as HTMLInputElement | null,\n  excludeClosed: null as HTMLInputElement | null,\n  excludeRemoved: null as HTMLInputElement | null,\n  excludeInReview: null as HTMLInputElement | null,\n  workItemsContainer: null as HTMLElement | null,\n  timerContainer: null as HTMLElement | null,\n  timerDisplay: null as HTMLElement | null,\n  timerTask: null as HTMLElement | null,\n  content: null as HTMLElement | null,\n  timerInfo: null as HTMLElement | null,\n  startTimerBtn: null as HTMLButtonElement | null,\n  pauseTimerBtn: null as HTMLButtonElement | null,\n  stopTimerBtn: null as HTMLButtonElement | null,\n  // New summary editor elements\n  draftSummary: null as HTMLTextAreaElement | null,\n  summaryContainer: null as HTMLElement | null,\n  toggleSummaryBtn: null as HTMLButtonElement | null,\n  summaryStatus: null as HTMLElement | null,\n};\n\n// Initialize the application\nfunction init() {\n  // Get DOM element references for new structure\n  elements.searchInput = document.getElementById('searchInput') as HTMLInputElement;\n  elements.statusOverview = document.getElementById('statusOverview');\n  elements.sprintFilter = document.getElementById('sprintFilter') as HTMLSelectElement;\n  elements.typeFilter = document.getElementById('typeFilter') as HTMLSelectElement;\n  elements.assignedToFilter = document.getElementById('assignedToFilter') as HTMLSelectElement;\n  elements.excludeDone = document.getElementById('excludeDone') as HTMLInputElement;\n  elements.excludeClosed = document.getElementById('excludeClosed') as HTMLInputElement;\n  elements.excludeRemoved = document.getElementById('excludeRemoved') as HTMLInputElement;\n  elements.excludeInReview = document.getElementById('excludeInReview') as HTMLInputElement;\n  elements.workItemsContainer = document.getElementById('workItemsContainer');\n  elements.timerContainer = document.getElementById('timerContainer');\n  elements.timerDisplay = document.getElementById('timerDisplay');\n  elements.timerInfo = document.getElementById('timerInfo');\n\n  // Timer button elements\n  const startTimerBtn = document.getElementById('startTimerBtn') as HTMLButtonElement;\n  const pauseTimerBtn = document.getElementById('pauseTimerBtn') as HTMLButtonElement;\n  const stopTimerBtn = document.getElementById('stopTimerBtn') as HTMLButtonElement;\n\n  (elements as any).startTimerBtn = startTimerBtn;\n  (elements as any).pauseTimerBtn = pauseTimerBtn;\n  (elements as any).stopTimerBtn = stopTimerBtn;\n  // Note: 'content' element is not required in new layout\n  elements.content = document.getElementById('content');\n\n  // New summary element references\n  elements.draftSummary = document.getElementById('draftSummary') as HTMLTextAreaElement;\n  elements.summaryContainer = document.getElementById('summaryContainer');\n  (elements as any).toggleSummaryBtn = document.getElementById(\n    'toggleSummaryBtn'\n  ) as HTMLButtonElement;\n  elements.summaryStatus = document.getElementById('summaryStatus');\n\n  if (!elements.workItemsContainer) {\n    console.error('[webview] Critical: workItemsContainer element not found');\n    return;\n  }\n\n  // Set up event listeners\n  console.log('[webview] Initializing webview...');\n  setupEventListeners();\n\n  // Set up message handling\n  setupMessageHandling();\n\n  // Ensure timer is hidden initially\n  console.log('[webview] Setting timer visibility to false during init');\n  updateTimerVisibility(false);\n\n  // Signal readiness to extension and request work items\n  postMessage({ type: 'webviewReady' });\n  requestWorkItems();\n}\n\nfunction setupEventListeners() {\n  // Event delegation for all buttons and clickable elements (from original pattern)\n  document.addEventListener('click', function (e) {\n    // Handle status badge clicks\n    const statusBadge = (e.target as HTMLElement).closest('.status-badge');\n    if (statusBadge) {\n      const status = statusBadge.getAttribute('data-status');\n      if (status) {\n        filterByStatus(status);\n      }\n      return;\n    }\n\n    // Handle work item card clicks\n    const workItemCard = (e.target as HTMLElement).closest('[data-action=\"selectWorkItem\"]');\n    if (workItemCard && !(e.target as HTMLElement).closest('button')) {\n      const id = parseInt(workItemCard.getAttribute('data-id') || '0');\n      selectWorkItem(id.toString());\n      return;\n    }\n\n    // Handle button clicks\n    const button = (e.target as HTMLElement).closest('button[data-action]');\n    if (!button) return;\n\n    e.stopPropagation(); // Prevent bubbling to work item card\n\n    const action = button.getAttribute('data-action');\n    const id = button.getAttribute('data-id')\n      ? parseInt(button.getAttribute('data-id') || '0')\n      : null;\n\n    console.log('[webview] Button clicked:', action, 'id:', id);\n\n    switch (action) {\n      case 'refresh':\n        requestWorkItems();\n        break;\n      case 'toggleSummary': {\n        const container = elements.summaryContainer;\n        const toggleBtn = (elements as any).toggleSummaryBtn as HTMLButtonElement | null;\n        if (!container) return;\n        const isHidden = container.hasAttribute('hidden');\n        if (isHidden) {\n          container.removeAttribute('hidden');\n          if (toggleBtn) toggleBtn.setAttribute('aria-expanded', 'true');\n          if (toggleBtn) toggleBtn.textContent = 'Compose Summary \u25B4';\n        } else {\n          container.setAttribute('hidden', '');\n          if (toggleBtn) toggleBtn.setAttribute('aria-expanded', 'false');\n          if (toggleBtn) toggleBtn.textContent = 'Compose Summary \u25BE';\n        }\n        break;\n      }\n      case 'generateCopilotPrompt': {\n        // Use current timer's work item id when available; otherwise try button id\n        const workItemId = id || (currentTimer ? currentTimer.workItemId : undefined);\n        const draft = elements.draftSummary ? elements.draftSummary.value : '';\n        if (!workItemId) {\n          console.warn('[webview] generateCopilotPrompt: no work item id available');\n          if (elements.summaryStatus)\n            elements.summaryStatus.textContent = 'No work item selected to generate prompt.';\n          return;\n        }\n        // Provide visual feedback\n        if (elements.summaryStatus)\n          elements.summaryStatus.textContent =\n            'Preparing Copilot prompt and copying to clipboard...';\n        postMessage({ type: 'generateCopilotPrompt', workItemId, draftSummary: draft });\n        break;\n      }\n      case 'stopAndApply': {\n        const draft = elements.draftSummary ? elements.draftSummary.value : '';\n        if (elements.summaryStatus)\n          elements.summaryStatus.textContent = 'Stopping timer and applying updates...';\n        postMessage({ type: 'stopAndApply', comment: draft });\n        break;\n      }\n      case 'createWorkItem':\n        postMessage({ type: 'createWorkItem' });\n        break;\n      case 'toggleView': {\n        console.log('[webview] toggleView clicked');\n        const viewBtn = e.target as HTMLElement;\n        const view = viewBtn.dataset.view as 'list' | 'kanban';\n        console.log('[webview] View button clicked:', view, 'Current view:', currentView);\n        if (view && view !== currentView) {\n          currentView = view;\n          updateViewToggle();\n          console.log('[webview] Switching to view:', currentView);\n          if (currentView === 'kanban') {\n            renderKanbanView();\n          } else {\n            renderWorkItems();\n          }\n        }\n        break;\n      }\n      case 'toggleKanban':\n        // Legacy support - toggle between views\n        currentView = currentView === 'list' ? 'kanban' : 'list';\n        updateViewToggle();\n        if (currentView === 'kanban') {\n          renderKanbanView();\n        } else {\n          renderWorkItems();\n        }\n        break;\n      case 'search': {\n        const query = elements.searchInput?.value;\n        if (query) {\n          postMessage({ type: 'search', query });\n        }\n        break;\n      }\n      case 'pauseTimer':\n        postMessage({ type: 'pauseTimer' });\n        break;\n      case 'resumeTimer':\n        postMessage({ type: 'resumeTimer' });\n        break;\n      case 'stopTimer':\n        postMessage({ type: 'stopTimer' });\n        break;\n      case 'startTimer': {\n        // Support toggle behavior everywhere the start button appears.\n        // If an id is provided, use it; otherwise fall back to selected work item or current timer.\n        const targetId =\n          id ?? selectedWorkItemId ?? (currentTimer ? Number(currentTimer.workItemId) : null);\n        if (targetId) {\n          if (currentTimer && Number(currentTimer.workItemId) === Number(targetId)) {\n            // Toggle: same item is running -> stop\n            postMessage({ type: 'stopTimer' });\n          } else {\n            postMessage({ type: 'startTimer', workItemId: Number(targetId) });\n          }\n        } else {\n          // No target available; optionally we could surface a hint here.\n          console.warn(\n            '[webview] startTimer requested but no work item is selected and no active timer'\n          );\n        }\n        break;\n      }\n      case 'createBranch':\n        if (id) postMessage({ type: 'createBranch', id });\n        break;\n      case 'openInBrowser':\n        if (id) postMessage({ type: 'openInBrowser', id });\n        break;\n      case 'copyId':\n        if (id) postMessage({ type: 'copyId', id });\n        break;\n      case 'viewDetails':\n        if (id) postMessage({ type: 'viewWorkItem', workItemId: id });\n        break;\n      case 'editWorkItem':\n        if (id) postMessage({ type: 'editWorkItemInEditor', workItemId: id });\n        break;\n      case 'addComment':\n        if (id) handleAddComment(id);\n        break;\n    }\n  });\n\n  // Event delegation for change events (filters)\n  document.addEventListener('change', function (e) {\n    const target = e.target as HTMLElement;\n\n    // Handle select filters\n    const select = target.closest('select[data-action]');\n    if (select) {\n      const action = select.getAttribute('data-action');\n      if (action === 'applyFilters') {\n        applyFilters();\n      }\n      return;\n    }\n\n    // Handle checkbox filters\n    const checkbox = target.closest('input[data-action]');\n    if (checkbox && (checkbox as HTMLInputElement).type === 'checkbox') {\n      const action = checkbox.getAttribute('data-action');\n      if (action === 'applyFilters') {\n        applyFilters();\n      }\n    }\n  });\n\n  // Search input handler\n  elements.searchInput?.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n      const query = elements.searchInput?.value;\n      if (query) {\n        postMessage({ type: 'search', query });\n      }\n    }\n  });\n\n  // Directly wire filter dropdowns to apply filters (no data-action attribute in HTML)\n  elements.sprintFilter?.addEventListener('change', applyFilters);\n  elements.typeFilter?.addEventListener('change', applyFilters);\n  elements.assignedToFilter?.addEventListener('change', applyFilters);\n}\n\n// Filter and render functions\nfunction escapeHtml(input: any): string {\n  const str = String(input ?? '');\n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction updateTimerVisibility(visible: boolean) {\n  const el = elements.timerContainer as HTMLElement | null;\n  if (!el) return;\n  if (visible) {\n    el.removeAttribute('hidden');\n  } else {\n    el.setAttribute('hidden', '');\n  }\n}\n\n// Preserve scroll position across full re-renders.\nfunction preserveScroll(\n  axis: 'x' | 'y' | 'both',\n  render: () => void,\n  container: HTMLElement | null = elements.workItemsContainer\n) {\n  const el = container;\n  if (!el) {\n    render();\n    return;\n  }\n  const prevLeft = el.scrollLeft;\n  const prevTop = el.scrollTop;\n  render();\n  try {\n    requestAnimationFrame(() => {\n      if (axis === 'x' || axis === 'both') el.scrollLeft = prevLeft;\n      if (axis === 'y' || axis === 'both') el.scrollTop = prevTop;\n    });\n  } catch {\n    if (axis === 'x' || axis === 'both') el.scrollLeft = prevLeft;\n    if (axis === 'y' || axis === 'both') el.scrollTop = prevTop;\n  }\n}\n\nfunction selectWorkItem(id: string) {\n  const num = parseInt(id, 10);\n  if (!Number.isFinite(num)) return;\n  selectedWorkItemId = num;\n  // Highlight selection in UI\n  document.querySelectorAll('[data-action=\"selectWorkItem\"]').forEach((node) => {\n    const el = node as HTMLElement;\n    const nid = parseInt(el.getAttribute('data-id') || '0', 10);\n    if (nid === num) el.classList.add('selected');\n    else el.classList.remove('selected');\n  });\n  // Load persisted draft for selected work item if present\n  try {\n    const persisted = loadDraftForWorkItem(num);\n    if (persisted !== null && elements.draftSummary) {\n      elements.draftSummary.value = persisted;\n    }\n  } catch {\n    // ignore draft load errors\n  }\n}\n\nfunction handleAddComment(workItemId: number) {\n  // Ask the extension to show an input box (more reliable than window.prompt in VS Code webviews)\n  postMessage({ type: 'addComment', workItemId });\n}\n\nfunction formatTimerDuration(seconds: number): string {\n  const h = Math.floor(seconds / 3600);\n  const m = Math.floor((seconds % 3600) / 60);\n  if (h > 0) {\n    return `${h}:${m.toString().padStart(2, '0')}`;\n  }\n  return `${m}:${Math.floor(seconds % 60)\n    .toString()\n    .padStart(2, '0')}`;\n}\n\nfunction updateTimerDisplay() {\n  const d = elements.timerDisplay;\n  const info = elements.timerInfo;\n  if (!d) return;\n  if (!currentTimer) {\n    d.textContent = '00:00:00';\n    if (info) info.textContent = '';\n    updateTimerVisibility(false);\n    return;\n  }\n  const secs = Number(currentTimer.elapsedSeconds || 0);\n  const h = Math.floor(secs / 3600)\n    .toString()\n    .padStart(2, '0');\n  const m = Math.floor((secs % 3600) / 60)\n    .toString()\n    .padStart(2, '0');\n  const s = Math.floor(secs % 60)\n    .toString()\n    .padStart(2, '0');\n  d.textContent = `${h}:${m}:${s}`;\n  if (info)\n    info.textContent = currentTimer.workItemTitle\n      ? `#${currentTimer.workItemId} \u00B7 ${currentTimer.workItemTitle}`\n      : `#${currentTimer.workItemId}`;\n  updateTimerVisibility(true);\n}\n\nfunction updateTimerButtonStates() {\n  const startBtn = (elements as any).startTimerBtn as HTMLButtonElement | null;\n  const pauseBtn = (elements as any).pauseTimerBtn as HTMLButtonElement | null;\n  const stopBtn = (elements as any).stopTimerBtn as HTMLButtonElement | null;\n  const active = !!currentTimer && currentTimer.running !== false;\n  if (startBtn) startBtn.disabled = active; // disable start while running\n  if (pauseBtn) pauseBtn.disabled = !active; // enable pause while running\n  if (stopBtn) stopBtn.disabled = !currentTimer; // enable stop when any timer exists\n}\n\nfunction handleToggleKanbanView() {\n  currentView = currentView === 'list' ? 'kanban' : 'list';\n  updateViewToggle();\n  if (currentView === 'kanban') renderKanbanView();\n  else renderWorkItems();\n}\n\nfunction handleSelfTestPing(nonce: string) {\n  postMessage({ type: 'selfTestPong', nonce });\n}\n\n// Normalize state value from different shapes of work item objects\nfunction getNormalizedState(item: any): string {\n  if (!item) return 'Unknown';\n  const raw =\n    item.state ||\n    item.fields?.['System.State'] ||\n    item['System.State'] ||\n    item.fields?.['System.State.name'];\n  const rawStr = typeof raw === 'string' && raw.trim() ? raw.trim() : '';\n  if (!rawStr) return 'Unknown';\n\n  // Map common synonyms/variants to canonical state names\n  const map: { [k: string]: string } = {\n    todo: 'To Do',\n    'to do': 'To Do',\n    new: 'New',\n    active: 'Active',\n    'in progress': 'In Progress',\n    doing: 'In Progress',\n    'doing ': 'In Progress',\n    'code review': 'Code Review',\n    testing: 'Testing',\n    done: 'Done',\n    resolved: 'Resolved',\n    closed: 'Closed',\n    removed: 'Removed',\n  };\n\n  const key = rawStr.toLowerCase();\n  return map[key] || rawStr;\n}\n\nfunction filterByStatus(status: string) {\n  // Filter work items by status and re-render\n  const filteredItems = workItems.filter((item) => {\n    const s = getNormalizedState(item);\n    return s === status;\n  });\n\n  // Clear other filters\n  if (elements.searchInput) elements.searchInput.value = '';\n  if (elements.sprintFilter) elements.sprintFilter.value = '';\n  if (elements.typeFilter) elements.typeFilter.value = '';\n  if (elements.assignedToFilter) elements.assignedToFilter.value = '';\n\n  // Update the work items display\n  elements.workItemsContainer!.innerHTML = filteredItems\n    .map((item) => {\n      const id = item.id;\n      const title = item.title || `Work Item #${id}`;\n      const state = item.state || 'Unknown';\n      const type = item.type || 'Unknown';\n      const assignedTo = item.assignedTo || 'Unassigned';\n      const priority = item.priority || 2;\n      const description = item.description || '';\n      const tags = item.tags || [];\n      const iterationPath = item.iterationPath || '';\n\n      const isSelected = selectedWorkItemId === id;\n\n      // Get work item type icon\n      const typeIcon = getWorkItemTypeIcon(type);\n\n      // Get priority class\n      const priorityClass = getPriorityClass(priority);\n\n      // Get state class\n      const stateClass = getStateClass(getNormalizedState(item));\n\n      return `\n      <div class=\"work-item-card ${isSelected ? 'selected' : ''} ${stateClass}\" \n           data-id=\"${id}\" \n           data-action=\"selectWorkItem\">\n        <div class=\"work-item-header\">\n          <div class=\"work-item-type-icon ${typeIcon.class}\">\n            ${typeIcon.icon}\n          </div>\n          <div class=\"work-item-id\">#${id}</div>\n          <div class=\"work-item-priority ${priorityClass}\">\n            ${getPriorityIcon(priority).icon} ${getPriorityIcon(priority).label}\n          </div>\n        </div>\n        \n        <div class=\"work-item-content\">\n          <div class=\"work-item-title\" title=\"${escapeHtml(title)}\">\n            ${escapeHtml(title)}\n          </div>\n          \n          ${\n            description\n              ? `\n            <div class=\"work-item-description\">\n              ${escapeHtml(description.substring(0, 120))}${description.length > 120 ? '...' : ''}\n            </div>\n          `\n              : ''\n          }\n          \n          <div class=\"work-item-details\">\n            <div class=\"work-item-meta-row\">\n              <span class=\"work-item-type\">${escapeHtml(type)}</span>\n              <span class=\"work-item-state state-${state\n                .toLowerCase()\n                .replace(/\\\\s+/g, '-')}\">${escapeHtml(state)}</span>\n            </div>\n            \n            ${\n              assignedTo !== 'Unassigned'\n                ? `\n              <div class=\"work-item-assignee\">\n                <span class=\"assignee-icon\">\uD83D\uDC64</span>\n                <span>${escapeHtml(assignedTo)}</span>\n              </div>\n            `\n                : ''\n            }\n            \n            ${\n              iterationPath\n                ? `\n              <div class=\"work-item-iteration\">\n                <span class=\"iteration-icon\">\uD83D\uDD04</span>\n                <span>${escapeHtml(iterationPath.split('\\\\\\\\').pop() || iterationPath)}</span>\n              </div>\n            `\n                : ''\n            }\n            \n            ${\n              tags.length > 0\n                ? `\n              <div class=\"work-item-tags\">\n                ${tags\n                  .slice(0, 3)\n                  .map(\n                    (tag: any) => `\n                  <span class=\"tag\">${escapeHtml(tag)}</span>\n                `\n                  )\n                  .join('')}\n                ${tags.length > 3 ? `<span class=\"tag-overflow\">+${tags.length - 3}</span>` : ''}\n              </div>\n            `\n                : ''\n            }\n          </div>\n        </div>\n        \n        <div class=\"work-item-actions\">\n          ${\n            currentTimer && Number(currentTimer.workItemId) === Number(id)\n              ? `<button class=\"action-btn timer-btn\" data-action=\"stopTimer\" data-id=\"${id}\" title=\"Start/Stop Timer\">\u23F9\uFE0F</button>`\n              : `<button class=\"action-btn timer-btn\" data-action=\"startTimer\" data-id=\"${id}\" title=\"Start/Stop Timer\">\u23F1\uFE0F</button>`\n          }\n          <button class=\"action-btn view-btn\" data-action=\"viewDetails\" data-id=\"${id}\" title=\"View Details\">\uD83D\uDC41\uFE0F</button>\n          <button class=\"action-btn edit-btn\" data-action=\"editWorkItem\" data-id=\"${id}\" title=\"Edit\">\u270F\uFE0F</button>\n        </div>\n      </div>\n    `;\n    })\n    .join('');\n\n  // Update status overview to show only the filtered status\n  updateStatusOverview(filteredItems);\n}\n\nfunction updateStatusOverview(items = workItems) {\n  if (!elements.statusOverview) return;\n\n  const statusCounts = items.reduce((acc: any, item) => {\n    const status = getNormalizedState(item);\n    acc[status] = (acc[status] || 0) + 1;\n    return acc;\n  }, {});\n\n  elements.statusOverview.innerHTML = Object.entries(statusCounts)\n    .map(([status, count]) => {\n      const stateClass = getStateClass(String(status));\n      // Show raw value as tooltip so authors can see original state strings\n      const rawTitle = status;\n      return `\n        <div class=\"status-badge ${stateClass}\" data-status=\"${status}\" title=\"${escapeHtml(\n          String(rawTitle)\n        )}\">\n          <span class=\"status-name\">${status}</span>\n          <span class=\"status-count\">${count}</span>\n        </div>\n      `;\n    })\n    .join('');\n}\n\nfunction setupMessageHandling() {\n  window.addEventListener('message', (event) => {\n    const message = event.data;\n\n    switch (message.type) {\n      case 'workItemsLoaded':\n        handleWorkItemsLoaded(message.workItems || []);\n        break;\n      case 'copilotPromptCopied': {\n        const id = message.workItemId;\n        if (elements.summaryStatus)\n          elements.summaryStatus.textContent =\n            'Copilot prompt copied to clipboard. Paste into Copilot chat to generate a summary.';\n        // Briefly show feedback then clear\n        setTimeout(() => {\n          if (elements.summaryStatus) elements.summaryStatus.textContent = '';\n        }, 3500);\n        break;\n      }\n      case 'stopAndApplyResult': {\n        const id = message.workItemId;\n        const hours = message.hours;\n        if (elements.summaryStatus)\n          elements.summaryStatus.textContent = `Applied ${hours.toFixed(\n            2\n          )} hours to work item #${id}.`;\n        // Reset draft after apply\n        if (elements.draftSummary) elements.draftSummary.value = '';\n        try {\n          if (typeof id === 'number') removeDraftForWorkItem(id);\n        } catch (e) {\n          console.warn('[webview] Failed to remove persisted draft after apply', e);\n        }\n        setTimeout(() => {\n          if (elements.summaryStatus) elements.summaryStatus.textContent = '';\n        }, 4000);\n        break;\n      }\n      case 'workItemsError':\n        handleWorkItemsError(message.error);\n        break;\n      case 'timerUpdate':\n        handleTimerUpdate(message.timer);\n        break;\n      case 'toggleKanbanView':\n        handleToggleKanbanView();\n        break;\n      case 'selfTestPing':\n        handleSelfTestPing(message.nonce);\n        break;\n      default:\n        console.log('[webview] Unknown message type:', message.type);\n    }\n  });\n}\n\nfunction requestWorkItems() {\n  if (isLoading) return;\n\n  isLoading = true;\n  showLoadingState();\n  postMessage({ type: 'getWorkItems' });\n}\n\nfunction showLoadingState() {\n  if (!elements.workItemsContainer) return;\n  preserveScroll('both', () => {\n    elements.workItemsContainer!.innerHTML = `\n      <div class=\"loading\">\n        <div>Loading work items...</div>\n      </div>\n    `;\n  });\n}\n\nfunction populateFilterDropdowns() {\n  // Populate sprint filter\n  if (elements.sprintFilter) {\n    const sprints = new Set<string>();\n    workItems.forEach((item) => {\n      const path = (item.iterationPath || item.fields?.['System.IterationPath'] || '').toString();\n      if (!path) return;\n      const sprintName = path.split('\\\\').pop() || path;\n      sprints.add(sprintName);\n    });\n\n    elements.sprintFilter.innerHTML =\n      '<option value=\"\">All Sprints</option>' +\n      Array.from(sprints)\n        .sort()\n        .map((sprint) => `<option value=\"${escapeHtml(sprint)}\">${escapeHtml(sprint)}</option>`)\n        .join('');\n  }\n\n  // Populate type filter\n  if (elements.typeFilter) {\n    const types = new Set<string>();\n    workItems.forEach((item) => {\n      const t = (item.type || item.fields?.['System.WorkItemType'] || '').toString();\n      if (t) types.add(t);\n    });\n\n    elements.typeFilter.innerHTML =\n      '<option value=\"\">All Types</option>' +\n      Array.from(types)\n        .sort()\n        .map((type) => `<option value=\"${escapeHtml(type)}\">${escapeHtml(type)}</option>`)\n        .join('');\n  }\n\n  // Populate assignee filter\n  if (elements.assignedToFilter) {\n    const assignees = new Set<string>();\n    workItems.forEach((item) => {\n      let a = item.assignedTo ?? item.fields?.['System.AssignedTo'];\n      if (a && typeof a === 'object') {\n        a = (a.displayName || a.uniqueName || a.name || '').toString();\n      }\n      a = (a || '').toString();\n      if (a && a !== 'Unassigned') assignees.add(a);\n    });\n\n    elements.assignedToFilter.innerHTML =\n      '<option value=\"\">All Assignees</option>' +\n      Array.from(assignees)\n        .sort()\n        .map(\n          (assignee) => `<option value=\"${escapeHtml(assignee)}\">${escapeHtml(assignee)}</option>`\n        )\n        .join('');\n  }\n}\n\nfunction handleWorkItemsLoaded(items: any[]) {\n  console.log('[webview] handleWorkItemsLoaded called with', items.length, 'items:', items);\n  isLoading = false;\n  workItems = items;\n  console.log('[webview] After assignment, workItems.length:', workItems.length);\n  populateFilterDropdowns();\n  renderWorkItems();\n}\n\nfunction handleWorkItemsError(error: string) {\n  console.error('[webview] Work items error:', error);\n  isLoading = false;\n\n  if (!elements.workItemsContainer) return;\n\n  elements.workItemsContainer.innerHTML = `\n    <div class=\"error\">\n      <div><strong>Error loading work items:</strong></div>\n      <div>${escapeHtml(error)}</div>\n      <button class=\"btn\" onclick=\"requestWorkItems()\" style=\"margin-top: 0.5rem;\">Retry</button>\n    </div>\n  `;\n}\n\n// Helper functions for work item rendering\nfunction getWorkItemTypeIcon(type: string): { icon: string; class: string } {\n  const typeMap: { [key: string]: { icon: string; class: string } } = {\n    Bug: { icon: '\uD83D\uDC1B', class: 'type-bug' },\n    Task: { icon: '\uD83D\uDCCB', class: 'type-task' },\n    'User Story': { icon: '\uD83D\uDCD6', class: 'type-story' },\n    Feature: { icon: '\u2B50', class: 'type-feature' },\n    Epic: { icon: '\uD83C\uDFAF', class: 'type-epic' },\n    Issue: { icon: '\u2757', class: 'type-issue' },\n    'Test Case': { icon: '\uD83E\uDDEA', class: 'type-test' },\n    'Product Backlog Item': { icon: '\uD83D\uDCC4', class: 'type-pbi' },\n  };\n\n  return typeMap[type] || { icon: '\uD83D\uDCDD', class: 'type-default' };\n}\n\nfunction getPriorityClass(priority: number): string {\n  if (priority === 1) return 'priority-1';\n  if (priority === 2) return 'priority-2';\n  if (priority === 3) return 'priority-3';\n  if (priority === 4) return 'priority-4';\n  return 'priority-default';\n}\n\nfunction getPriorityIcon(priority: number): { icon: string; label: string } {\n  if (priority === 0) return { icon: '\uD83D\uDD34', label: 'Critical' }; // Critical\n  if (priority === 1) return { icon: '\uD83D\uDFE1', label: 'High' }; // High\n  if (priority === 2) return { icon: '\uD83D\uDFE2', label: 'Medium' }; // Medium\n  if (priority === 3) return { icon: '\uD83D\uDD35', label: 'Low' }; // Low\n  if (priority === 4) return { icon: '\uD83D\uDFE3', label: 'Lowest' }; // Lowest\n  return { icon: '\uD83D\uDFE2', label: 'Medium' }; // Default\n}\n\nfunction getStateClass(state: string): string {\n  const stateClassMap: { [key: string]: string } = {\n    New: 'state-new',\n    Active: 'state-active',\n    Resolved: 'state-resolved',\n    Closed: 'state-closed',\n    Removed: 'state-removed',\n    Done: 'state-done',\n    'To Do': 'state-todo',\n    Doing: 'state-doing',\n    'In Progress': 'state-inprogress',\n    'Code Review': 'state-review',\n    Testing: 'state-testing',\n  };\n\n  return stateClassMap[state] || 'state-default';\n}\n\nfunction getVisibleItems(): any[] {\n  const q = (elements.searchInput?.value || '').trim().toLowerCase();\n  const sprint = elements.sprintFilter?.value || '';\n  const type = elements.typeFilter?.value || '';\n  const assignee = elements.assignedToFilter?.value || '';\n  const exDone = !!elements.excludeDone?.checked;\n  const exClosed = !!elements.excludeClosed?.checked;\n  const exRemoved = !!elements.excludeRemoved?.checked;\n  const exReview = !!elements.excludeInReview?.checked;\n\n  const excludedStates = new Set<string>([\n    ...(exDone ? ['Done'] : []),\n    ...(exClosed ? ['Closed'] : []),\n    ...(exRemoved ? ['Removed'] : []),\n    ...(exReview ? ['Code Review'] : []),\n  ]);\n\n  const byQuery = (item: any) => {\n    if (!q) return true;\n    const id = String(item.id ?? item.fields?.['System.Id'] ?? '');\n    const title = String(item.title ?? item.fields?.['System.Title'] ?? '').toLowerCase();\n    const tags = String(\n      item.tags\n        ? Array.isArray(item.tags)\n          ? item.tags.join(';')\n          : item.tags\n        : item.fields?.['System.Tags'] || ''\n    ).toLowerCase();\n    return id.includes(q) || title.includes(q) || tags.includes(q);\n  };\n\n  const bySprint = (item: any) => {\n    if (!sprint) return true;\n    const path = String(item.iterationPath ?? item.fields?.['System.IterationPath'] ?? '');\n    const name = path.split('\\\\').pop() || path;\n    return name === sprint;\n  };\n\n  const byType = (item: any) => {\n    if (!type) return true;\n    const t = String(item.type ?? item.fields?.['System.WorkItemType'] ?? '');\n    return t === type;\n  };\n\n  const byAssignee = (item: any) => {\n    if (!assignee) return true;\n    let a = item.assignedTo ?? item.fields?.['System.AssignedTo'];\n    if (a && typeof a === 'object') a = a.displayName || a.uniqueName || a.name;\n    return String(a || '') === assignee;\n  };\n\n  const byState = (item: any) => {\n    const s = getNormalizedState(item);\n    return !excludedStates.has(s);\n  };\n\n  return workItems.filter(\n    (it) => byQuery(it) && bySprint(it) && byType(it) && byAssignee(it) && byState(it)\n  );\n}\n\nfunction applyFilters() {\n  if (currentView === 'kanban') renderKanbanView();\n  else renderWorkItems();\n}\n\nfunction renderWorkItems() {\n  const itemsToRender = getVisibleItems();\n  console.log('[webview] renderWorkItems called, itemsToRender.length:', itemsToRender.length);\n  if (!elements.workItemsContainer) return;\n  if (itemsToRender.length === 0) {\n    preserveScroll('y', () => {\n      elements.workItemsContainer!.innerHTML = `\n        <div class=\"status-message\">\n          <div>No work items found</div>\n          <div style=\"font-size: 0.9em; color: var(--vscode-descriptionForeground); margin-top: 0.5rem;\">Use the refresh button (\uD83D\uDD04) in the header to reload work items</div>\n        </div>`;\n    });\n    return;\n  }\n\n  // Normalized field accessor reused from kanban logic\n  const getField = (item: any, field: string) => {\n    if (item == null) return undefined;\n    switch (field) {\n      case 'System.Id':\n        return item.id ?? item.fields?.['System.Id'];\n      case 'System.Title':\n        return item.title ?? item.fields?.['System.Title'];\n      case 'System.State':\n        return item.state ?? item.fields?.['System.State'];\n      case 'System.WorkItemType':\n        return item.type ?? item.fields?.['System.WorkItemType'];\n      case 'System.AssignedTo': {\n        const a = item.assignedTo || item.fields?.['System.AssignedTo'];\n        if (a && typeof a === 'object') return a.displayName || a.uniqueName || a.name;\n        return a;\n      }\n      case 'System.Tags':\n        return item.tags\n          ? Array.isArray(item.tags)\n            ? item.tags.join(';')\n            : item.tags\n          : item.fields?.['System.Tags'];\n      case 'Microsoft.VSTS.Common.Priority':\n        return item.priority ?? item.fields?.['Microsoft.VSTS.Common.Priority'];\n      default:\n        return item[field] ?? item.fields?.[field];\n    }\n  };\n\n  const html = itemsToRender\n    .map((item) => {\n      const idRaw = getField(item, 'System.Id');\n      const id = typeof idRaw === 'number' ? idRaw : Number(idRaw);\n      const title = getField(item, 'System.Title') || `Work Item #${id}`;\n      const state = getField(item, 'System.State') || 'Unknown';\n      const type = getField(item, 'System.WorkItemType') || 'Unknown';\n      const assignedRaw = getField(item, 'System.AssignedTo');\n      const assignedTo = assignedRaw || 'Unassigned';\n      const priority = getField(item, 'Microsoft.VSTS.Common.Priority') || 2;\n      const tagsField = getField(item, 'System.Tags');\n      const tags =\n        typeof tagsField === 'string'\n          ? tagsField.split(';').filter(Boolean)\n          : Array.isArray(tagsField)\n            ? tagsField\n            : [];\n      const iterationPath = getField(item, 'System.IterationPath') || '';\n      // areaPath not currently displayed\n      const description = item.description || item.fields?.['System.Description'] || '';\n\n      const isSelected = selectedWorkItemId === id;\n      const typeIcon = getWorkItemTypeIcon(String(type));\n      const priorityClass = getPriorityClass(Number(priority));\n      const stateClass = getStateClass(String(state));\n\n      // Check if timer is running on this work item\n      const hasActiveTimer = !!currentTimer && Number(currentTimer.workItemId) === Number(id);\n      const timerDisplay = hasActiveTimer\n        ? formatTimerDuration(currentTimer.elapsedSeconds || 0)\n        : '';\n\n      return `\n      <div class=\"work-item-card ${isSelected ? 'selected' : ''} ${stateClass} ${\n        hasActiveTimer ? 'has-active-timer' : ''\n      }\" data-id=\"${id}\" data-action=\"selectWorkItem\">\n        <div class=\"work-item-header\">\n          <div class=\"work-item-type-icon ${typeIcon.class}\">${typeIcon.icon}</div>\n          <div class=\"work-item-id\">#${id}</div>\n          ${\n            hasActiveTimer\n              ? `<div class=\"timer-indicator\" title=\"Timer running: ${timerDisplay}\">\u23F1\uFE0F ${timerDisplay}</div>`\n              : ''\n          }\n          <div class=\"work-item-priority ${priorityClass}\">${\n            getPriorityIcon(Number(priority)).icon\n          } ${getPriorityIcon(Number(priority)).label}</div>\n        </div>\n        <div class=\"work-item-content\">\n          <div class=\"work-item-title\" title=\"${escapeHtml(String(title))}\">${escapeHtml(\n            String(title)\n          )}</div>\n          ${\n            description\n              ? `<div class=\"work-item-description\">${escapeHtml(\n                  String(description).substring(0, 120)\n                )}${String(description).length > 120 ? '...' : ''}</div>`\n              : ''\n          }\n          <div class=\"work-item-details\">\n            <div class=\"work-item-meta-row\">\n              <span class=\"work-item-type\">${escapeHtml(String(type))}</span>\n              <span class=\"work-item-state state-${String(state)\n                .toLowerCase()\n                .replace(/\\s+/g, '-')}\">${escapeHtml(String(state))}</span>\n            </div>\n            ${\n              assignedTo && assignedTo !== 'Unassigned'\n                ? `<div class=\"work-item-assignee\"><span class=\"assignee-icon\">\uD83D\uDC64</span><span>${escapeHtml(\n                    String(assignedTo)\n                  )}</span></div>`\n                : ''\n            }\n            ${\n              iterationPath\n                ? `<div class=\"work-item-iteration\"><span class=\"iteration-icon\">\uD83D\uDD04</span><span>${escapeHtml(\n                    String(iterationPath).split('\\\\').pop() || String(iterationPath)\n                  )}</span></div>`\n                : ''\n            }\n            ${\n              tags.length\n                ? `<div class=\"work-item-tags\">${tags\n                    .slice(0, 3)\n                    .map(\n                      (t: any) =>\n                        `<span class=\"work-item-tag\">${escapeHtml(String(t).trim())}</span>`\n                    )\n                    .join('')}${\n                    tags.length > 3 ? `<span class=\"tag-overflow\">+${tags.length - 3}</span>` : ''\n                  }</div>`\n                : ''\n            }\n          </div>\n        </div>\n        <div class=\"work-item-actions\">\n          ${\n            hasActiveTimer\n              ? `<button class=\"action-btn timer-btn\" data-action=\"stopTimer\" data-id=\"${id}\" title=\"Start/Stop Timer\">\u23F9\uFE0F</button>`\n              : `<button class=\"action-btn timer-btn\" data-action=\"startTimer\" data-id=\"${id}\" title=\"Start/Stop Timer\">\u23F1\uFE0F</button>`\n          }\n          <button class=\"action-btn comment-btn\" data-action=\"addComment\" data-id=\"${id}\" title=\"Add Comment\">\uD83D\uDCAC</button>\n          <button class=\"action-btn view-btn\" data-action=\"viewDetails\" data-id=\"${id}\" title=\"View Details\">\uD83D\uDC41\uFE0F</button>\n          <button class=\"action-btn edit-btn\" data-action=\"editWorkItem\" data-id=\"${id}\" title=\"Edit\">\u270F\uFE0F</button>\n        </div>\n      </div>`;\n    })\n    .join('');\n\n  preserveScroll('y', () => {\n    elements.workItemsContainer!.innerHTML = html;\n  });\n  updateStatusOverview(itemsToRender);\n}\n\nfunction updateViewToggle() {\n  console.log('[webview] updateViewToggle called, currentView:', currentView);\n  const viewToggleBtns = document.querySelectorAll('.view-toggle-btn');\n  console.log('[webview] Found', viewToggleBtns.length, 'view toggle buttons');\n\n  // Since we removed the header buttons, we'll rely on symbolic sidebar controls\n  if (viewToggleBtns.length === 0) {\n    console.log('[webview] No view toggle buttons found, relying on sidebar controls');\n    return;\n  }\n\n  viewToggleBtns.forEach((btn) => {\n    const btnView = (btn as HTMLElement).dataset.view;\n    if (btnView === currentView) {\n      btn.classList.add('active');\n      console.log('[webview] Set active:', btnView);\n    } else {\n      btn.classList.remove('active');\n    }\n  });\n}\n\nfunction renderKanbanView() {\n  const itemsToRender = getVisibleItems();\n  console.log('[webview] renderKanbanView called, itemsToRender.length:', itemsToRender.length);\n  if (!elements.workItemsContainer) return;\n\n  if (itemsToRender.length === 0) {\n    // No board content, simple render\n    elements.workItemsContainer!.innerHTML = `\n        <div class=\"status-message\">\n          <div>No work items found</div>\n          <div style=\"font-size: 0.9em; color: var(--vscode-descriptionForeground); margin-top: 0.5rem;\">\n            Use the refresh button (\uD83D\uDD04) in the header to reload work items\n          </div>\n        </div>\n      `;\n    return;\n  }\n\n  // Helper to normalize field access (supports flattened or original Azure DevOps shape)\n  const getField = (item: any, field: string) => {\n    if (item == null) return undefined;\n    // flattened mapping first\n    switch (field) {\n      case 'System.Id':\n        return item.id ?? item.fields?.['System.Id'];\n      case 'System.Title':\n        return item.title ?? item.fields?.['System.Title'];\n      case 'System.State':\n        return item.state ?? item.fields?.['System.State'];\n      case 'System.WorkItemType':\n        return item.type ?? item.fields?.['System.WorkItemType'];\n      case 'System.AssignedTo': {\n        const a = item.assignedTo || item.fields?.['System.AssignedTo'];\n        // flattened assignedTo is already a displayName string\n        if (a && typeof a === 'object') return a.displayName || a.uniqueName || a.name;\n        return a;\n      }\n      case 'System.Tags':\n        return item.tags\n          ? Array.isArray(item.tags)\n            ? item.tags.join(';')\n            : item.tags\n          : item.fields?.['System.Tags'];\n      case 'Microsoft.VSTS.Common.Priority':\n        return item.priority ?? item.fields?.['Microsoft.VSTS.Common.Priority'];\n      default:\n        return item[field] ?? item.fields?.[field];\n    }\n  };\n\n  // Build grouping by normalized state\n  const stateGroups = itemsToRender.reduce(\n    (groups: any, item) => {\n      let state = getField(item, 'System.State') || 'Unknown';\n      if (typeof state !== 'string') state = String(state ?? 'Unknown');\n      if (!groups[state]) groups[state] = [];\n      groups[state].push(item);\n      return groups;\n    },\n    {} as Record<string, any[]>\n  );\n\n  // Define common states order\n  const stateOrder = [\n    'New',\n    'To Do',\n    'Active',\n    'In Progress',\n    'Doing',\n    'Code Review',\n    'Testing',\n    'Resolved',\n    'Done',\n    'Closed',\n  ];\n  const orderedStates = stateOrder.filter((state) => stateGroups[state]);\n\n  // Add any additional states not in the predefined order\n  Object.keys(stateGroups).forEach((state) => {\n    if (!orderedStates.includes(state)) {\n      orderedStates.push(state);\n    }\n  });\n\n  const kanbanHtml = `\n    <div class=\"kanban-board\">\n      ${orderedStates\n        .map((state) => {\n          const items = stateGroups[state];\n          const stateClass = getStateClass(state);\n\n          return `\n          <div class=\"kanban-column\">\n            <div class=\"kanban-column-header ${stateClass}\">\n              <h3>${state}</h3>\n              <span class=\"item-count\">${items.length}</span>\n            </div>\n            <div class=\"kanban-column-content\">\n              ${items\n                .map((item: any) => {\n                  const idRaw = getField(item, 'System.Id');\n                  const id = typeof idRaw === 'number' ? idRaw : Number(idRaw);\n                  const title = getField(item, 'System.Title') || `Work Item #${id}`;\n                  const type = getField(item, 'System.WorkItemType') || 'Unknown';\n                  const assignedRaw = getField(item, 'System.AssignedTo');\n                  const assignedTo = assignedRaw || 'Unassigned';\n                  const priority = getField(item, 'Microsoft.VSTS.Common.Priority') || 2;\n                  const tagsField = getField(item, 'System.Tags');\n                  const tags =\n                    typeof tagsField === 'string'\n                      ? tagsField.split(';').filter(Boolean)\n                      : Array.isArray(tagsField)\n                        ? tagsField\n                        : [];\n\n                  const isSelected = selectedWorkItemId === id;\n                  const typeIcon = getWorkItemTypeIcon(type);\n                  const priorityClass = getPriorityClass(Number(priority));\n\n                  // Check if timer is running on this work item\n                  const hasActiveTimer =\n                    !!currentTimer && Number(currentTimer.workItemId) === Number(id);\n                  const timerDisplay = hasActiveTimer\n                    ? formatTimerDuration(currentTimer.elapsedSeconds || 0)\n                    : '';\n\n                  let shortAssigned = assignedTo;\n                  if (typeof shortAssigned === 'string' && shortAssigned.includes(' '))\n                    shortAssigned = shortAssigned.split(' ')[0];\n\n                  return `\n                  <div class=\"kanban-card ${isSelected ? 'selected' : ''} ${\n                    hasActiveTimer ? 'has-active-timer' : ''\n                  }\" data-id=\"${id}\" data-action=\"selectWorkItem\">\n                    <div class=\"kanban-card-header\">\n                      <div class=\"work-item-type-icon ${typeIcon.class}\">${typeIcon.icon}</div>\n                      <div class=\"work-item-id\">#${id}</div>\n                      ${\n                        hasActiveTimer\n                          ? `<div class=\"timer-indicator\" title=\"Timer running: ${timerDisplay}\">\u23F1\uFE0F ${timerDisplay}</div>`\n                          : ''\n                      }\n                      <div class=\"work-item-priority ${priorityClass}\">${\n                        getPriorityIcon(Number(priority)).icon\n                      } ${getPriorityIcon(Number(priority)).label}</div>\n                    </div>\n                    <div class=\"kanban-card-content\">\n                      <div class=\"work-item-title\" title=\"${escapeHtml(\n                        String(title)\n                      )}\">${escapeHtml(String(title))}</div>\n                      <div class=\"kanban-card-meta\">\n                        <span class=\"work-item-type\">${escapeHtml(String(type))}</span>\n                        ${\n                          assignedTo && assignedTo !== 'Unassigned'\n                            ? `<span class=\"work-item-assignee\"><span class=\"assignee-icon\">\uD83D\uDC64</span>${escapeHtml(\n                                String(shortAssigned)\n                              )}</span>`\n                            : ''\n                        }\n                      </div>\n                      ${\n                        tags.length\n                          ? `<div class=\"work-item-tags\">${tags\n                              .slice(0, 2)\n                              .map(\n                                (t: any) =>\n                                  `<span class=\"work-item-tag\">${escapeHtml(\n                                    String(t).trim()\n                                  )}</span>`\n                              )\n                              .join('')}${\n                              tags.length > 2\n                                ? `<span class=\"tag-overflow\">+${tags.length - 2}</span>`\n                                : ''\n                            }</div>`\n                          : ''\n                      }\n                    </div>\n                    <div class=\"kanban-card-actions\">\n                      ${\n                        hasActiveTimer\n                          ? `<button class=\"action-btn timer-btn\" data-action=\"stopTimer\" data-id=\"${id}\" title=\"Start/Stop Timer\">\u23F9\uFE0F</button>`\n                          : `<button class=\"action-btn timer-btn\" data-action=\"startTimer\" data-id=\"${id}\" title=\"Start/Stop Timer\">\u23F1\uFE0F</button>`\n                      }\n                      <button class=\"action-btn comment-btn\" data-action=\"addComment\" data-id=\"${id}\" title=\"Add Comment\">\uD83D\uDCAC</button>\n                      <button class=\"action-btn edit-btn\" data-action=\"editWorkItem\" data-id=\"${id}\" title=\"Edit\">\u270F\uFE0F</button>\n                      <button class=\"action-btn view-btn\" data-action=\"viewDetails\" data-id=\"${id}\" title=\"View Details\">\uD83D\uDC41\uFE0F</button>\n                    </div>\n                  </div>`;\n                })\n                .join('')}\n            </div>\n          </div>\n        `;\n        })\n        .join('')}\n    </div>\n  `;\n\n  // Preserve horizontal scroll of the inner kanban board rather than the outer container\n  const prevLeft =\n    (elements.workItemsContainer!.querySelector('.kanban-board') as HTMLElement | null)\n      ?.scrollLeft ?? 0;\n  elements.workItemsContainer!.innerHTML = kanbanHtml;\n  try {\n    requestAnimationFrame(() => {\n      const board = elements.workItemsContainer!.querySelector(\n        '.kanban-board'\n      ) as HTMLElement | null;\n      if (board) board.scrollLeft = prevLeft;\n    });\n  } catch {\n    const board = elements.workItemsContainer!.querySelector('.kanban-board') as HTMLElement | null;\n    if (board) board.scrollLeft = prevLeft;\n  }\n  updateStatusOverview(itemsToRender);\n}\n\nfunction startTimerForWorkItem(id: number) {\n  selectWorkItem(id.toString());\n  postMessage({ type: 'startTimer', workItemId: id });\n}\n\nfunction viewWorkItemDetails(id: number) {\n  postMessage({ type: 'viewWorkItem', workItemId: id });\n}\n\nfunction handleTimerUpdate(timer: any) {\n  currentTimer = timer;\n\n  if (timer) {\n    updateTimerDisplay();\n    updateTimerButtonStates();\n    // Re-render work items to show timer indicators\n    if (currentView === 'kanban') {\n      renderKanbanView();\n    } else {\n      renderWorkItems();\n    }\n    // Prefill draft summary with an editable suggestion when a timer is active\n    try {\n      const workItemId = timer.workItemId;\n      const persisted = workItemId ? loadDraftForWorkItem(workItemId) : null;\n      if (persisted && persisted.length > 0) {\n        // Use persisted draft if present\n        if (elements.draftSummary) elements.draftSummary.value = persisted;\n      } else if (elements.draftSummary && elements.draftSummary.value.trim() === '') {\n        const seconds = (timer.elapsedSeconds || 0) as number;\n        const hours = seconds / 3600 || 0;\n        const title = timer.workItemTitle || `#${timer.workItemId}`;\n        elements.draftSummary.value = `Worked approximately ${hours.toFixed(\n          2\n        )} hours on ${title}. Provide a short summary of what you accomplished.`;\n      }\n    } catch (e) {\n      console.warn('[webview] Failed to prefill summary', e);\n    }\n  } else {\n    // Timer stopped - just update display and buttons\n    updateTimerDisplay();\n    updateTimerButtonStates();\n    // Re-render work items to remove timer indicators\n    if (currentView === 'kanban') {\n      renderKanbanView();\n    } else {\n      renderWorkItems();\n    }\n  }\n}\n\n// Save draft to localStorage\nfunction saveDraftForWorkItem(workItemId: number, text: string) {\n  try {\n    localStorage.setItem(`azuredevops.draft.${workItemId}`, text || '');\n    console.log('[webview] Saved draft for work item', workItemId);\n  } catch (e) {\n    console.warn('[webview] Failed to save draft to localStorage', e);\n  }\n}\n\n// Load draft from localStorage\nfunction loadDraftForWorkItem(workItemId: number): string | null {\n  try {\n    const v = localStorage.getItem(`azuredevops.draft.${workItemId}`);\n    return v;\n  } catch (e) {\n    console.warn('[webview] Failed to load draft from localStorage', e);\n    return null;\n  }\n}\n\n// Remove draft from localStorage\nfunction removeDraftForWorkItem(workItemId: number) {\n  try {\n    localStorage.removeItem(`azuredevops.draft.${workItemId}`);\n    console.log('[webview] Removed draft for work item', workItemId);\n  } catch (e) {\n    console.warn('[webview] Failed to remove draft from localStorage', e);\n  }\n}\n\n// Wire textarea change/input events to persist drafts\n(function wireDraftAutosave() {\n  // Defer until DOM ready\n  const attemptWire = () => {\n    if (!elements.draftSummary) return false;\n    const ta = elements.draftSummary as HTMLTextAreaElement;\n\n    // Save on input (fast) and on blur (ensure save)\n    ta.addEventListener('input', () => {\n      const workItemId = currentTimer ? currentTimer.workItemId : selectedWorkItemId;\n      if (!workItemId) return;\n      saveDraftForWorkItem(workItemId, ta.value);\n    });\n    ta.addEventListener('blur', () => {\n      const workItemId = currentTimer ? currentTimer.workItemId : selectedWorkItemId;\n      if (!workItemId) return;\n      saveDraftForWorkItem(workItemId, ta.value);\n    });\n\n    return true;\n  };\n\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => setTimeout(attemptWire, 0));\n  } else {\n    setTimeout(attemptWire, 0);\n  }\n})();\n\n// Load persisted draft when the timer updates (or selection changes)\n// Extend existing handleTimerUpdate behavior to load persisted draft for the current work item\n// Also attempt to load a persisted draft when a work item is selected (if selection flow exists)\n// Listen for a custom message or selection; reuse existing selection flow if possible by reacting to selectedWorkItemId changes\n(function watchSelectionLoadDraft() {\n  // Since there's no centralized selection event, poll for changes to selectedWorkItemId and update when it changes\n  let lastSelected: number | null = null;\n  setInterval(() => {\n    if (selectedWorkItemId && selectedWorkItemId !== lastSelected) {\n      lastSelected = selectedWorkItemId;\n      try {\n        const persisted = loadDraftForWorkItem(selectedWorkItemId as number);\n        if (persisted !== null && elements.draftSummary) {\n          elements.draftSummary.value = persisted;\n        }\n      } catch (e) {\n        // ignore\n      }\n    }\n  }, 500);\n})();\n\n// When stop and apply succeeds we clear the persisted draft\n// We already handle 'stopAndApplyResult' messages and clear the UI draft; also remove persisted value\n(function hookClearOnApply() {\n  // augment existing message handler behavior by observing messages posted to the window\n  // The setupMessageHandling already handles 'stopAndApplyResult' and clears the UI; ensure persisted draft removed as well\n  const originalHandler = window.addEventListener;\n  // We don't override global listeners; instead ensure removal in the message branch above where we handle 'stopAndApplyResult'\n})();\n\n// Make functions globally available for onclick handlers\n(window as any).requestWorkItems = requestWorkItems;\n\n// Add selected state styling\nconst style = document.createElement('style');\nstyle.textContent = `\n  .work-item.selected {\n    background: var(--vscode-list-activeSelectionBackground, #094771) !important;\n    border-color: var(--vscode-list-activeSelectionForeground, #ffffff);\n  }\n`;\ndocument.head.appendChild(style);\n\n// Initialize when DOM is ready\nfunction startApp() {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', init);\n  } else {\n    init();\n  }\n}\n\n// Activity detection for timer auto-resume\n(function setupActivityDetection() {\n  let lastActivityTime = Date.now();\n  let activityPingTimer: NodeJS.Timeout | undefined;\n\n  // Throttle activity pings to avoid spamming the extension\n  function sendActivityPing() {\n    if (activityPingTimer) return; // Already scheduled\n\n    activityPingTimer = setTimeout(() => {\n      postMessage({ type: 'activity' });\n      activityPingTimer = undefined;\n    }, 500); // Send activity ping at most once every 500ms\n  }\n\n  // Events that indicate user activity\n  const activityEvents = ['click', 'keydown', 'scroll', 'mousemove', 'touchstart', 'focus'];\n\n  // Add throttled event listeners\n  activityEvents.forEach((eventType) => {\n    document.addEventListener(\n      eventType,\n      () => {\n        const now = Date.now();\n        // Only send activity ping if enough time has passed since last activity\n        if (now - lastActivityTime > 1000) {\n          // Minimum 1 second between activities\n          lastActivityTime = now;\n          sendActivityPing();\n        }\n      },\n      { passive: true }\n    );\n  });\n\n  // Also send activity ping when the webview gains focus/visibility\n  document.addEventListener('visibilitychange', () => {\n    if (!document.hidden) {\n      sendActivityPing();\n    }\n  });\n\n  // Send initial activity ping when webview loads\n  sendActivityPing();\n})();\n\n// Start the app\nstartApp();\n"],
  "mappings": "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",
  "names": ["id"]
}
